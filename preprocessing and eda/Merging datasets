{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# **Loading the data files**"],"metadata":{"id":"QKj8M9u_N7JA"}},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np"],"metadata":{"id":"9OerhejdTUkW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-Qa7Hs5KTgDF","executionInfo":{"status":"ok","timestamp":1725379738807,"user_tz":-330,"elapsed":27950,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"ebde3185-f5ca-4f92-d089-077a1cec93d7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["drive_path='/content/drive/MyDrive/MSc. Major Project/Final datasets'"],"metadata":{"id":"UGBkwmyBUfHM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["bse_data=pd.read_csv('/content/drive/MyDrive/MSc. Major Project/Final datasets/BSE Sensex 30 Historical Data.csv')\n","cpi_data=pd.read_excel('/content/drive/MyDrive/MSc. Major Project/Final datasets/CPI_India.xlsx')\n","crude_oil=pd.read_csv('/content/drive/MyDrive/MSc. Major Project/Final datasets/Crude Oil WTI Futures Historical Data.csv')\n","ecb=pd.read_excel('/content/drive/MyDrive/MSc. Major Project/Final datasets/ECB.xlsx')\n","gold=pd.read_csv('/content/drive/MyDrive/MSc. Major Project/Final datasets/Gold Mini Futures Historical Data.csv')\n","bond_data=pd.read_csv('/content/drive/MyDrive/MSc. Major Project/Final datasets/India 10-Year Bond Yield Historical Data.csv')\n","nifty=pd.read_csv('/content/drive/MyDrive/MSc. Major Project/Final datasets/Nifty 50 Historical Data.csv')\n","repo_rate=pd.read_excel('/content/drive/MyDrive/MSc. Major Project/Final datasets/India_repo_rate.xlsx')\n","india_inflation_rate=pd.read_excel('/content/drive/MyDrive/MSc. Major Project/Final datasets/CPI_India.xlsx')\n","holiday=pd.read_excel('/content/drive/MyDrive/MSc. Major Project/Final datasets/holiday.xlsx')\n","data_gpr_export=pd.read_excel('/content/drive/MyDrive/MSc. Major Project/Final datasets/data_gpr_export.xlsx')\n","US_Dollar=pd.read_csv(\"/content/drive/MyDrive/MSc. Major Project/Final datasets/US Dollar Index Historical Data.csv\")\n","Silver_Mini=pd.read_csv(\"/content/drive/MyDrive/MSc. Major Project/Final datasets/Silver Mini Futures Historical Data.csv\")\n","US_federal_target_rate=pd.read_excel(\"/content/drive/MyDrive/MSc. Major Project/Final datasets/US_federal_target_rate.xlsx\")\n","USD_INR=pd.read_csv(\"/content/drive/MyDrive/MSc. Major Project/Final datasets/USD_INR Historical Data.csv\")\n","WPI=pd.read_excel('/content/drive/MyDrive/MSc. Major Project/Final datasets/WPI.xlsx')\n","Crude=pd.read_csv(\"/content/drive/MyDrive/MSc. Major Project/Final datasets/MCX ICOMDEX Crude Oil Historical Data.csv\")\n","reverse_repo=pd.read_excel(\"/content/drive/MyDrive/MSc. Major Project/Final datasets/Reverse repo rate.xlsx\")"],"metadata":{"id":"9z06g-RfVWzY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["india_vix=pd.read_csv('India VIX Historical Data.csv')"],"metadata":{"id":"mIn_FXcZRcQ6"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# 1. **BSE (Bombay Stock Exchange)**\n","The BSE data is essential for gold price forecasting because it provides insights into the broader financial market trends in India. The performance of stock markets, like the BSE, often reflects investor sentiment, economic conditions, and market volatility, all of which can influence gold prices. For example:\n","\n","- **Market Sentiment:** When the stock market experiences high volatility or a downturn, investors often turn to gold as a safe-haven asset, driving up its price.\n","- **Economic Indicators:** The BSE index can signal economic health. A strong economy might reduce the demand for gold, while economic uncertainty can increase it.\n","- **Correlation Analysis:** Historical data from the BSE can be analyzed to identify correlations between stock market movements and gold prices, improving the accuracy of forecasts."],"metadata":{"id":"Zylxzpz8JMN7"}},{"cell_type":"code","source":["bse_data.head()"],"metadata":{"id":"myPdiaMqY3bo","executionInfo":{"status":"ok","timestamp":1723275295100,"user_tz":-330,"elapsed":493,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"7fc7afd5-82f7-4060-f3eb-cf441521baec","colab":{"base_uri":"https://localhost:8080/","height":206}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Date      Price       Open       High        Low    Vol. Change %\n","0  29-07-2024  81,355.84  81,679.65  81,908.43  81,135.91  19.44M    0.03%\n","1  26-07-2024  81,332.72  80,158.50  81,427.18  80,013.60  18.40M    1.62%\n","2  25-07-2024  80,039.80  79,542.11  80,143.10  79,477.83   9.65M   -0.14%\n","3  24-07-2024  80,148.88  80,343.38  80,519.58  79,750.51   9.89M   -0.35%\n","4  23-07-2024  80,429.04  80,724.30  80,766.41  79,224.32  13.07M   -0.09%"],"text/html":["\n","  <div id=\"df-025d0bff-6e46-42ee-a63e-3d1566a42265\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Price</th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Vol.</th>\n","      <th>Change %</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>29-07-2024</td>\n","      <td>81,355.84</td>\n","      <td>81,679.65</td>\n","      <td>81,908.43</td>\n","      <td>81,135.91</td>\n","      <td>19.44M</td>\n","      <td>0.03%</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>26-07-2024</td>\n","      <td>81,332.72</td>\n","      <td>80,158.50</td>\n","      <td>81,427.18</td>\n","      <td>80,013.60</td>\n","      <td>18.40M</td>\n","      <td>1.62%</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>25-07-2024</td>\n","      <td>80,039.80</td>\n","      <td>79,542.11</td>\n","      <td>80,143.10</td>\n","      <td>79,477.83</td>\n","      <td>9.65M</td>\n","      <td>-0.14%</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>24-07-2024</td>\n","      <td>80,148.88</td>\n","      <td>80,343.38</td>\n","      <td>80,519.58</td>\n","      <td>79,750.51</td>\n","      <td>9.89M</td>\n","      <td>-0.35%</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>23-07-2024</td>\n","      <td>80,429.04</td>\n","      <td>80,724.30</td>\n","      <td>80,766.41</td>\n","      <td>79,224.32</td>\n","      <td>13.07M</td>\n","      <td>-0.09%</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-025d0bff-6e46-42ee-a63e-3d1566a42265')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-025d0bff-6e46-42ee-a63e-3d1566a42265 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-025d0bff-6e46-42ee-a63e-3d1566a42265');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b80f4530-5866-41d4-a802-b702c3d41b90\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b80f4530-5866-41d4-a802-b702c3d41b90')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b80f4530-5866-41d4-a802-b702c3d41b90 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"bse_data","summary":"{\n  \"name\": \"bse_data\",\n  \"rows\": 3324,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 3324,\n        \"samples\": [\n          \"23-08-2012\",\n          \"02-11-2022\",\n          \"29-09-2020\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3324,\n        \"samples\": [\n          \"17,850.22\",\n          \"60,906.09\",\n          \"37,973.22\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Open\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3319,\n        \"samples\": [\n          \"37,747.91\",\n          \"29,134.93\",\n          \"20,351.39\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"High\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3322,\n        \"samples\": [\n          \"32,199.91\",\n          \"48,478.34\",\n          \"21,039.42\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Low\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3323,\n        \"samples\": [\n          \"17,792.87\",\n          \"60,794.39\",\n          \"37,831.35\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Vol.\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2138,\n        \"samples\": [\n          \"40.99M\",\n          \"6.64M\",\n          \"11.27K\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Change %\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 515,\n        \"samples\": [\n          \"-1.25%\",\n          \"2.55%\",\n          \"2.01%\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["bse_data = bse_data.rename(columns={\n","    'Date': 'Date',\n","    'Price': 'BSE_Price',\n","    'Open': 'BSE_Open',\n","    'High': 'BSE_High',\n","    'Low': 'BSE_Low',\n","    'Vol.': 'BSE_Vol.',\n","    'Change %': 'BSE_Change %'\n","})\n","\n","print(bse_data.columns)\n"],"metadata":{"id":"FGSGBV8-ZhJF","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1725379970159,"user_tz":-330,"elapsed":425,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"0559f0a0-9f38-4d2a-f414-585953c2c7e3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Index(['Date', 'BSE_Price', 'BSE_Open', 'BSE_High', 'BSE_Low', 'BSE_Vol.',\n","       'BSE_Change %'],\n","      dtype='object')\n"]}]},{"cell_type":"code","source":["bse_data.drop(columns=['BSE_Change %'],inplace=True)#,'BSE_Open','BSE_High','BSE_Low'],inplace=True)\n","bse_data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"zVELpFXgNlBO","executionInfo":{"status":"ok","timestamp":1725380032517,"user_tz":-330,"elapsed":441,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"071f2a75-bf51-41b2-cdcf-0417e7f31523"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Date  BSE_Price\n","0  03-09-2024  82,555.44\n","1  02-09-2024  82,559.84\n","2  30-08-2024  82,365.77\n","3  29-08-2024  82,134.61\n","4  28-08-2024  81,785.56"],"text/html":["\n","  <div id=\"df-3d2939f8-9e56-4c3d-9653-b86ff7668a39\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>BSE_Price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>03-09-2024</td>\n","      <td>82,555.44</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>02-09-2024</td>\n","      <td>82,559.84</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>30-08-2024</td>\n","      <td>82,365.77</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>29-08-2024</td>\n","      <td>82,134.61</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>28-08-2024</td>\n","      <td>81,785.56</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3d2939f8-9e56-4c3d-9653-b86ff7668a39')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3d2939f8-9e56-4c3d-9653-b86ff7668a39 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3d2939f8-9e56-4c3d-9653-b86ff7668a39');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fb81401b-5728-4f58-88cc-9a4e909bb745\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fb81401b-5728-4f58-88cc-9a4e909bb745')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fb81401b-5728-4f58-88cc-9a4e909bb745 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"bse_data","summary":"{\n  \"name\": \"bse_data\",\n  \"rows\": 3349,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3349,\n        \"samples\": [\n          \"13-04-2017\",\n          \"15-01-2014\",\n          \"28-05-2018\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BSE_Price\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3349,\n        \"samples\": [\n          \"29,461.45\",\n          \"21,289.49\",\n          \"35,165.48\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["bse_data.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":147},"id":"X9E4xlA_SRuh","executionInfo":{"status":"ok","timestamp":1725380037198,"user_tz":-330,"elapsed":422,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"c2c00478-2ccb-4fe2-a02b-7832902e8002"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Date         0\n","BSE_Price    0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Date</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>BSE_Price</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["bse_data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uYibdOt_TKEi","executionInfo":{"status":"ok","timestamp":1725380042088,"user_tz":-330,"elapsed":427,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"eb5914b5-ac76-468a-f94e-3900bdb27f1e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3349 entries, 0 to 3348\n","Data columns (total 2 columns):\n"," #   Column     Non-Null Count  Dtype \n","---  ------     --------------  ----- \n"," 0   Date       3349 non-null   object\n"," 1   BSE_Price  3349 non-null   object\n","dtypes: object(2)\n","memory usage: 52.5+ KB\n"]}]},{"cell_type":"code","source":["\n","bse_data['Date'] = pd.to_datetime(bse_data['Date'], format='%d-%m-%Y')\n","bse_data['BSE_Price'] = bse_data['BSE_Price'].str.replace(',', '').astype(float)\n","bse_data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"j3d_g8NjUPyr","executionInfo":{"status":"ok","timestamp":1725380147687,"user_tz":-330,"elapsed":423,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"fa7767a7-8bc4-421b-d7a3-336fcc119967"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3349 entries, 0 to 3348\n","Data columns (total 2 columns):\n"," #   Column     Non-Null Count  Dtype         \n","---  ------     --------------  -----         \n"," 0   Date       3349 non-null   datetime64[ns]\n"," 1   BSE_Price  3349 non-null   float64       \n","dtypes: datetime64[ns](1), float64(1)\n","memory usage: 52.5 KB\n"]}]},{"cell_type":"code","source":["bse_data.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":147},"id":"R-ueoSwDTRaJ","executionInfo":{"status":"ok","timestamp":1725380152343,"user_tz":-330,"elapsed":438,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"44a0ab18-ba48-47fc-d1a5-75f5a75cb087"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Date         0\n","BSE_Price    0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Date</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>BSE_Price</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["bse_data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"6SqUKdABSZJa","executionInfo":{"status":"ok","timestamp":1725380161948,"user_tz":-330,"elapsed":430,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"3e75e765-1105-4f14-c11c-03478b2d7fab"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        Date  BSE_Price\n","0 2024-09-03   82555.44\n","1 2024-09-02   82559.84\n","2 2024-08-30   82365.77\n","3 2024-08-29   82134.61\n","4 2024-08-28   81785.56"],"text/html":["\n","  <div id=\"df-40b68dd8-53bc-47bd-9f7e-6414b015bc5f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>BSE_Price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2024-09-03</td>\n","      <td>82555.44</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2024-09-02</td>\n","      <td>82559.84</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2024-08-30</td>\n","      <td>82365.77</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2024-08-29</td>\n","      <td>82134.61</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2024-08-28</td>\n","      <td>81785.56</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-40b68dd8-53bc-47bd-9f7e-6414b015bc5f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-40b68dd8-53bc-47bd-9f7e-6414b015bc5f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-40b68dd8-53bc-47bd-9f7e-6414b015bc5f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a5c8dcca-74b7-4e79-9d87-83e8a02283f3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a5c8dcca-74b7-4e79-9d87-83e8a02283f3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a5c8dcca-74b7-4e79-9d87-83e8a02283f3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"bse_data","summary":"{\n  \"name\": \"bse_data\",\n  \"rows\": 3349,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2011-02-24 00:00:00\",\n        \"max\": \"2024-09-03 00:00:00\",\n        \"num_unique_values\": 3349,\n        \"samples\": [\n          \"2017-04-13 00:00:00\",\n          \"2014-01-15 00:00:00\",\n          \"2018-05-28 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BSE_Price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17015.54305667693,\n        \"min\": 15175.08,\n        \"max\": 82559.84,\n        \"num_unique_values\": 3349,\n        \"samples\": [\n          29461.45,\n          21289.49,\n          35165.48\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":23}]},{"cell_type":"markdown","source":["# **CPI (Consumer Price Index (CPI))**\n","\n","- **Inflation Indicator:** CPI reflects the rate of inflation, showing how much the cost of goods and services is rising. Gold is often seen as a hedge against inflation, so when CPI is high (indicating rising inflation), investors may buy more gold to protect their purchasing power, driving up gold prices.\n","\n","- **Economic Health:** A rising CPI can signal economic instability, prompting investors to move their assets into safer investments like gold. Conversely, a stable or decreasing CPI might reduce the appeal of gold as an inflation hedge.\n","\n","- **Consumer Sentiment:** High inflation can erode consumer confidence, leading to increased demand for gold as a safe asset. This demand can be especially strong in India, where gold is culturally significant and often considered a store of value.\n","\n","Including CPI data in gold price forecasting models helps capture the relationship between inflation and gold demand, leading to more accurate predictions."],"metadata":{"id":"8zhJ51gVOY62"}},{"cell_type":"code","source":["cpi_data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"I-VjrsAra7ZK","executionInfo":{"status":"ok","timestamp":1725380175279,"user_tz":-330,"elapsed":452,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"b539c553-2104-4328-f93e-fbd9e3e532c4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 Date      Time  Actual Forecast  Previous\n","0  Sep 12, 2024 (Aug)  08:00:00     NaN      NaN    0.0354\n","1  Aug 12, 2024 (Jul)  08:00:00  0.0354   0.0365    0.0508\n","2  Jul 12, 2024 (Jun)  17:30:00  0.0508    0.048    0.0480\n","3  Jun 12, 2024 (May)  17:30:00  0.0475    0.049    0.0483\n","4  May 13, 2024 (Apr)  17:30:00  0.0483    0.048    0.0485"],"text/html":["\n","  <div id=\"df-680e1108-02e4-4939-ba99-d9b6d0eaaf81\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Time</th>\n","      <th>Actual</th>\n","      <th>Forecast</th>\n","      <th>Previous</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Sep 12, 2024 (Aug)</td>\n","      <td>08:00:00</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0354</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Aug 12, 2024 (Jul)</td>\n","      <td>08:00:00</td>\n","      <td>0.0354</td>\n","      <td>0.0365</td>\n","      <td>0.0508</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Jul 12, 2024 (Jun)</td>\n","      <td>17:30:00</td>\n","      <td>0.0508</td>\n","      <td>0.048</td>\n","      <td>0.0480</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Jun 12, 2024 (May)</td>\n","      <td>17:30:00</td>\n","      <td>0.0475</td>\n","      <td>0.049</td>\n","      <td>0.0483</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>May 13, 2024 (Apr)</td>\n","      <td>17:30:00</td>\n","      <td>0.0483</td>\n","      <td>0.048</td>\n","      <td>0.0485</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-680e1108-02e4-4939-ba99-d9b6d0eaaf81')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-680e1108-02e4-4939-ba99-d9b6d0eaaf81 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-680e1108-02e4-4939-ba99-d9b6d0eaaf81');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-983b64f3-cfa8-4553-9cd5-90541cfae385\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-983b64f3-cfa8-4553-9cd5-90541cfae385')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-983b64f3-cfa8-4553-9cd5-90541cfae385 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"cpi_data","summary":"{\n  \"name\": \"cpi_data\",\n  \"rows\": 149,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 149,\n        \"samples\": [\n          \"Jul 12, 2018 (Jun)\",\n          \"Mar 13, 2023 (Feb)\",\n          \"Nov 12, 2014 (Oct)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Time\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 11,\n        \"samples\": [\n          \"13:30:00\",\n          \"08:00:00\",\n          \"18:30:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actual\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.023138280248756884,\n        \"min\": 0.0154,\n        \"max\": 0.139,\n        \"num_unique_values\": 133,\n        \"samples\": [\n          0.0759,\n          0.0417,\n          0.0559\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Forecast\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 100,\n        \"samples\": [\n          0.0835,\n          0.0248,\n          0.039\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Previous\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.023804035191964397,\n        \"min\": 0.0154,\n        \"max\": 0.139,\n        \"num_unique_values\": 131,\n        \"samples\": [\n          0.0399,\n          0.0406,\n          0.0588\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["cpi_data = cpi_data.rename(columns={\n","    'Date': 'Date',\n","    'Time':'CPI_Time',\n","    'Actual': 'CPI_Actual',\n","    'Forecast': 'CPI_Forecast',\n","    'Previous': 'CPI_Previous'\n","})\n","\n","cpi_data.columns\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rOSDeWdxbjgH","executionInfo":{"status":"ok","timestamp":1725380180596,"user_tz":-330,"elapsed":434,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"2cde0b62-e1e1-4df5-f990-f33979b72dff"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Date', 'CPI_Time', 'CPI_Actual', 'CPI_Forecast', 'CPI_Previous'], dtype='object')"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["cpi_data.drop(columns=['CPI_Time', 'CPI_Forecast','CPI_Previous'],inplace=True)\n","cpi_data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"Qk96QD2GPAqR","executionInfo":{"status":"ok","timestamp":1725380191086,"user_tz":-330,"elapsed":451,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"8ff8e658-9c8e-45e7-adea-bf66d97d02a2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 Date  CPI_Actual\n","0  Sep 12, 2024 (Aug)         NaN\n","1  Aug 12, 2024 (Jul)      0.0354\n","2  Jul 12, 2024 (Jun)      0.0508\n","3  Jun 12, 2024 (May)      0.0475\n","4  May 13, 2024 (Apr)      0.0483"],"text/html":["\n","  <div id=\"df-ca1c9756-7865-421b-9516-3f0a4833cfde\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>CPI_Actual</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Sep 12, 2024 (Aug)</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Aug 12, 2024 (Jul)</td>\n","      <td>0.0354</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Jul 12, 2024 (Jun)</td>\n","      <td>0.0508</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Jun 12, 2024 (May)</td>\n","      <td>0.0475</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>May 13, 2024 (Apr)</td>\n","      <td>0.0483</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ca1c9756-7865-421b-9516-3f0a4833cfde')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ca1c9756-7865-421b-9516-3f0a4833cfde button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ca1c9756-7865-421b-9516-3f0a4833cfde');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-eb134fe5-bdd5-4b5d-96e3-ea468165f805\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-eb134fe5-bdd5-4b5d-96e3-ea468165f805')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-eb134fe5-bdd5-4b5d-96e3-ea468165f805 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"cpi_data","summary":"{\n  \"name\": \"cpi_data\",\n  \"rows\": 149,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 149,\n        \"samples\": [\n          \"Jul 12, 2018 (Jun)\",\n          \"Mar 13, 2023 (Feb)\",\n          \"Nov 12, 2014 (Oct)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CPI_Actual\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.023138280248756884,\n        \"min\": 0.0154,\n        \"max\": 0.139,\n        \"num_unique_values\": 133,\n        \"samples\": [\n          0.0759,\n          0.0417,\n          0.0559\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["cpi_data.drop(columns=['CPI_Previous'],inplace=True)"],"metadata":{"id":"q6RpizSs94N-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cpi_data=pd.read_excel('/content/drive/MyDrive/MSc. Major Project/Final datasets/CPI_India.xlsx')"],"metadata":{"id":"xclq7yPhdFtQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","from datetime import datetime\n","\n","def preprocess_date(date_value):\n","    if isinstance(date_value, str):\n","        # Extract and convert the date part\n","        date_part = date_value.split('(')[0].strip()\n","        date = pd.to_datetime(date_part, format='%b %d, %Y')\n","    elif isinstance(date_value, (datetime, pd.Timestamp)):\n","        date = date_value\n","    else:\n","        raise ValueError(f\"Unexpected date format: {type(date_value)}\")\n","\n","    # Convert to d-m-y format\n","    return date.strftime('%Y-%m-%d')\n","\n","# Apply the function to the DataFrame\n","cpi_data['Date'] = cpi_data['Date'].apply(preprocess_date)\n","\n","# Display the updated DataFrame\n","cpi_data.head()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"YYG7yrf2PUVD","executionInfo":{"status":"ok","timestamp":1725380216139,"user_tz":-330,"elapsed":457,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"cd55df5a-6f6e-458d-c7b4-d8aba88c0543"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Date  CPI_Actual\n","0  2024-09-12         NaN\n","1  2024-08-12      0.0354\n","2  2024-07-12      0.0508\n","3  2024-06-12      0.0475\n","4  2024-05-13      0.0483"],"text/html":["\n","  <div id=\"df-318e7495-9336-4bc3-b57c-20562fea7e29\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>CPI_Actual</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2024-09-12</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2024-08-12</td>\n","      <td>0.0354</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2024-07-12</td>\n","      <td>0.0508</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2024-06-12</td>\n","      <td>0.0475</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2024-05-13</td>\n","      <td>0.0483</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-318e7495-9336-4bc3-b57c-20562fea7e29')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-318e7495-9336-4bc3-b57c-20562fea7e29 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-318e7495-9336-4bc3-b57c-20562fea7e29');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f617c248-15e3-49cd-a28f-660e8ce4276e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f617c248-15e3-49cd-a28f-660e8ce4276e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f617c248-15e3-49cd-a28f-660e8ce4276e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"cpi_data","summary":"{\n  \"name\": \"cpi_data\",\n  \"rows\": 149,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 149,\n        \"samples\": [\n          \"2018-07-12\",\n          \"2023-03-13\",\n          \"2014-11-12\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CPI_Actual\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.023138280248756884,\n        \"min\": 0.0154,\n        \"max\": 0.139,\n        \"num_unique_values\": 133,\n        \"samples\": [\n          0.0759,\n          0.0417,\n          0.0559\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["cpi_data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FmpQRkGHQjry","executionInfo":{"status":"ok","timestamp":1725380224325,"user_tz":-330,"elapsed":435,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"3af596ef-0332-42c2-8236-e646e83017f4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 149 entries, 0 to 148\n","Data columns (total 2 columns):\n"," #   Column      Non-Null Count  Dtype  \n","---  ------      --------------  -----  \n"," 0   Date        149 non-null    object \n"," 1   CPI_Actual  148 non-null    float64\n","dtypes: float64(1), object(1)\n","memory usage: 2.5+ KB\n"]}]},{"cell_type":"code","source":["cpi_data.Date=pd.to_datetime(cpi_data.Date)\n","cpi_data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HqlfY3xIV3SS","executionInfo":{"status":"ok","timestamp":1725380225860,"user_tz":-330,"elapsed":3,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"c9a5a3d6-4a4a-4bb0-a06c-aadc5cf685eb"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 149 entries, 0 to 148\n","Data columns (total 2 columns):\n"," #   Column      Non-Null Count  Dtype         \n","---  ------      --------------  -----         \n"," 0   Date        149 non-null    datetime64[ns]\n"," 1   CPI_Actual  148 non-null    float64       \n","dtypes: datetime64[ns](1), float64(1)\n","memory usage: 2.5 KB\n"]}]},{"cell_type":"code","source":["cpi_data=cpi_data.rename(columns={'Actual':'CPI_Actual'})\n","cpi_data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"cPwvxoIkdPer","executionInfo":{"status":"ok","timestamp":1725380236209,"user_tz":-330,"elapsed":440,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"9b8ec273-584c-44af-86b8-8933fc0e6d89"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        Date  CPI_Actual\n","0 2024-09-12         NaN\n","1 2024-08-12      0.0354\n","2 2024-07-12      0.0508\n","3 2024-06-12      0.0475\n","4 2024-05-13      0.0483"],"text/html":["\n","  <div id=\"df-f809e736-5c19-422d-a7b9-3c0cadd2c486\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>CPI_Actual</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2024-09-12</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2024-08-12</td>\n","      <td>0.0354</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2024-07-12</td>\n","      <td>0.0508</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2024-06-12</td>\n","      <td>0.0475</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2024-05-13</td>\n","      <td>0.0483</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f809e736-5c19-422d-a7b9-3c0cadd2c486')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f809e736-5c19-422d-a7b9-3c0cadd2c486 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f809e736-5c19-422d-a7b9-3c0cadd2c486');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c40a754b-e849-4f9e-97d2-5162f92669bb\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c40a754b-e849-4f9e-97d2-5162f92669bb')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c40a754b-e849-4f9e-97d2-5162f92669bb button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"cpi_data","summary":"{\n  \"name\": \"cpi_data\",\n  \"rows\": 149,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2010-06-30 00:00:00\",\n        \"max\": \"2024-09-12 00:00:00\",\n        \"num_unique_values\": 149,\n        \"samples\": [\n          \"2018-07-12 00:00:00\",\n          \"2023-03-13 00:00:00\",\n          \"2014-11-12 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CPI_Actual\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.023138280248756884,\n        \"min\": 0.0154,\n        \"max\": 0.139,\n        \"num_unique_values\": 133,\n        \"samples\": [\n          0.0759,\n          0.0417,\n          0.0559\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["cpi_data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0zta1iJstJfn","executionInfo":{"status":"ok","timestamp":1725380735182,"user_tz":-330,"elapsed":448,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"df4782b2-a787-4344-c44d-b8c62f95d80f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 149 entries, 148 to 0\n","Data columns (total 2 columns):\n"," #   Column      Non-Null Count  Dtype         \n","---  ------      --------------  -----         \n"," 0   Date        149 non-null    datetime64[ns]\n"," 1   CPI_Actual  148 non-null    float64       \n","dtypes: datetime64[ns](1), float64(1)\n","memory usage: 3.5 KB\n"]}]},{"cell_type":"code","source":["cpi_data.sort_values(by='Date',inplace=True)\n","cpi_data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"IQfQFKSHsfFq","executionInfo":{"status":"ok","timestamp":1725380591752,"user_tz":-330,"elapsed":645,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"05f15650-3f13-43b8-a6fa-4588b7e12a53"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          Date  CPI_Actual\n","148 2010-06-30       0.139\n","147 2010-08-02       0.137\n","146 2010-09-02       0.113\n","145 2010-10-01       0.099\n","144 2010-11-01       0.098"],"text/html":["\n","  <div id=\"df-84059d07-8169-4975-9e2b-df6f1bd0bd77\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>CPI_Actual</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>148</th>\n","      <td>2010-06-30</td>\n","      <td>0.139</td>\n","    </tr>\n","    <tr>\n","      <th>147</th>\n","      <td>2010-08-02</td>\n","      <td>0.137</td>\n","    </tr>\n","    <tr>\n","      <th>146</th>\n","      <td>2010-09-02</td>\n","      <td>0.113</td>\n","    </tr>\n","    <tr>\n","      <th>145</th>\n","      <td>2010-10-01</td>\n","      <td>0.099</td>\n","    </tr>\n","    <tr>\n","      <th>144</th>\n","      <td>2010-11-01</td>\n","      <td>0.098</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-84059d07-8169-4975-9e2b-df6f1bd0bd77')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-84059d07-8169-4975-9e2b-df6f1bd0bd77 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-84059d07-8169-4975-9e2b-df6f1bd0bd77');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-975c0a81-7151-43c0-84ec-f0f813af31cd\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-975c0a81-7151-43c0-84ec-f0f813af31cd')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-975c0a81-7151-43c0-84ec-f0f813af31cd button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"cpi_data","summary":"{\n  \"name\": \"cpi_data\",\n  \"rows\": 149,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2010-06-30 00:00:00\",\n        \"max\": \"2024-09-12 00:00:00\",\n        \"num_unique_values\": 149,\n        \"samples\": [\n          \"2018-05-14 00:00:00\",\n          \"2013-10-14 00:00:00\",\n          \"2022-02-14 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CPI_Actual\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.023138280248756884,\n        \"min\": 0.0154,\n        \"max\": 0.139,\n        \"num_unique_values\": 133,\n        \"samples\": [\n          0.0341,\n          0.0369,\n          0.0517\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["cpi_data.set_index('Date',inplace=True)\n","cpi_data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"id":"b6QhG5patVk5","executionInfo":{"status":"ok","timestamp":1725380878231,"user_tz":-330,"elapsed":817,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"2c308bc3-6995-4d2d-c3b6-2769d496b437"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            CPI_Actual\n","Date                  \n","2010-06-30       0.139\n","2010-08-02       0.137\n","2010-09-02       0.113\n","2010-10-01       0.099\n","2010-11-01       0.098"],"text/html":["\n","  <div id=\"df-c76899f4-73af-4186-858d-673160e6597d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CPI_Actual</th>\n","    </tr>\n","    <tr>\n","      <th>Date</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2010-06-30</th>\n","      <td>0.139</td>\n","    </tr>\n","    <tr>\n","      <th>2010-08-02</th>\n","      <td>0.137</td>\n","    </tr>\n","    <tr>\n","      <th>2010-09-02</th>\n","      <td>0.113</td>\n","    </tr>\n","    <tr>\n","      <th>2010-10-01</th>\n","      <td>0.099</td>\n","    </tr>\n","    <tr>\n","      <th>2010-11-01</th>\n","      <td>0.098</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c76899f4-73af-4186-858d-673160e6597d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c76899f4-73af-4186-858d-673160e6597d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c76899f4-73af-4186-858d-673160e6597d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-78d59683-612b-44dc-bb13-c2dfab05de0e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-78d59683-612b-44dc-bb13-c2dfab05de0e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-78d59683-612b-44dc-bb13-c2dfab05de0e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"cpi_data","summary":"{\n  \"name\": \"cpi_data\",\n  \"rows\": 149,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2010-06-30 00:00:00\",\n        \"max\": \"2024-09-12 00:00:00\",\n        \"num_unique_values\": 149,\n        \"samples\": [\n          \"2018-05-14 00:00:00\",\n          \"2013-10-14 00:00:00\",\n          \"2022-02-14 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CPI_Actual\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.023138280248756884,\n        \"min\": 0.0154,\n        \"max\": 0.139,\n        \"num_unique_values\": 133,\n        \"samples\": [\n          0.0341,\n          0.0369,\n          0.0517\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["cpi_data['CPI_Actual']=cpi_data['CPI_Actual'].interpolate(method='time')"],"metadata":{"id":"wGi4bwZ5s-6I"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cpi_data.reset_index(inplace=True)"],"metadata":{"id":"vk_Ak9MftvMq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cpi_data.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":147},"id":"BPvas7w3f9Fd","executionInfo":{"status":"ok","timestamp":1725380900196,"user_tz":-330,"elapsed":389,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"161cf8ab-08f2-49dd-943c-395b8e786398"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Date          0\n","CPI_Actual    0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Date</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>CPI_Actual</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":41}]},{"cell_type":"markdown","source":["# **ECB**\n","- **Global Interest Rates Influence:** ECB interest rates affect the value of the euro and can indirectly influence other major currencies like the US dollar. Since gold is traded globally and priced in US dollars, changes in Eurozone interest rates can impact gold prices worldwide.\n","- **Currency Fluctuations:** A strong euro (relative to the dollar) can lead to a weaker dollar, which typically supports higher gold prices. Conversely, a weaker euro can strengthen the dollar, often leading to lower gold prices. The rupee's relationship with these currencies also plays a role.\n","- **Risk Sentiment:** ECB policies can influence global risk sentiment. For instance, if the ECB adopts a dovish stance (lowering rates or maintaining accommodative policies), it might increase demand for gold as a safe-haven asset.\n","- **Inflation Expectations:** High inflation in the Eurozone, which might prompt the ECB to tighten monetary policy, can lead to changes in global inflation expectations. Gold is often used as a hedge against inflation, so changes in inflation expectations in Europe can influence global demand for gold.\n","- **Impact on Emerging Markets:** ECB policies can have spillover effects on emerging markets, including India. For instance, changes in global liquidity conditions due to ECB policy can affect capital flows to India, influencing the rupee's value and, by extension, gold prices in India."],"metadata":{"id":"4v2-kEssggoU"}},{"cell_type":"code","source":["ecb.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"-N5x_3SbaxmH","executionInfo":{"status":"ok","timestamp":1725382097300,"user_tz":-330,"elapsed":435,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"a82bbb20-d5e2-4c12-fa17-2225a1a78ff8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Release Date      Time  Actual  Forecast  Previous\n","0  Sep 18, 2024 (Sep)  08:15:00  0.0425    0.0425    0.0425\n","1  Aug 18, 2024 (Aug)  08:15:00  0.0425    0.0425    0.0425\n","2  Jul 18, 2024 (Jul)  08:15:00  0.0425    0.0425    0.0425\n","3  Jun 06, 2024 (Jun)  08:15:00  0.0425    0.0425    0.0450\n","4  Apr 11, 2024 (Apr)  08:15:00  0.0450    0.0450    0.0450"],"text/html":["\n","  <div id=\"df-38c3388d-a835-4d83-89df-9f231c655d35\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Release Date</th>\n","      <th>Time</th>\n","      <th>Actual</th>\n","      <th>Forecast</th>\n","      <th>Previous</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Sep 18, 2024 (Sep)</td>\n","      <td>08:15:00</td>\n","      <td>0.0425</td>\n","      <td>0.0425</td>\n","      <td>0.0425</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Aug 18, 2024 (Aug)</td>\n","      <td>08:15:00</td>\n","      <td>0.0425</td>\n","      <td>0.0425</td>\n","      <td>0.0425</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Jul 18, 2024 (Jul)</td>\n","      <td>08:15:00</td>\n","      <td>0.0425</td>\n","      <td>0.0425</td>\n","      <td>0.0425</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Jun 06, 2024 (Jun)</td>\n","      <td>08:15:00</td>\n","      <td>0.0425</td>\n","      <td>0.0425</td>\n","      <td>0.0450</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Apr 11, 2024 (Apr)</td>\n","      <td>08:15:00</td>\n","      <td>0.0450</td>\n","      <td>0.0450</td>\n","      <td>0.0450</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-38c3388d-a835-4d83-89df-9f231c655d35')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-38c3388d-a835-4d83-89df-9f231c655d35 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-38c3388d-a835-4d83-89df-9f231c655d35');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-882f14d6-4112-4af4-b358-8b41660bf550\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-882f14d6-4112-4af4-b358-8b41660bf550')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-882f14d6-4112-4af4-b358-8b41660bf550 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"ecb","summary":"{\n  \"name\": \"ecb\",\n  \"rows\": 139,\n  \"fields\": [\n    {\n      \"column\": \"Release Date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 139,\n        \"samples\": [\n          \"Apr 08, 2010\",\n          \"Jul 21, 2016 (Jul)\",\n          \"Dec 10, 2020 (Dec)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Time\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"09:15:00\",\n          \"08:45:00\",\n          \"08:15:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actual\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.012762904113307612,\n        \"min\": 0.0,\n        \"max\": 0.045,\n        \"num_unique_values\": 17,\n        \"samples\": [\n          0.0425,\n          0.045,\n          0.03\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Forecast\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.012715814987140868,\n        \"min\": 0.0,\n        \"max\": 0.045,\n        \"num_unique_values\": 18,\n        \"samples\": [\n          0.0425,\n          0.045,\n          0.0125\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Previous\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.012424685002616464,\n        \"min\": 0.0,\n        \"max\": 0.045,\n        \"num_unique_values\": 17,\n        \"samples\": [\n          0.0425,\n          0.045,\n          0.03\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":50}]},{"cell_type":"code","source":["def preprocess_date(date_value):\n","    if isinstance(date_value, str):\n","        # Extract and convert the date part\n","        date_part = date_value.split('(')[0].strip()\n","        date = pd.to_datetime(date_part, format='%b %d, %Y')\n","    elif isinstance(date_value, (datetime, pd.Timestamp)):\n","        date = date_value\n","    else:\n","        raise ValueError(f\"Unexpected date format: {type(date_value)}\")\n","\n","    # Convert to d-m-y format\n","    return date.strftime('%Y-%m-%d')\n","\n","# Apply the function to the DataFrame\n","ecb['Release Date'] = ecb['Release Date'].apply(preprocess_date)\n","\n","# Display the updated DataFrame\n","ecb.head()\n"],"metadata":{"id":"hPP94Tr99XgF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["ecb.drop(columns=['Time','Forecast','Previous'],inplace=True)"],"metadata":{"id":"5nUE7G2S9rhE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["ecb.head()"],"metadata":{"id":"I_a8BZ_TRNLS","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1725382119197,"user_tz":-330,"elapsed":410,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"c4180c1e-1a96-4e54-e9db-9d03e3450506"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Release Date  Actual\n","0   2024-09-18  0.0425\n","1   2024-08-18  0.0425\n","2   2024-07-18  0.0425\n","3   2024-06-06  0.0425\n","4   2024-04-11  0.0450"],"text/html":["\n","  <div id=\"df-f3f8ae2d-e23c-4417-8ca8-e69f9302e9b9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Release Date</th>\n","      <th>Actual</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2024-09-18</td>\n","      <td>0.0425</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2024-08-18</td>\n","      <td>0.0425</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2024-07-18</td>\n","      <td>0.0425</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2024-06-06</td>\n","      <td>0.0425</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2024-04-11</td>\n","      <td>0.0450</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f3f8ae2d-e23c-4417-8ca8-e69f9302e9b9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f3f8ae2d-e23c-4417-8ca8-e69f9302e9b9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f3f8ae2d-e23c-4417-8ca8-e69f9302e9b9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bfedf4a3-2bf6-48b9-9f6b-598837856bc9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bfedf4a3-2bf6-48b9-9f6b-598837856bc9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bfedf4a3-2bf6-48b9-9f6b-598837856bc9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"ecb","summary":"{\n  \"name\": \"ecb\",\n  \"rows\": 139,\n  \"fields\": [\n    {\n      \"column\": \"Release Date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 139,\n        \"samples\": [\n          \"2010-04-08\",\n          \"2016-07-21\",\n          \"2020-12-10\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actual\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.012762904113307612,\n        \"min\": 0.0,\n        \"max\": 0.045,\n        \"num_unique_values\": 17,\n        \"samples\": [\n          0.0425,\n          0.045,\n          0.03\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":54}]},{"cell_type":"code","source":["ecb.rename(columns={'Release Date':'Date'},inplace=True)"],"metadata":{"id":"oaeqBTpsyp9i"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["ecb.Date=pd.to_datetime(ecb.Date)\n","ecb.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qZkFKzYc-Bcy","executionInfo":{"status":"ok","timestamp":1725382187187,"user_tz":-330,"elapsed":438,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"36e9911c-c725-4123-ac78-50c523dce1f3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 139 entries, 0 to 138\n","Data columns (total 2 columns):\n"," #   Column  Non-Null Count  Dtype         \n","---  ------  --------------  -----         \n"," 0   Date    139 non-null    datetime64[ns]\n"," 1   Actual  139 non-null    float64       \n","dtypes: datetime64[ns](1), float64(1)\n","memory usage: 2.3 KB\n"]}]},{"cell_type":"code","source":["ecb.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":147},"id":"jfLXu7oc-Mhd","executionInfo":{"status":"ok","timestamp":1725382190397,"user_tz":-330,"elapsed":404,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"d989c9f0-b0ad-4337-c07e-869255b0fbb9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Date      0\n","Actual    0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Date</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Actual</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":59}]},{"cell_type":"markdown","source":["# **Gold Data**"],"metadata":{"id":"HjmaQZLc-JEy"}},{"cell_type":"code","source":["\n","gold=pd.read_csv('/content/drive/MyDrive/MSc. Major Project/Final datasets/Gold Mini Futures Historical Data.csv')"],"metadata":{"id":"dHvgsDeg1Kvk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["gold.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"JU1F_FJ0axj2","executionInfo":{"status":"ok","timestamp":1725382194671,"user_tz":-330,"elapsed":435,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"e4cd044c-5f3f-4566-fdf8-e57f2749b3c5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Date   Price    Open    High     Low    Vol. Change %\n","0  03-09-2024  71,060  71,194  71,365  70,889   0.37K   -0.24%\n","1  02-09-2024  71,233  71,126  71,379  71,026   1.09K    0.05%\n","2  30-08-2024  71,195  71,463  71,697  71,129   7.60K   -0.66%\n","3  29-08-2024  71,666  71,403  71,718  71,281  14.01K    0.47%\n","4  28-08-2024  71,328  71,490  71,543  71,062  11.79K   -0.31%"],"text/html":["\n","  <div id=\"df-f424e1ee-7dd8-4843-b1fb-cd43aecf1dd6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Price</th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Vol.</th>\n","      <th>Change %</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>03-09-2024</td>\n","      <td>71,060</td>\n","      <td>71,194</td>\n","      <td>71,365</td>\n","      <td>70,889</td>\n","      <td>0.37K</td>\n","      <td>-0.24%</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>02-09-2024</td>\n","      <td>71,233</td>\n","      <td>71,126</td>\n","      <td>71,379</td>\n","      <td>71,026</td>\n","      <td>1.09K</td>\n","      <td>0.05%</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>30-08-2024</td>\n","      <td>71,195</td>\n","      <td>71,463</td>\n","      <td>71,697</td>\n","      <td>71,129</td>\n","      <td>7.60K</td>\n","      <td>-0.66%</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>29-08-2024</td>\n","      <td>71,666</td>\n","      <td>71,403</td>\n","      <td>71,718</td>\n","      <td>71,281</td>\n","      <td>14.01K</td>\n","      <td>0.47%</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>28-08-2024</td>\n","      <td>71,328</td>\n","      <td>71,490</td>\n","      <td>71,543</td>\n","      <td>71,062</td>\n","      <td>11.79K</td>\n","      <td>-0.31%</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f424e1ee-7dd8-4843-b1fb-cd43aecf1dd6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f424e1ee-7dd8-4843-b1fb-cd43aecf1dd6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f424e1ee-7dd8-4843-b1fb-cd43aecf1dd6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ae37d49d-9b55-4654-a8a7-2f331c737e4c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ae37d49d-9b55-4654-a8a7-2f331c737e4c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ae37d49d-9b55-4654-a8a7-2f331c737e4c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"gold","summary":"{\n  \"name\": \"gold\",\n  \"rows\": 3374,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3374,\n        \"samples\": [\n          \"28-06-2012\",\n          \"22-12-2020\",\n          \"14-12-2012\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3042,\n        \"samples\": [\n          \"57,796\",\n          \"30,802\",\n          \"61,498\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Open\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2832,\n        \"samples\": [\n          \"30,010\",\n          \"28,119\",\n          \"38,388\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"High\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2941,\n        \"samples\": [\n          \"26,537\",\n          \"48,888\",\n          \"26,915\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Low\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2880,\n        \"samples\": [\n          \"50,548\",\n          \"29,500\",\n          \"26,582\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Vol.\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2087,\n        \"samples\": [\n          \"19.82K\",\n          \"21.00K\",\n          \"9.05K\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Change %\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 457,\n        \"samples\": [\n          \"1.26%\",\n          \"-0.01%\",\n          \"1.80%\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":60}]},{"cell_type":"code","source":["gold = gold.rename(columns={\n","    'Date': 'Date',\n","    'Price': 'gold_Price',\n","    'Open': 'gold_Open',\n","    'High': 'gold_High',\n","    'Low': 'gold_Low',\n","    'Vol.': 'gold_Vol.',\n","    'Change %': 'gold_Change %'\n","})\n","\n","print(gold.columns)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"o-tVzJN3RaUT","executionInfo":{"status":"ok","timestamp":1725382836484,"user_tz":-330,"elapsed":433,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"a9eb451a-87b1-4c53-d30b-45196fb754f0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Index(['Date', 'gold_Price', 'gold_Open', 'gold_High', 'gold_Low', 'gold_Vol.',\n","       'gold_Change %'],\n","      dtype='object')\n"]}]},{"cell_type":"code","source":["gold.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YzpcjByrSNA6","executionInfo":{"status":"ok","timestamp":1725382200422,"user_tz":-330,"elapsed":394,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"05aeebc9-db0f-45fd-980e-e6654c75d050"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3374 entries, 0 to 3373\n","Data columns (total 7 columns):\n"," #   Column         Non-Null Count  Dtype \n","---  ------         --------------  ----- \n"," 0   Date           3374 non-null   object\n"," 1   gold_Price     3374 non-null   object\n"," 2   gold_Open      3374 non-null   object\n"," 3   gold_High      3374 non-null   object\n"," 4   gold_Low       3374 non-null   object\n"," 5   gold_Vol.      3357 non-null   object\n"," 6   gold_Change %  3374 non-null   object\n","dtypes: object(7)\n","memory usage: 184.6+ KB\n"]}]},{"cell_type":"code","source":["gold.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":303},"id":"XTkC2a_LSRnX","executionInfo":{"status":"ok","timestamp":1725382203206,"user_tz":-330,"elapsed":416,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"d3bd419e-14f1-4f05-be20-bcf5ed762f55"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Date              0\n","gold_Price        0\n","gold_Open         0\n","gold_High         0\n","gold_Low          0\n","gold_Vol.        17\n","gold_Change %     0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Date</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>gold_Price</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>gold_Open</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>gold_High</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>gold_Low</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>gold_Vol.</th>\n","      <td>17</td>\n","    </tr>\n","    <tr>\n","      <th>gold_Change %</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":63}]},{"cell_type":"code","source":["gold['gold_Vol.']=gold['gold_Vol.'].interpolate(method='bfill')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Pjf28U_cSTo1","executionInfo":{"status":"ok","timestamp":1725382206908,"user_tz":-330,"elapsed":422,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"62bf6378-8fa0-4533-c28c-edd55f847869"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-64-6b20cf266a43>:1: FutureWarning: Series.interpolate with method=bfill is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.\n","  gold['gold_Vol.']=gold['gold_Vol.'].interpolate(method='bfill')\n"]}]},{"cell_type":"code","source":["gold.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":303},"id":"rVYzytcBScXb","executionInfo":{"status":"ok","timestamp":1725382208404,"user_tz":-330,"elapsed":5,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"c50c4715-fe78-4984-b0b4-07e60a5eda21"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Date             0\n","gold_Price       0\n","gold_Open        0\n","gold_High        0\n","gold_Low         0\n","gold_Vol.        0\n","gold_Change %    0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Date</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>gold_Price</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>gold_Open</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>gold_High</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>gold_Low</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>gold_Vol.</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>gold_Change %</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":65}]},{"cell_type":"code","source":["gold['Date'] = pd.to_datetime(gold['Date'], dayfirst=True)\n","gold['gold_Change %']=gold['gold_Change %'].str.replace('%','').str.replace(',','').astype(float)\n","gold['gold_Price']=gold['gold_Price'].str.replace(',','').astype(float)\n","gold['gold_Open']=gold['gold_Open'].str.replace(',','').astype(float)\n","gold['gold_High']=gold['gold_High'].str.replace(',','').astype(float)\n","gold['gold_Low']=gold['gold_Low'].str.replace(',','').astype(float)\n","gold['gold_Vol.']=gold['gold_Vol.'].str.replace('M','').str.replace(',','').str.replace('K','').astype(float)\n","gold.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GbSbaHAASgQD","executionInfo":{"status":"ok","timestamp":1725382884051,"user_tz":-330,"elapsed":495,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"4cd64db6-bcc7-4bd4-d4b3-dad808a48cce"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3374 entries, 0 to 3373\n","Data columns (total 7 columns):\n"," #   Column         Non-Null Count  Dtype         \n","---  ------         --------------  -----         \n"," 0   Date           3374 non-null   datetime64[ns]\n"," 1   gold_Price     3374 non-null   float64       \n"," 2   gold_Open      3374 non-null   float64       \n"," 3   gold_High      3374 non-null   float64       \n"," 4   gold_Low       3374 non-null   float64       \n"," 5   gold_Vol.      3357 non-null   float64       \n"," 6   gold_Change %  3374 non-null   float64       \n","dtypes: datetime64[ns](1), float64(6)\n","memory usage: 184.6 KB\n"]}]},{"cell_type":"code","source":["gold.drop(columns=['gold_Low','gold_High'],inplace=True)"],"metadata":{"id":"aeoxaXmRStnp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["gold.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"DAnuzoa6TDHL","executionInfo":{"status":"ok","timestamp":1725382691446,"user_tz":-330,"elapsed":404,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"0c44f7e7-cb1e-481c-ab14-db51fa601c2c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        Date  gold_Price gold_Open  gold_Vol.  gold_Change %\n","0 2024-09-03     71060.0    71,194       0.37          -0.24\n","1 2024-09-02     71233.0    71,126       1.09           0.05\n","2 2024-08-30     71195.0    71,463       7.60          -0.66\n","3 2024-08-29     71666.0    71,403      14.01           0.47\n","4 2024-08-28     71328.0    71,490      11.79          -0.31"],"text/html":["\n","  <div id=\"df-d3f0b67d-83e2-4017-b409-be09e1a880f8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>gold_Price</th>\n","      <th>gold_Open</th>\n","      <th>gold_Vol.</th>\n","      <th>gold_Change %</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2024-09-03</td>\n","      <td>71060.0</td>\n","      <td>71,194</td>\n","      <td>0.37</td>\n","      <td>-0.24</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2024-09-02</td>\n","      <td>71233.0</td>\n","      <td>71,126</td>\n","      <td>1.09</td>\n","      <td>0.05</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2024-08-30</td>\n","      <td>71195.0</td>\n","      <td>71,463</td>\n","      <td>7.60</td>\n","      <td>-0.66</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2024-08-29</td>\n","      <td>71666.0</td>\n","      <td>71,403</td>\n","      <td>14.01</td>\n","      <td>0.47</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2024-08-28</td>\n","      <td>71328.0</td>\n","      <td>71,490</td>\n","      <td>11.79</td>\n","      <td>-0.31</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d3f0b67d-83e2-4017-b409-be09e1a880f8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d3f0b67d-83e2-4017-b409-be09e1a880f8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d3f0b67d-83e2-4017-b409-be09e1a880f8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2c51cda2-ff09-4f96-aab3-ea03703ca786\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2c51cda2-ff09-4f96-aab3-ea03703ca786')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2c51cda2-ff09-4f96-aab3-ea03703ca786 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"gold","summary":"{\n  \"name\": \"gold\",\n  \"rows\": 3374,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2011-12-19 00:00:00\",\n        \"max\": \"2024-09-03 00:00:00\",\n        \"num_unique_values\": 3374,\n        \"samples\": [\n          \"2012-06-28 00:00:00\",\n          \"2020-12-22 00:00:00\",\n          \"2012-12-14 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gold_Price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12679.866299935537,\n        \"min\": 0.0,\n        \"max\": 74283.0,\n        \"num_unique_values\": 3042,\n        \"samples\": [\n          57796.0,\n          30802.0,\n          61498.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gold_Open\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2832,\n        \"samples\": [\n          \"30,010\",\n          \"28,119\",\n          \"38,388\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gold_Vol.\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18.640003659494724,\n        \"min\": 0.0,\n        \"max\": 145.06,\n        \"num_unique_values\": 2087,\n        \"samples\": [\n          19.82,\n          21.0,\n          9.05\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gold_Change %\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.927763943698044,\n        \"min\": -100.0,\n        \"max\": 6.09,\n        \"num_unique_values\": 457,\n        \"samples\": [\n          1.26,\n          -0.01,\n          1.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":69}]},{"cell_type":"markdown","source":["# **Bond Rates**\n","The India 10-Year Government Bond Yield reflects the interest rate on long-term government debt and is a key indicator of economic conditions. Here's how it helps forecast gold prices:\n","\n","- **Interest Rates:** Higher bond yields indicate rising interest rates, which can reduce gold's appeal, potentially lowering prices.\n","- **Inflation:** Rising bond yields often signal higher inflation expectations. Since gold is a hedge against inflation, this can boost demand for gold.\n","- **Safe-Haven Demand:** Falling yields may indicate economic uncertainty, leading investors to seek safety in gold, increasing its price.\n","- **Currency Impact:** Higher yields can strengthen the rupee, making gold cheaper in India, while lower yields can weaken the rupee, raising gold prices."],"metadata":{"id":"ybnJSQ4R-XKd"}},{"cell_type":"code","source":["bond_data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"ABe5qr8uaoea","executionInfo":{"status":"ok","timestamp":1725382890190,"user_tz":-330,"elapsed":423,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"54d651ad-20fe-4052-db63-b6152f85d658"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Date  Price   Open   High    Low Change %\n","0  03-09-2024  6.984  6.991  6.997  6.984    1.57%\n","1  02-09-2024  6.876  6.877  6.878  6.865    0.19%\n","2  30-08-2024  6.863  6.872  6.872  6.862   -0.01%\n","3  29-08-2024  6.864  6.870  6.870  6.862    0.04%\n","4  28-08-2024  6.861  6.858  6.866  6.856    0.00%"],"text/html":["\n","  <div id=\"df-6969d2a1-bcee-4a4f-8100-bc194606329a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Price</th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Change %</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>03-09-2024</td>\n","      <td>6.984</td>\n","      <td>6.991</td>\n","      <td>6.997</td>\n","      <td>6.984</td>\n","      <td>1.57%</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>02-09-2024</td>\n","      <td>6.876</td>\n","      <td>6.877</td>\n","      <td>6.878</td>\n","      <td>6.865</td>\n","      <td>0.19%</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>30-08-2024</td>\n","      <td>6.863</td>\n","      <td>6.872</td>\n","      <td>6.872</td>\n","      <td>6.862</td>\n","      <td>-0.01%</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>29-08-2024</td>\n","      <td>6.864</td>\n","      <td>6.870</td>\n","      <td>6.870</td>\n","      <td>6.862</td>\n","      <td>0.04%</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>28-08-2024</td>\n","      <td>6.861</td>\n","      <td>6.858</td>\n","      <td>6.866</td>\n","      <td>6.856</td>\n","      <td>0.00%</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6969d2a1-bcee-4a4f-8100-bc194606329a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6969d2a1-bcee-4a4f-8100-bc194606329a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6969d2a1-bcee-4a4f-8100-bc194606329a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cdfd1b3c-55a3-4494-a134-eb2af1350bd3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cdfd1b3c-55a3-4494-a134-eb2af1350bd3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cdfd1b3c-55a3-4494-a134-eb2af1350bd3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"bond_data","summary":"{\n  \"name\": \"bond_data\",\n  \"rows\": 3698,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3698,\n        \"samples\": [\n          \"21-05-2020\",\n          \"28-08-2014\",\n          \"16-05-2023\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7981275636504711,\n        \"min\": 5.76,\n        \"max\": 9.228,\n        \"num_unique_values\": 2034,\n        \"samples\": [\n          5.931,\n          7.064,\n          6.451\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Open\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7950764769893143,\n        \"min\": 5.764,\n        \"max\": 9.228,\n        \"num_unique_values\": 2024,\n        \"samples\": [\n          7.463,\n          9.099,\n          6.239\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"High\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7913529277221889,\n        \"min\": 5.775,\n        \"max\": 9.228,\n        \"num_unique_values\": 2017,\n        \"samples\": [\n          8.517,\n          6.19,\n          6.77\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Low\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.803436619373396,\n        \"min\": 5.747,\n        \"max\": 9.228,\n        \"num_unique_values\": 2041,\n        \"samples\": [\n          7.54,\n          7.77,\n          7.667\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Change %\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 378,\n        \"samples\": [\n          \"0.29%\",\n          \"-1.04%\",\n          \"-1.93%\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":74}]},{"cell_type":"code","source":["bond_data.drop(columns=['Open','High','Low'],inplace=True)"],"metadata":{"id":"lUnxZbSs-hZ1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["bond_data = bond_data.rename(columns={\n","    'Date': 'Date',\n","    'Price': 'bond_Price',\n","    'Change %': 'bond_Change %'\n","})\n","\n","print(bond_data.columns)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QbYhmGJoRm1J","executionInfo":{"status":"ok","timestamp":1725382937645,"user_tz":-330,"elapsed":8,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"d640bce7-7892-4ef8-9cc3-4a38059c2ba1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Index(['Date', 'bond_Price', 'bond_Change %'], dtype='object')\n"]}]},{"cell_type":"code","source":["bond_data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aXXxl82z-xkR","executionInfo":{"status":"ok","timestamp":1725382937645,"user_tz":-330,"elapsed":7,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"de003fea-aafa-4203-c06c-9a435a1356ba"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3698 entries, 0 to 3697\n","Data columns (total 3 columns):\n"," #   Column         Non-Null Count  Dtype  \n","---  ------         --------------  -----  \n"," 0   Date           3698 non-null   object \n"," 1   bond_Price     3698 non-null   float64\n"," 2   bond_Change %  3698 non-null   object \n","dtypes: float64(1), object(2)\n","memory usage: 86.8+ KB\n"]}]},{"cell_type":"code","source":["bond_data.Date=pd.to_datetime(bond_data.Date,dayfirst=True)\n","bond_data['bond_Change %']=bond_data['bond_Change %'].str.replace('%','').str.replace(',','').astype(float)\n","bond_data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lUJlFqit-zZY","executionInfo":{"status":"ok","timestamp":1725382974040,"user_tz":-330,"elapsed":389,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"4e8ec8c5-0a60-448e-a5d1-48d873c96d72"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3698 entries, 0 to 3697\n","Data columns (total 3 columns):\n"," #   Column         Non-Null Count  Dtype         \n","---  ------         --------------  -----         \n"," 0   Date           3698 non-null   datetime64[ns]\n"," 1   bond_Price     3698 non-null   float64       \n"," 2   bond_Change %  3698 non-null   float64       \n","dtypes: datetime64[ns](1), float64(2)\n","memory usage: 86.8 KB\n"]}]},{"cell_type":"code","source":["bond_data.drop(columns=['bond_Change %'],inplace=True)"],"metadata":{"id":"BwHZRi_21t75"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["bond_data.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":147},"id":"fd70WXdQ-718","executionInfo":{"status":"ok","timestamp":1725382995539,"user_tz":-330,"elapsed":421,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"f539d675-cf88-42fb-a5e5-0d8336eea3cc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Date          0\n","bond_Price    0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Date</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>bond_Price</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":81}]},{"cell_type":"markdown","source":["# **NIFTY**\n","- **Market Sentiment:** A rising Nifty may reduce demand for gold, lowering its price, while a falling Nifty can increase demand for gold as a safe haven, raising its price.\n","\n","- **Risk Aversion:** A Nifty downturn often leads investors to buy gold for safety, driving up prices.\n","\n","- **Currency Impact:** A strong Nifty can attract foreign investment, strengthening the rupee and making gold cheaper in India, while a weak Nifty can have the opposite effect."],"metadata":{"id":"gnAoNf3W_IjP"}},{"cell_type":"code","source":["nifty.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"teusJODiaoa5","executionInfo":{"status":"ok","timestamp":1722773100430,"user_tz":-330,"elapsed":431,"user":{"displayName":"Shaziya Sultana","userId":"15526987081955862586"}},"outputId":"fc0258b5-00c2-4b71-87ef-f26e496e669f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Date     Price      Open      High       Low     Vol.  Change %\n","0  29-07-2024  24842.45  24952.05  24998.05  24776.20  354.97K    0.0003\n","1  26-07-2024  24834.85  24423.35  24861.15  24410.90  383.83M    0.0176\n","2  25-07-2024  24406.10  24230.95  24426.15  24210.80  391.82M   -0.0003\n","3  24-07-2024  24413.50  24444.95  24504.25  24307.25  366.62M   -0.0027\n","4  23-07-2024  24479.05  24568.90  24582.55  24074.20  436.41M   -0.0012"],"text/html":["\n","  <div id=\"df-6a4fe186-7e45-47a5-bb24-d850c82fdc0c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Price</th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Vol.</th>\n","      <th>Change %</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>29-07-2024</td>\n","      <td>24842.45</td>\n","      <td>24952.05</td>\n","      <td>24998.05</td>\n","      <td>24776.20</td>\n","      <td>354.97K</td>\n","      <td>0.0003</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>26-07-2024</td>\n","      <td>24834.85</td>\n","      <td>24423.35</td>\n","      <td>24861.15</td>\n","      <td>24410.90</td>\n","      <td>383.83M</td>\n","      <td>0.0176</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>25-07-2024</td>\n","      <td>24406.10</td>\n","      <td>24230.95</td>\n","      <td>24426.15</td>\n","      <td>24210.80</td>\n","      <td>391.82M</td>\n","      <td>-0.0003</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>24-07-2024</td>\n","      <td>24413.50</td>\n","      <td>24444.95</td>\n","      <td>24504.25</td>\n","      <td>24307.25</td>\n","      <td>366.62M</td>\n","      <td>-0.0027</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>23-07-2024</td>\n","      <td>24479.05</td>\n","      <td>24568.90</td>\n","      <td>24582.55</td>\n","      <td>24074.20</td>\n","      <td>436.41M</td>\n","      <td>-0.0012</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6a4fe186-7e45-47a5-bb24-d850c82fdc0c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6a4fe186-7e45-47a5-bb24-d850c82fdc0c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6a4fe186-7e45-47a5-bb24-d850c82fdc0c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4bcf4dc0-c03a-4797-94b9-68138e3b9ba0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4bcf4dc0-c03a-4797-94b9-68138e3b9ba0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4bcf4dc0-c03a-4797-94b9-68138e3b9ba0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"nifty","summary":"{\n  \"name\": \"nifty\",\n  \"rows\": 3614,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 3614,\n        \"samples\": [\n          \"27-04-2011\",\n          \"2010-03-03 00:00:00\",\n          \"16-03-2017\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4983.950666799363,\n        \"min\": 4544.2,\n        \"max\": 24842.45,\n        \"num_unique_values\": 3575,\n        \"samples\": [\n          7558.8,\n          14637.8,\n          23259.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Open\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4985.7630285521045,\n        \"min\": 4623.15,\n        \"max\": 24952.05,\n        \"num_unique_values\": 3583,\n        \"samples\": [\n          10580.6,\n          18430.55,\n          14481.05\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"High\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5002.629260778281,\n        \"min\": 4623.15,\n        \"max\": 24998.05,\n        \"num_unique_values\": 3585,\n        \"samples\": [\n          4930.25,\n          5317.5,\n          12025.45\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Low\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4960.6499905773635,\n        \"min\": 4531.15,\n        \"max\": 24776.2,\n        \"num_unique_values\": 3581,\n        \"samples\": [\n          10640.85,\n          18552.15,\n          14461.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Vol.\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3458,\n        \"samples\": [\n          \"191.40B\",\n          \"231.94M\",\n          \"213.73M\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Change %\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.010571720181955173,\n        \"min\": -0.1298,\n        \"max\": 0.0876,\n        \"num_unique_values\": 537,\n        \"samples\": [\n          0.0177,\n          -0.0004,\n          0.0211\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["nifty.drop(columns=['Open','High','Low','Vol.','Change %'],inplace=True)"],"metadata":{"id":"zj9Sd4_m_4A4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["nifty = nifty.rename(columns={\n","    'Date': 'Date',\n","    'Price': 'nifty_Price',\n","})\n","\n","print(nifty.columns)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wK3uNDmrR1_u","executionInfo":{"status":"ok","timestamp":1725383018417,"user_tz":-330,"elapsed":396,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"94172e5b-83fa-4610-86b9-9d80073f9d51"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Index(['Date', 'nifty_Price'], dtype='object')\n"]}]},{"cell_type":"code","source":["nifty['nifty_Price']=nifty['nifty_Price'].str.replace(',','').astype(float)"],"metadata":{"id":"xje-TN4P7dgi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["nifty.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GSaWrukpADLi","executionInfo":{"status":"ok","timestamp":1725384531578,"user_tz":-330,"elapsed":386,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"776c24bb-2236-4cce-8bfb-f9765c70d145"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","DatetimeIndex: 3639 entries, 2010-01-04 to 2024-09-03\n","Data columns (total 1 columns):\n"," #   Column       Non-Null Count  Dtype  \n","---  ------       --------------  -----  \n"," 0   nifty_Price  3639 non-null   float64\n","dtypes: float64(1)\n","memory usage: 185.9 KB\n"]}]},{"cell_type":"code","source":["nifty.Date=pd.to_datetime(nifty.Date,dayfirst=True)\n","nifty.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kXqI26ylAEvI","executionInfo":{"status":"ok","timestamp":1725383041336,"user_tz":-330,"elapsed":6,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"926759e8-6509-4f95-94c0-510cc1f1f107"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3639 entries, 0 to 3638\n","Data columns (total 2 columns):\n"," #   Column       Non-Null Count  Dtype         \n","---  ------       --------------  -----         \n"," 0   Date         3639 non-null   datetime64[ns]\n"," 1   nifty_Price  3639 non-null   object        \n","dtypes: datetime64[ns](1), object(1)\n","memory usage: 57.0+ KB\n"]}]},{"cell_type":"code","source":["nifty.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":147},"id":"DFaDZ2HSAVnB","executionInfo":{"status":"ok","timestamp":1725383043947,"user_tz":-330,"elapsed":501,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"e399f713-7dc4-494b-f505-91327c23e62c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Date           0\n","nifty_Price    0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Date</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>nifty_Price</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":88}]},{"cell_type":"markdown","source":["# **Repo-rate**\n","- **Inflation:** A high repo rate is usually associated with efforts to control inflation, which can reduce the appeal of gold as an inflation hedge.\n","- **Currency Strength:** Changes in the repo rate can influence the value of the Indian rupee. A higher repo rate may strengthen the rupee, making gold cheaper in India, while a lower rate could weaken the rupee, increasing gold prices."],"metadata":{"id":"N-qmXTOVAhR6"}},{"cell_type":"code","source":["repo_rate=pd.read_excel('/content/drive/MyDrive/MSc. Major Project/Final datasets/India_repo_rate.xlsx')"],"metadata":{"id":"i0I1SeljBWAa"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["repo_rate.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"mPPHyHhMaBrX","executionInfo":{"status":"ok","timestamp":1725383051868,"user_tz":-330,"elapsed":423,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"cb1a7390-3a55-4d6b-c708-35914ad0e120"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  Date  Actual  Previous\n","0  2024-08-08 00:00:00   0.065     0.065\n","1         Jun 07, 2024   0.065     0.065\n","2         Apr 05, 2024   0.065     0.065\n","3         Feb 08, 2024   0.065     0.065\n","4         Dec 08, 2023   0.065     0.065"],"text/html":["\n","  <div id=\"df-2e8a86a5-619e-43f2-9f96-1f1acc5560f4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Actual</th>\n","      <th>Previous</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2024-08-08 00:00:00</td>\n","      <td>0.065</td>\n","      <td>0.065</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Jun 07, 2024</td>\n","      <td>0.065</td>\n","      <td>0.065</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Apr 05, 2024</td>\n","      <td>0.065</td>\n","      <td>0.065</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Feb 08, 2024</td>\n","      <td>0.065</td>\n","      <td>0.065</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Dec 08, 2023</td>\n","      <td>0.065</td>\n","      <td>0.065</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2e8a86a5-619e-43f2-9f96-1f1acc5560f4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2e8a86a5-619e-43f2-9f96-1f1acc5560f4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2e8a86a5-619e-43f2-9f96-1f1acc5560f4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cf2c6159-74bb-4404-b26d-09ce295ded28\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cf2c6159-74bb-4404-b26d-09ce295ded28')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cf2c6159-74bb-4404-b26d-09ce295ded28 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"repo_rate","summary":"{\n  \"name\": \"repo_rate\",\n  \"rows\": 108,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 108,\n        \"samples\": [\n          \"Sep 17, 2012\",\n          \"Dec 07, 2022\",\n          \"Dec 08, 2023\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actual\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.01308738212117836,\n        \"min\": 0.04,\n        \"max\": 0.085,\n        \"num_unique_values\": 29,\n        \"samples\": [\n          0.0485,\n          0.0831,\n          0.075\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Previous\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.013117932569497703,\n        \"min\": 0.04,\n        \"max\": 0.085,\n        \"num_unique_values\": 29,\n        \"samples\": [\n          0.0485,\n          0.0831,\n          0.075\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":89}]},{"cell_type":"code","source":["# Apply the function to the DataFrame\n","repo_rate['Date'] = repo_rate['Date'].apply(preprocess_date)\n","repo_rate.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"WnN86yiHBE68","executionInfo":{"status":"ok","timestamp":1725383055537,"user_tz":-330,"elapsed":394,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"368218b4-9118-4085-fba4-367f478d5bed"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Date  Actual  Previous\n","0  2024-08-08   0.065     0.065\n","1  2024-06-07   0.065     0.065\n","2  2024-04-05   0.065     0.065\n","3  2024-02-08   0.065     0.065\n","4  2023-12-08   0.065     0.065"],"text/html":["\n","  <div id=\"df-d9ac5bce-2a6b-4c27-87ea-a5a9b357b9fe\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Actual</th>\n","      <th>Previous</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2024-08-08</td>\n","      <td>0.065</td>\n","      <td>0.065</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2024-06-07</td>\n","      <td>0.065</td>\n","      <td>0.065</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2024-04-05</td>\n","      <td>0.065</td>\n","      <td>0.065</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2024-02-08</td>\n","      <td>0.065</td>\n","      <td>0.065</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2023-12-08</td>\n","      <td>0.065</td>\n","      <td>0.065</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d9ac5bce-2a6b-4c27-87ea-a5a9b357b9fe')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d9ac5bce-2a6b-4c27-87ea-a5a9b357b9fe button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d9ac5bce-2a6b-4c27-87ea-a5a9b357b9fe');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-be93f723-b25d-4dee-8744-471604b89e0d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-be93f723-b25d-4dee-8744-471604b89e0d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-be93f723-b25d-4dee-8744-471604b89e0d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"repo_rate","summary":"{\n  \"name\": \"repo_rate\",\n  \"rows\": 108,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 108,\n        \"samples\": [\n          \"2012-09-17\",\n          \"2022-12-07\",\n          \"2023-12-08\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actual\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.01308738212117836,\n        \"min\": 0.04,\n        \"max\": 0.085,\n        \"num_unique_values\": 29,\n        \"samples\": [\n          0.0485,\n          0.0831,\n          0.075\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Previous\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.013117932569497703,\n        \"min\": 0.04,\n        \"max\": 0.085,\n        \"num_unique_values\": 29,\n        \"samples\": [\n          0.0485,\n          0.0831,\n          0.075\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":90}]},{"cell_type":"code","source":["repo_rate.drop(columns=['Previous'],inplace=True)\n","repo_rate.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CHhUuDOyBZKA","executionInfo":{"status":"ok","timestamp":1725383060839,"user_tz":-330,"elapsed":412,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"a9315b6c-a504-4a6b-f841-2f3cecc3fbea"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 108 entries, 0 to 107\n","Data columns (total 2 columns):\n"," #   Column  Non-Null Count  Dtype  \n","---  ------  --------------  -----  \n"," 0   Date    108 non-null    object \n"," 1   Actual  108 non-null    float64\n","dtypes: float64(1), object(1)\n","memory usage: 1.8+ KB\n"]}]},{"cell_type":"code","source":["repo_rate.Date=pd.to_datetime(repo_rate.Date)\n","repo_rate.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RLw1C7SyBfv2","executionInfo":{"status":"ok","timestamp":1725383063403,"user_tz":-330,"elapsed":383,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"5f96dbe9-91f3-477c-f3e4-e23bcc75e882"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 108 entries, 0 to 107\n","Data columns (total 2 columns):\n"," #   Column  Non-Null Count  Dtype         \n","---  ------  --------------  -----         \n"," 0   Date    108 non-null    datetime64[ns]\n"," 1   Actual  108 non-null    float64       \n","dtypes: datetime64[ns](1), float64(1)\n","memory usage: 1.8 KB\n"]}]},{"cell_type":"markdown","source":["# **Inflation Rate**\n","- **Inflation Hedge:** Gold is often considered a hedge against inflation. When inflation is high, the value of money decreases, leading investors to buy gold to preserve their wealth, which can drive up gold prices.\n","\n","- **Interest Rates:** High inflation may prompt the Reserve Bank of India (RBI) to raise interest rates to control price levels. Higher interest rates can strengthen the rupee, potentially making gold less attractive, while low inflation may have the opposite effect.\n","\n","- **Purchasing Power:** As inflation rises, the purchasing power of the currency decreases, leading people to invest in gold as a store of value, which can increase demand and prices."],"metadata":{"id":"7urBYJw7Bktx"}},{"cell_type":"code","source":["india_inflation_rate.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"RpGll7tNabkG","executionInfo":{"status":"ok","timestamp":1725383077696,"user_tz":-330,"elapsed":496,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"a33b458b-9c36-4be2-b50e-daa69b114a69"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 Date      Time  Actual Forecast  Previous\n","0  Sep 12, 2024 (Aug)  08:00:00     NaN      NaN    0.0354\n","1  Aug 12, 2024 (Jul)  08:00:00  0.0354   0.0365    0.0508\n","2  Jul 12, 2024 (Jun)  17:30:00  0.0508    0.048    0.0480\n","3  Jun 12, 2024 (May)  17:30:00  0.0475    0.049    0.0483\n","4  May 13, 2024 (Apr)  17:30:00  0.0483    0.048    0.0485"],"text/html":["\n","  <div id=\"df-0a39b679-4510-497d-96a4-ea82cc0a7c59\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Time</th>\n","      <th>Actual</th>\n","      <th>Forecast</th>\n","      <th>Previous</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Sep 12, 2024 (Aug)</td>\n","      <td>08:00:00</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0354</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Aug 12, 2024 (Jul)</td>\n","      <td>08:00:00</td>\n","      <td>0.0354</td>\n","      <td>0.0365</td>\n","      <td>0.0508</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Jul 12, 2024 (Jun)</td>\n","      <td>17:30:00</td>\n","      <td>0.0508</td>\n","      <td>0.048</td>\n","      <td>0.0480</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Jun 12, 2024 (May)</td>\n","      <td>17:30:00</td>\n","      <td>0.0475</td>\n","      <td>0.049</td>\n","      <td>0.0483</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>May 13, 2024 (Apr)</td>\n","      <td>17:30:00</td>\n","      <td>0.0483</td>\n","      <td>0.048</td>\n","      <td>0.0485</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0a39b679-4510-497d-96a4-ea82cc0a7c59')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0a39b679-4510-497d-96a4-ea82cc0a7c59 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0a39b679-4510-497d-96a4-ea82cc0a7c59');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e4ea5379-0fc3-4e8b-82ec-181436260bc8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e4ea5379-0fc3-4e8b-82ec-181436260bc8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e4ea5379-0fc3-4e8b-82ec-181436260bc8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"india_inflation_rate","summary":"{\n  \"name\": \"india_inflation_rate\",\n  \"rows\": 149,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 149,\n        \"samples\": [\n          \"Jul 12, 2018 (Jun)\",\n          \"Mar 13, 2023 (Feb)\",\n          \"Nov 12, 2014 (Oct)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Time\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 11,\n        \"samples\": [\n          \"13:30:00\",\n          \"08:00:00\",\n          \"18:30:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actual\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.023138280248756884,\n        \"min\": 0.0154,\n        \"max\": 0.139,\n        \"num_unique_values\": 133,\n        \"samples\": [\n          0.0759,\n          0.0417,\n          0.0559\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Forecast\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 100,\n        \"samples\": [\n          0.0835,\n          0.0248,\n          0.039\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Previous\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.023804035191964397,\n        \"min\": 0.0154,\n        \"max\": 0.139,\n        \"num_unique_values\": 131,\n        \"samples\": [\n          0.0399,\n          0.0406,\n          0.0588\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":93}]},{"cell_type":"code","source":["india_inflation_rate.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1N84kz-vCJY7","executionInfo":{"status":"ok","timestamp":1725383089496,"user_tz":-330,"elapsed":392,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"d02c139a-d2dd-4fc2-95ac-61526f0d1d63"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 149 entries, 0 to 148\n","Data columns (total 5 columns):\n"," #   Column    Non-Null Count  Dtype  \n","---  ------    --------------  -----  \n"," 0   Date      149 non-null    object \n"," 1   Time      149 non-null    object \n"," 2   Actual    148 non-null    float64\n"," 3   Forecast  148 non-null    object \n"," 4   Previous  149 non-null    float64\n","dtypes: float64(2), object(3)\n","memory usage: 5.9+ KB\n"]}]},{"cell_type":"code","source":["india_inflation_rate.drop(columns=['Time','Forecast','Previous'],inplace=True)"],"metadata":{"id":"lxDWgpCrCYJU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["india_inflation_rate['Date']=india_inflation_rate['Date'].apply(preprocess_date)"],"metadata":{"id":"peYFsXUq2Qz6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["india_inflation_rate.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"bbZIS9Kj2a98","executionInfo":{"status":"ok","timestamp":1725383167583,"user_tz":-330,"elapsed":5,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"8d92cb28-5a26-481b-cd67-bad93a243671"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Date  Actual\n","0  2024-09-12     NaN\n","1  2024-08-12  0.0354\n","2  2024-07-12  0.0508\n","3  2024-06-12  0.0475\n","4  2024-05-13  0.0483"],"text/html":["\n","  <div id=\"df-7aa5dfc8-31c6-436e-b884-89557f4f49cb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Actual</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2024-09-12</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2024-08-12</td>\n","      <td>0.0354</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2024-07-12</td>\n","      <td>0.0508</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2024-06-12</td>\n","      <td>0.0475</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2024-05-13</td>\n","      <td>0.0483</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7aa5dfc8-31c6-436e-b884-89557f4f49cb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7aa5dfc8-31c6-436e-b884-89557f4f49cb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7aa5dfc8-31c6-436e-b884-89557f4f49cb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ef4deebf-683f-46ef-bef5-9beb48c010e6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ef4deebf-683f-46ef-bef5-9beb48c010e6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ef4deebf-683f-46ef-bef5-9beb48c010e6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"india_inflation_rate","summary":"{\n  \"name\": \"india_inflation_rate\",\n  \"rows\": 149,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 149,\n        \"samples\": [\n          \"2018-07-12\",\n          \"2023-03-13\",\n          \"2014-11-12\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actual\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.023138280248756884,\n        \"min\": 0.0154,\n        \"max\": 0.139,\n        \"num_unique_values\": 133,\n        \"samples\": [\n          0.0759,\n          0.0417,\n          0.0559\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":101}]},{"cell_type":"code","source":["india_inflation_rate.date=pd.to_datetime(india_inflation_rate.Date)\n","india_inflation_rate.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0O_o1sQdCMup","executionInfo":{"status":"ok","timestamp":1725383188030,"user_tz":-330,"elapsed":402,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"442b7fde-7612-48df-b3e2-3cee4f311305"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 149 entries, 0 to 148\n","Data columns (total 2 columns):\n"," #   Column  Non-Null Count  Dtype  \n","---  ------  --------------  -----  \n"," 0   Date    149 non-null    object \n"," 1   Actual  148 non-null    float64\n","dtypes: float64(1), object(1)\n","memory usage: 2.5+ KB\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-103-e642d55ef5bd>:1: UserWarning: Pandas doesn't allow columns to be created via a new attribute name - see https://pandas.pydata.org/pandas-docs/stable/indexing.html#attribute-access\n","  india_inflation_rate.date=pd.to_datetime(india_inflation_rate.Date)\n"]}]},{"cell_type":"code","source":["india_inflation_rate=india_inflation_rate.rename(columns={'Actual':'Inflation Rate (%)'})\n","india_inflation_rate.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"baH4-54UCRGq","executionInfo":{"status":"ok","timestamp":1725383214416,"user_tz":-330,"elapsed":577,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"38772844-ab8a-43df-9767-8c9a2cba50cb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Date  Inflation Rate (%)\n","0  2024-09-12                 NaN\n","1  2024-08-12              0.0354\n","2  2024-07-12              0.0508\n","3  2024-06-12              0.0475\n","4  2024-05-13              0.0483"],"text/html":["\n","  <div id=\"df-ece8dade-2841-437d-9c48-0196e745f6af\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Inflation Rate (%)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2024-09-12</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2024-08-12</td>\n","      <td>0.0354</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2024-07-12</td>\n","      <td>0.0508</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2024-06-12</td>\n","      <td>0.0475</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2024-05-13</td>\n","      <td>0.0483</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ece8dade-2841-437d-9c48-0196e745f6af')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ece8dade-2841-437d-9c48-0196e745f6af button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ece8dade-2841-437d-9c48-0196e745f6af');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-eb51748a-b869-40e3-844f-b4e44bf00ef1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-eb51748a-b869-40e3-844f-b4e44bf00ef1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-eb51748a-b869-40e3-844f-b4e44bf00ef1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"india_inflation_rate","summary":"{\n  \"name\": \"india_inflation_rate\",\n  \"rows\": 149,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 149,\n        \"samples\": [\n          \"2018-07-12\",\n          \"2023-03-13\",\n          \"2014-11-12\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Inflation Rate (%)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.023138280248756884,\n        \"min\": 0.0154,\n        \"max\": 0.139,\n        \"num_unique_values\": 133,\n        \"samples\": [\n          0.0759,\n          0.0417,\n          0.0559\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":104}]},{"cell_type":"code","source":["india_inflation_rate['Date']=pd.to_datetime(india_inflation_rate['Date'])\n","india_inflation_rate.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iSlJS1A3ERkP","executionInfo":{"status":"ok","timestamp":1725383338071,"user_tz":-330,"elapsed":4,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"aa2fa8b5-0e98-4c6d-c49f-dcac6395308b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 149 entries, 0 to 148\n","Data columns (total 2 columns):\n"," #   Column              Non-Null Count  Dtype         \n","---  ------              --------------  -----         \n"," 0   Date                149 non-null    datetime64[ns]\n"," 1   Inflation Rate (%)  148 non-null    float64       \n","dtypes: datetime64[ns](1), float64(1)\n","memory usage: 2.5 KB\n"]}]},{"cell_type":"code","source":["india_inflation_rate.sort_values(by='Date',inplace=True)\n","india_inflation_rate.set_index('Date',inplace=True)\n","india_inflation_rate.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"id":"axds7ph12rQv","executionInfo":{"status":"ok","timestamp":1725383342247,"user_tz":-330,"elapsed":431,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"63afcfae-ae6c-4ff1-9c55-aa771aac7cf1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Inflation Rate (%)\n","Date                          \n","2010-06-30               0.139\n","2010-08-02               0.137\n","2010-09-02               0.113\n","2010-10-01               0.099\n","2010-11-01               0.098"],"text/html":["\n","  <div id=\"df-43560eaa-2278-4851-bec3-547b32424bdf\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Inflation Rate (%)</th>\n","    </tr>\n","    <tr>\n","      <th>Date</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2010-06-30</th>\n","      <td>0.139</td>\n","    </tr>\n","    <tr>\n","      <th>2010-08-02</th>\n","      <td>0.137</td>\n","    </tr>\n","    <tr>\n","      <th>2010-09-02</th>\n","      <td>0.113</td>\n","    </tr>\n","    <tr>\n","      <th>2010-10-01</th>\n","      <td>0.099</td>\n","    </tr>\n","    <tr>\n","      <th>2010-11-01</th>\n","      <td>0.098</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-43560eaa-2278-4851-bec3-547b32424bdf')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-43560eaa-2278-4851-bec3-547b32424bdf button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-43560eaa-2278-4851-bec3-547b32424bdf');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d8761d4a-3907-4529-9df6-6daa8a254f7c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d8761d4a-3907-4529-9df6-6daa8a254f7c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d8761d4a-3907-4529-9df6-6daa8a254f7c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"india_inflation_rate","summary":"{\n  \"name\": \"india_inflation_rate\",\n  \"rows\": 149,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2010-06-30 00:00:00\",\n        \"max\": \"2024-09-12 00:00:00\",\n        \"num_unique_values\": 149,\n        \"samples\": [\n          \"2018-05-14 00:00:00\",\n          \"2013-10-14 00:00:00\",\n          \"2022-02-14 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Inflation Rate (%)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.023138280248756884,\n        \"min\": 0.0154,\n        \"max\": 0.139,\n        \"num_unique_values\": 133,\n        \"samples\": [\n          0.0341,\n          0.0369,\n          0.0517\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":113}]},{"cell_type":"code","source":["india_inflation_rate['Inflation Rate (%)']=india_inflation_rate['Inflation Rate (%)'].interpolate(method='time')"],"metadata":{"id":"_PdSQ4Pv2xrC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["india_inflation_rate.reset_index(inplace=True)"],"metadata":{"id":"cAtyk2HI3JaU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["india_inflation_rate.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"YzCOtGDa3LpJ","executionInfo":{"status":"ok","timestamp":1725383367661,"user_tz":-330,"elapsed":652,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"d04c4d2f-1ba7-40ee-ce0b-1b9deaae4c14"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        Date  Inflation Rate (%)\n","0 2010-06-30               0.139\n","1 2010-08-02               0.137\n","2 2010-09-02               0.113\n","3 2010-10-01               0.099\n","4 2010-11-01               0.098"],"text/html":["\n","  <div id=\"df-4f11826e-cb31-49b4-99e3-c89fc800c6f5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Inflation Rate (%)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2010-06-30</td>\n","      <td>0.139</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2010-08-02</td>\n","      <td>0.137</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2010-09-02</td>\n","      <td>0.113</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2010-10-01</td>\n","      <td>0.099</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2010-11-01</td>\n","      <td>0.098</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4f11826e-cb31-49b4-99e3-c89fc800c6f5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4f11826e-cb31-49b4-99e3-c89fc800c6f5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4f11826e-cb31-49b4-99e3-c89fc800c6f5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-61edb109-d507-4714-8a4d-ebd34d23d38f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-61edb109-d507-4714-8a4d-ebd34d23d38f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-61edb109-d507-4714-8a4d-ebd34d23d38f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"india_inflation_rate","summary":"{\n  \"name\": \"india_inflation_rate\",\n  \"rows\": 149,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2010-06-30 00:00:00\",\n        \"max\": \"2024-09-12 00:00:00\",\n        \"num_unique_values\": 149,\n        \"samples\": [\n          \"2018-05-14 00:00:00\",\n          \"2013-10-14 00:00:00\",\n          \"2022-02-14 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Inflation Rate (%)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.023140728016320923,\n        \"min\": 0.0154,\n        \"max\": 0.139,\n        \"num_unique_values\": 133,\n        \"samples\": [\n          0.0341,\n          0.0369,\n          0.0517\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":116}]},{"cell_type":"markdown","source":["# **Indian Holidays**"],"metadata":{"id":"FxUAk2RgEXh2"}},{"cell_type":"code","source":["holiday.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"gP2y1zcRabgh","executionInfo":{"status":"ok","timestamp":1725383370953,"user_tz":-330,"elapsed":385,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"cbb73ed1-ece7-40b5-f67a-26fb2cb97720"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  Date     Holiday Name\n","0           14-01-2010  Makar Sankranti\n","1           16-05-2010  Akshaya Tritiya\n","2           23-08-2010              NaN\n","3           24-08-2010            Rakhi\n","4  2010-10-09 00:00:00          Ramadan"],"text/html":["\n","  <div id=\"df-b7900c1d-14cf-449b-ae00-9e367b862032\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Holiday Name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>14-01-2010</td>\n","      <td>Makar Sankranti</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>16-05-2010</td>\n","      <td>Akshaya Tritiya</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>23-08-2010</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>24-08-2010</td>\n","      <td>Rakhi</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2010-10-09 00:00:00</td>\n","      <td>Ramadan</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b7900c1d-14cf-449b-ae00-9e367b862032')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b7900c1d-14cf-449b-ae00-9e367b862032 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b7900c1d-14cf-449b-ae00-9e367b862032');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bf9b1ece-6b51-4c2d-b786-97d29d772cff\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bf9b1ece-6b51-4c2d-b786-97d29d772cff')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bf9b1ece-6b51-4c2d-b786-97d29d772cff button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"holiday","summary":"{\n  \"name\": \"holiday\",\n  \"rows\": 237,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 231,\n        \"samples\": [\n          \"13-04-2024\",\n          \"2014-12-07 00:00:00\",\n          \"2010-05-11 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Holiday Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 16,\n        \"samples\": [\n          \"Makar Sankranti\",\n          \"Akshaya Tritiya\",\n          \"Dussehra\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":117}]},{"cell_type":"code","source":["holiday.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UykZk12mEcVT","executionInfo":{"status":"ok","timestamp":1725384834118,"user_tz":-330,"elapsed":395,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"25b795f3-47a0-4642-9d1e-97e459626559"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","DatetimeIndex: 236 entries, 1970-01-01 00:00:00 to 1970-01-01 00:00:00.000000236\n","Data columns (total 2 columns):\n"," #   Column        Non-Null Count  Dtype         \n","---  ------        --------------  -----         \n"," 0   Date          236 non-null    datetime64[ns]\n"," 1   Holiday Name  236 non-null    object        \n","dtypes: datetime64[ns](1), object(1)\n","memory usage: 5.5+ KB\n"]}]},{"cell_type":"code","source":["holiday.Date=pd.to_datetime(holiday.Date)\n","holiday.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Jr7AIJg2Eec8","executionInfo":{"status":"ok","timestamp":1725383374583,"user_tz":-330,"elapsed":417,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"bdc8f490-b4ea-4709-8ea5-5af456874b22"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 237 entries, 0 to 236\n","Data columns (total 2 columns):\n"," #   Column        Non-Null Count  Dtype         \n","---  ------        --------------  -----         \n"," 0   Date          237 non-null    datetime64[ns]\n"," 1   Holiday Name  236 non-null    object        \n","dtypes: datetime64[ns](1), object(1)\n","memory usage: 3.8+ KB\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-118-5b15a8f6fd65>:1: UserWarning: Parsing dates in %d-%m-%Y format when dayfirst=False (the default) was specified. Pass `dayfirst=True` or specify a format to silence this warning.\n","  holiday.Date=pd.to_datetime(holiday.Date)\n"]}]},{"cell_type":"code","source":["holiday.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"dI89SzBi80-W","executionInfo":{"status":"ok","timestamp":1725384846867,"user_tz":-330,"elapsed":6,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"4a345c95-95ce-4942-fbd7-eb6056d3ecce"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                    Date     Holiday Name\n","1970-01-01 00:00:00.000000000 2010-01-14  Makar Sankranti\n","1970-01-01 00:00:00.000000001 2010-05-16  Akshaya Tritiya\n","1970-01-01 00:00:00.000000003 2010-08-24            Rakhi\n","1970-01-01 00:00:00.000000004 2010-10-09          Ramadan\n","1970-01-01 00:00:00.000000005 2010-08-10         Navratri"],"text/html":["\n","  <div id=\"df-b84a46c1-648c-4ed9-9af0-59c644972653\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Holiday Name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1970-01-01 00:00:00.000000000</th>\n","      <td>2010-01-14</td>\n","      <td>Makar Sankranti</td>\n","    </tr>\n","    <tr>\n","      <th>1970-01-01 00:00:00.000000001</th>\n","      <td>2010-05-16</td>\n","      <td>Akshaya Tritiya</td>\n","    </tr>\n","    <tr>\n","      <th>1970-01-01 00:00:00.000000003</th>\n","      <td>2010-08-24</td>\n","      <td>Rakhi</td>\n","    </tr>\n","    <tr>\n","      <th>1970-01-01 00:00:00.000000004</th>\n","      <td>2010-10-09</td>\n","      <td>Ramadan</td>\n","    </tr>\n","    <tr>\n","      <th>1970-01-01 00:00:00.000000005</th>\n","      <td>2010-08-10</td>\n","      <td>Navratri</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b84a46c1-648c-4ed9-9af0-59c644972653')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b84a46c1-648c-4ed9-9af0-59c644972653 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b84a46c1-648c-4ed9-9af0-59c644972653');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-764a0911-7736-4e3d-a041-88230f915479\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-764a0911-7736-4e3d-a041-88230f915479')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-764a0911-7736-4e3d-a041-88230f915479 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"holiday","summary":"{\n  \"name\": \"holiday\",\n  \"rows\": 236,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2010-01-14 00:00:00\",\n        \"max\": \"2024-12-25 00:00:00\",\n        \"num_unique_values\": 230,\n        \"samples\": [\n          \"2024-04-13 00:00:00\",\n          \"2014-10-08 00:00:00\",\n          \"2010-12-11 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Holiday Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 16,\n        \"samples\": [\n          \"Makar Sankranti\",\n          \"Akshaya Tritiya\",\n          \"Dussehra\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":236}]},{"cell_type":"code","source":["holiday.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":147},"id":"F_k9sSOhEnJa","executionInfo":{"status":"ok","timestamp":1725383377361,"user_tz":-330,"elapsed":408,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"da4c6847-732a-4337-ec0a-6f2fcb9f59c4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Date            0\n","Holiday Name    1\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Date</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Holiday Name</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":119}]},{"cell_type":"code","source":["holiday.dropna(inplace=True)"],"metadata":{"id":"Im7_QpHeEqAY"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# **Geopolitical Risk (GPR)**\n","This Index helps forecast gold prices by:\n","\n","- **Safe-Haven Demand:** Higher geopolitical risks drive investors to gold, increasing prices.\n","- **Market Volatility:** Geopolitical tensions cause market uncertainty, boosting gold demand.\n","- **Currency Impact:** Geopolitical events can destabilize currencies, affecting gold prices.\n","- **Economic Impact:** Tensions can lead to inflation, increasing gold's appeal as a hedge.\n","\n","GPR data helps predict gold price movements by reflecting how global events influence investor behavior."],"metadata":{"id":"UN0SoLazEu1x"}},{"cell_type":"code","source":["data_gpr_export.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"6HZJxS__aNuM","executionInfo":{"status":"ok","timestamp":1725383382102,"user_tz":-330,"elapsed":594,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"1ba672f1-e258-43cc-a330-6adf3c96a6bf"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       month        GPR  GPRC_IND\n","0 2010-01-01  91.581024  0.199638\n","1 2010-02-01  80.725357  0.207537\n","2 2010-03-01  74.116943  0.179881\n","3 2010-04-01  88.761581  0.281179\n","4 2010-05-01  88.958710  0.272963"],"text/html":["\n","  <div id=\"df-e8865db8-1f18-419e-a461-63758e85f61d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>month</th>\n","      <th>GPR</th>\n","      <th>GPRC_IND</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2010-01-01</td>\n","      <td>91.581024</td>\n","      <td>0.199638</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2010-02-01</td>\n","      <td>80.725357</td>\n","      <td>0.207537</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2010-03-01</td>\n","      <td>74.116943</td>\n","      <td>0.179881</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2010-04-01</td>\n","      <td>88.761581</td>\n","      <td>0.281179</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2010-05-01</td>\n","      <td>88.958710</td>\n","      <td>0.272963</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e8865db8-1f18-419e-a461-63758e85f61d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e8865db8-1f18-419e-a461-63758e85f61d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e8865db8-1f18-419e-a461-63758e85f61d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9a21bfd3-66a8-46af-9c47-6d7ccddb38a1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9a21bfd3-66a8-46af-9c47-6d7ccddb38a1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9a21bfd3-66a8-46af-9c47-6d7ccddb38a1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data_gpr_export","summary":"{\n  \"name\": \"data_gpr_export\",\n  \"rows\": 175,\n  \"fields\": [\n    {\n      \"column\": \"month\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2010-01-01 00:00:00\",\n        \"max\": \"2024-07-01 00:00:00\",\n        \"num_unique_values\": 175,\n        \"samples\": [\n          \"2023-01-01 00:00:00\",\n          \"2022-02-01 00:00:00\",\n          \"2018-06-01 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GPR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 30.72025537109108,\n        \"min\": 58.42076873779297,\n        \"max\": 318.9549255371094,\n        \"num_unique_values\": 175,\n        \"samples\": [\n          104.26704406738281,\n          216.1590118408203,\n          103.96858978271484\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GPRC_IND\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.9346678343217585,\n        \"min\": 0.06396783143281937,\n        \"max\": 91.92,\n        \"num_unique_values\": 175,\n        \"samples\": [\n          0.19585543870925903,\n          0.1711466759443283,\n          0.16108380258083344\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":121}]},{"cell_type":"code","source":["data_gpr_export.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uWxxw5zYE0u5","executionInfo":{"status":"ok","timestamp":1725383387609,"user_tz":-330,"elapsed":394,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"2cfbf6b4-4617-4e85-a461-b47965b5f17c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 175 entries, 0 to 174\n","Data columns (total 3 columns):\n"," #   Column    Non-Null Count  Dtype         \n","---  ------    --------------  -----         \n"," 0   month     175 non-null    datetime64[ns]\n"," 1   GPR       175 non-null    float64       \n"," 2   GPRC_IND  175 non-null    float64       \n","dtypes: datetime64[ns](1), float64(2)\n","memory usage: 4.2 KB\n"]}]},{"cell_type":"code","source":["data_gpr_export.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":178},"id":"vkpDZtJdE3Ow","executionInfo":{"status":"ok","timestamp":1725383389862,"user_tz":-330,"elapsed":388,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"a9691257-c16a-49ff-87a8-c7aa8bfd3b5f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["month       0\n","GPR         0\n","GPRC_IND    0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>month</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>GPR</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>GPRC_IND</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":123}]},{"cell_type":"code","source":["data_gpr_export=data_gpr_export.rename(columns={'month':'Date'})\n","data_gpr_export.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"K2XRTpooT3FA","executionInfo":{"status":"ok","timestamp":1725383392434,"user_tz":-330,"elapsed":432,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"52717007-778e-4cc3-8b6c-f4b031f3e4ad"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        Date        GPR  GPRC_IND\n","0 2010-01-01  91.581024  0.199638\n","1 2010-02-01  80.725357  0.207537\n","2 2010-03-01  74.116943  0.179881\n","3 2010-04-01  88.761581  0.281179\n","4 2010-05-01  88.958710  0.272963"],"text/html":["\n","  <div id=\"df-09a706cf-8f43-4b7e-b43b-15734e0bebc3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>GPR</th>\n","      <th>GPRC_IND</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2010-01-01</td>\n","      <td>91.581024</td>\n","      <td>0.199638</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2010-02-01</td>\n","      <td>80.725357</td>\n","      <td>0.207537</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2010-03-01</td>\n","      <td>74.116943</td>\n","      <td>0.179881</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2010-04-01</td>\n","      <td>88.761581</td>\n","      <td>0.281179</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2010-05-01</td>\n","      <td>88.958710</td>\n","      <td>0.272963</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-09a706cf-8f43-4b7e-b43b-15734e0bebc3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-09a706cf-8f43-4b7e-b43b-15734e0bebc3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-09a706cf-8f43-4b7e-b43b-15734e0bebc3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5f593ac7-db34-4005-a254-43f5c72ddded\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5f593ac7-db34-4005-a254-43f5c72ddded')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5f593ac7-db34-4005-a254-43f5c72ddded button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data_gpr_export","summary":"{\n  \"name\": \"data_gpr_export\",\n  \"rows\": 175,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2010-01-01 00:00:00\",\n        \"max\": \"2024-07-01 00:00:00\",\n        \"num_unique_values\": 175,\n        \"samples\": [\n          \"2023-01-01 00:00:00\",\n          \"2022-02-01 00:00:00\",\n          \"2018-06-01 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GPR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 30.72025537109108,\n        \"min\": 58.42076873779297,\n        \"max\": 318.9549255371094,\n        \"num_unique_values\": 175,\n        \"samples\": [\n          104.26704406738281,\n          216.1590118408203,\n          103.96858978271484\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GPRC_IND\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.9346678343217585,\n        \"min\": 0.06396783143281937,\n        \"max\": 91.92,\n        \"num_unique_values\": 175,\n        \"samples\": [\n          0.19585543870925903,\n          0.1711466759443283,\n          0.16108380258083344\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":124}]},{"cell_type":"markdown","source":["# **US Dollar Index**\n","**Inverse Relationship:** Gold is typically priced in USD. When the US Dollar Index rises (indicating a stronger dollar), gold prices often fall as gold becomes more expensive for holders of other currencies. Conversely, when the index falls (indicating a weaker dollar), gold prices often rise.\n","\n","**Currency Strength:** A strong US dollar can reduce the demand for gold as an investment, while a weaker dollar can increase demand as gold becomes cheaper in other currencies.\n","\n","**Inflation and Interest Rates:** Changes in the US dollar's strength can reflect broader economic conditions, including inflation and interest rate expectations, which influence gold prices."],"metadata":{"id":"W93ycPW6FVJ2"}},{"cell_type":"code","source":["US_Dollar.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"BnCfn02yaNqm","executionInfo":{"status":"ok","timestamp":1725383396966,"user_tz":-330,"elapsed":420,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"8e7c4314-3362-44a5-99f9-13c537d719de"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Date   Price    Open    High     Low  Vol. Change %\n","0  03-09-2024  101.71  101.67  101.86  101.63   NaN    0.04%\n","1  02-09-2024  101.67  101.76  101.80  101.57   NaN   -0.09%\n","2  01-09-2024  101.76  101.73  101.77  101.71   NaN    0.03%\n","3  30-08-2024  101.73  101.36  101.78  101.25   NaN    0.36%\n","4  29-08-2024  101.36  101.02  101.58  100.89   NaN    0.34%"],"text/html":["\n","  <div id=\"df-f788ab05-22b1-48e4-bdb2-873dc7c8fd57\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Price</th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Vol.</th>\n","      <th>Change %</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>03-09-2024</td>\n","      <td>101.71</td>\n","      <td>101.67</td>\n","      <td>101.86</td>\n","      <td>101.63</td>\n","      <td>NaN</td>\n","      <td>0.04%</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>02-09-2024</td>\n","      <td>101.67</td>\n","      <td>101.76</td>\n","      <td>101.80</td>\n","      <td>101.57</td>\n","      <td>NaN</td>\n","      <td>-0.09%</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>01-09-2024</td>\n","      <td>101.76</td>\n","      <td>101.73</td>\n","      <td>101.77</td>\n","      <td>101.71</td>\n","      <td>NaN</td>\n","      <td>0.03%</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>30-08-2024</td>\n","      <td>101.73</td>\n","      <td>101.36</td>\n","      <td>101.78</td>\n","      <td>101.25</td>\n","      <td>NaN</td>\n","      <td>0.36%</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>29-08-2024</td>\n","      <td>101.36</td>\n","      <td>101.02</td>\n","      <td>101.58</td>\n","      <td>100.89</td>\n","      <td>NaN</td>\n","      <td>0.34%</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f788ab05-22b1-48e4-bdb2-873dc7c8fd57')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f788ab05-22b1-48e4-bdb2-873dc7c8fd57 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f788ab05-22b1-48e4-bdb2-873dc7c8fd57');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f31a5ecc-905c-4e78-9662-be2d5819dea7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f31a5ecc-905c-4e78-9662-be2d5819dea7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f31a5ecc-905c-4e78-9662-be2d5819dea7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"US_Dollar","summary":"{\n  \"name\": \"US_Dollar\",\n  \"rows\": 3831,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3831,\n        \"samples\": [\n          \"07-10-2015\",\n          \"18-02-2020\",\n          \"25-06-2014\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.300719339117988,\n        \"min\": 72.93,\n        \"max\": 114.11,\n        \"num_unique_values\": 2027,\n        \"samples\": [\n          99.34,\n          96.01,\n          81.97\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Open\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.29806566662791,\n        \"min\": 72.99,\n        \"max\": 114.18,\n        \"num_unique_values\": 2022,\n        \"samples\": [\n          90.15,\n          81.52,\n          93.42\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"High\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.324787135153958,\n        \"min\": 73.19,\n        \"max\": 114.78,\n        \"num_unique_values\": 2048,\n        \"samples\": [\n          79.25,\n          90.45,\n          105.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Low\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.270111257110546,\n        \"min\": 72.7,\n        \"max\": 113.33,\n        \"num_unique_values\": 2009,\n        \"samples\": [\n          82.57,\n          94.08,\n          104.62\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Vol.\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Change %\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 282,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":125}]},{"cell_type":"code","source":["US_Dollar.drop(columns=['Open','High','Low','Vol.','Change %'],inplace=True)"],"metadata":{"id":"0mWfRRMLFf2z"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["US_Dollar = US_Dollar.rename(columns={\n","    'Date': 'Date',\n","    'Price': 'US_Price'\n","})\n","\n","print(US_Dollar.columns)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0G_gQpCvSGDI","executionInfo":{"status":"ok","timestamp":1725383418338,"user_tz":-330,"elapsed":528,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"4998a9e0-6a86-4682-dcf2-731bce8d9b6d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Index(['Date', 'US_Price'], dtype='object')\n"]}]},{"cell_type":"code","source":["US_Dollar.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e4LFB-yDFr2V","executionInfo":{"status":"ok","timestamp":1725383420630,"user_tz":-330,"elapsed":403,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"251269d1-c306-44ab-fd8c-b2669c7de8f3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3831 entries, 0 to 3830\n","Data columns (total 2 columns):\n"," #   Column    Non-Null Count  Dtype  \n","---  ------    --------------  -----  \n"," 0   Date      3831 non-null   object \n"," 1   US_Price  3831 non-null   float64\n","dtypes: float64(1), object(1)\n","memory usage: 60.0+ KB\n"]}]},{"cell_type":"code","source":["US_Dollar.Date=pd.to_datetime(US_Dollar.Date,dayfirst=True)\n","US_Dollar.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JuDWov38Fxaf","executionInfo":{"status":"ok","timestamp":1725383432284,"user_tz":-330,"elapsed":450,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"7192a3eb-72dd-4c89-aba2-0255bdd8f977"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3831 entries, 0 to 3830\n","Data columns (total 2 columns):\n"," #   Column    Non-Null Count  Dtype         \n","---  ------    --------------  -----         \n"," 0   Date      3831 non-null   datetime64[ns]\n"," 1   US_Price  3831 non-null   float64       \n","dtypes: datetime64[ns](1), float64(1)\n","memory usage: 60.0 KB\n"]}]},{"cell_type":"code","source":["US_Dollar.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":147},"id":"G4OPhzyZF1zO","executionInfo":{"status":"ok","timestamp":1725383434418,"user_tz":-330,"elapsed":389,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"ac3f5aa3-5524-4e32-c79c-14d768807fc8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Date        0\n","US_Price    0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Date</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>US_Price</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":131}]},{"cell_type":"markdown","source":["# **Silver Future**\n","Silver Mini Futures can help forecast gold prices by:\n","\n","- **Correlation:** Silver prices often move with gold, so changes in silver mini futures can signal gold price trends.\n","- **Market Sentiment:**Trends in silver futures reflect investor sentiment that can also affect gold.\n","- **Economic Indicators:** Both metals respond to similar economic factors, providing context for gold price movements."],"metadata":{"id":"LQrzjfXZF5cL"}},{"cell_type":"code","source":["Silver_Mini.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"j8vafS17aNoH","executionInfo":{"status":"ok","timestamp":1725383437769,"user_tz":-330,"elapsed":414,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"33f39efa-2d7c-48b2-b75b-2272d2feba05"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Date   Price    Open    High     Low    Vol. Change %\n","0  09/03/2024  83,040  84,600  84,535  82,860  33.18K   -1.87%\n","1  09/02/2024  84,623  85,020  85,020  84,149  21.18K    0.12%\n","2  08/30/2024  84,519  84,759  87,770  83,499   0.13K   -0.43%\n","3  08/29/2024  84,883  84,699  85,266  84,350   0.12K    0.98%\n","4  08/28/2024  84,063  85,298  85,379  83,850   0.29K   -1.74%"],"text/html":["\n","  <div id=\"df-b1687445-27ad-4ec8-b7c3-b92f44def00f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Price</th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Vol.</th>\n","      <th>Change %</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>09/03/2024</td>\n","      <td>83,040</td>\n","      <td>84,600</td>\n","      <td>84,535</td>\n","      <td>82,860</td>\n","      <td>33.18K</td>\n","      <td>-1.87%</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>09/02/2024</td>\n","      <td>84,623</td>\n","      <td>85,020</td>\n","      <td>85,020</td>\n","      <td>84,149</td>\n","      <td>21.18K</td>\n","      <td>0.12%</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>08/30/2024</td>\n","      <td>84,519</td>\n","      <td>84,759</td>\n","      <td>87,770</td>\n","      <td>83,499</td>\n","      <td>0.13K</td>\n","      <td>-0.43%</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>08/29/2024</td>\n","      <td>84,883</td>\n","      <td>84,699</td>\n","      <td>85,266</td>\n","      <td>84,350</td>\n","      <td>0.12K</td>\n","      <td>0.98%</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>08/28/2024</td>\n","      <td>84,063</td>\n","      <td>85,298</td>\n","      <td>85,379</td>\n","      <td>83,850</td>\n","      <td>0.29K</td>\n","      <td>-1.74%</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b1687445-27ad-4ec8-b7c3-b92f44def00f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b1687445-27ad-4ec8-b7c3-b92f44def00f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b1687445-27ad-4ec8-b7c3-b92f44def00f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7cbc77a2-757d-4eba-a134-9f333701e2d0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7cbc77a2-757d-4eba-a134-9f333701e2d0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7cbc77a2-757d-4eba-a134-9f333701e2d0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"Silver_Mini","summary":"{\n  \"name\": \"Silver_Mini\",\n  \"rows\": 21,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 21,\n        \"samples\": [\n          \"09/03/2024\",\n          \"08/08/2024\",\n          \"08/12/2024\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 21,\n        \"samples\": [\n          \"83,040\",\n          \"80,650\",\n          \"81,648\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Open\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"84,600\",\n          \"79,714\",\n          \"80,786\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"High\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 21,\n        \"samples\": [\n          \"84,535\",\n          \"80,800\",\n          \"81,772\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Low\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 21,\n        \"samples\": [\n          \"82,860\",\n          \"78,882\",\n          \"80,321\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Vol.\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 21,\n        \"samples\": [\n          \"33.18K\",\n          \"47.50K\",\n          \"37.32K\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Change %\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 21,\n        \"samples\": [\n          \"-1.87%\",\n          \"2.05%\",\n          \"1.31%\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":132}]},{"cell_type":"code","source":["Silver_Mini.drop(columns=['Open','High','Low','Vol.','Change %'],inplace=True)"],"metadata":{"id":"i-xgWnksGESY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Silver_Mini = Silver_Mini.rename(columns={\n","    'Date': 'Date',\n","    'Price': 'Silver_Price'\n","})\n","\n","print(Silver_Mini.columns)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qu2OnBT3SXMj","executionInfo":{"status":"ok","timestamp":1725383458052,"user_tz":-330,"elapsed":379,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"1bfe7db5-8823-4059-f06d-85243dc2a466"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Index(['Date', 'Silver_Price'], dtype='object')\n"]}]},{"cell_type":"code","source":["Silver_Mini.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"r9SscQxGGMl2","executionInfo":{"status":"ok","timestamp":1723290155602,"user_tz":-330,"elapsed":433,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"36683c05-31c0-450c-ca2d-1fda2fe13ffc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3350 entries, 0 to 3349\n","Data columns (total 4 columns):\n"," #   Column           Non-Null Count  Dtype \n","---  ------           --------------  ----- \n"," 0   Date             3350 non-null   object\n"," 1   Silver_Price     3350 non-null   object\n"," 2   Silver_Vol.      3331 non-null   object\n"," 3   Silver_Change %  3350 non-null   object\n","dtypes: object(4)\n","memory usage: 104.8+ KB\n"]}]},{"cell_type":"code","source":["Silver_Mini.Date=pd.to_datetime(Silver_Mini.Date)\n","Silver_Mini['Silver_Price']=Silver_Mini['Silver_Price'].str.replace(',','').astype(float)\n","Silver_Mini.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MWj-69BJGPsU","executionInfo":{"status":"ok","timestamp":1725383473244,"user_tz":-330,"elapsed":408,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"f1bba47e-6fbc-4f02-93dd-c9fef865f006"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 21 entries, 0 to 20\n","Data columns (total 2 columns):\n"," #   Column        Non-Null Count  Dtype         \n","---  ------        --------------  -----         \n"," 0   Date          21 non-null     datetime64[ns]\n"," 1   Silver_Price  21 non-null     float64       \n","dtypes: datetime64[ns](1), float64(1)\n","memory usage: 464.0 bytes\n"]}]},{"cell_type":"code","source":["Silver_Mini.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":147},"id":"gsUNNVt2GgUx","executionInfo":{"status":"ok","timestamp":1725383476546,"user_tz":-330,"elapsed":404,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"e778cd4a-e4d2-4a7e-e7b5-01aa906e0565"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Date            0\n","Silver_Price    0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Date</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Silver_Price</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":136}]},{"cell_type":"markdown","source":["# **US_Federal Rate**\n","\n","- **Interest Rates:** Higher Fed rates generally increase borrowing costs and can strengthen the USD, which often leads to lower gold prices as gold becomes more expensive in other currencies. Lower rates can weaken the USD and potentially boost gold prices.\n","\n","- **Inflation Expectations:** The Fed's rate decisions reflect its stance on inflation. Rising rates might indicate the Fed's effort to control inflation, which can reduce gold’s appeal as an inflation hedge. Conversely, lower rates might signal rising inflation, increasing gold’s appeal.\n","\n","- **Economic Signals:** Changes in the Fed’s target rate provide insights into economic conditions and future monetary policy, which can impact investor sentiment and demand for gold."],"metadata":{"id":"N4ApsRilHeVm"}},{"cell_type":"code","source":["US_federal_target_rate.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"RGv_R-DdHegX","executionInfo":{"status":"ok","timestamp":1725383482835,"user_tz":-330,"elapsed":463,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"e5a74bfe-2ed2-4dbb-b863-94cf1e0deca0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        Date      Time Actual Forecast  Previous\n","0 2024-08-16  23:30:00      -    0.055     0.055\n","1 2024-07-31  23:30:00      -    0.055     0.055\n","2 2024-06-12  23:30:00  0.055    0.055     0.055\n","3 2024-05-01  23:30:00  0.055    0.055     0.055\n","4 2024-03-20  23:30:00  0.055    0.055     0.055"],"text/html":["\n","  <div id=\"df-24a865e2-dbb6-4308-a5c5-77d03af63c7c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Time</th>\n","      <th>Actual</th>\n","      <th>Forecast</th>\n","      <th>Previous</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2024-08-16</td>\n","      <td>23:30:00</td>\n","      <td>-</td>\n","      <td>0.055</td>\n","      <td>0.055</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2024-07-31</td>\n","      <td>23:30:00</td>\n","      <td>-</td>\n","      <td>0.055</td>\n","      <td>0.055</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2024-06-12</td>\n","      <td>23:30:00</td>\n","      <td>0.055</td>\n","      <td>0.055</td>\n","      <td>0.055</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2024-05-01</td>\n","      <td>23:30:00</td>\n","      <td>0.055</td>\n","      <td>0.055</td>\n","      <td>0.055</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2024-03-20</td>\n","      <td>23:30:00</td>\n","      <td>0.055</td>\n","      <td>0.055</td>\n","      <td>0.055</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-24a865e2-dbb6-4308-a5c5-77d03af63c7c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-24a865e2-dbb6-4308-a5c5-77d03af63c7c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-24a865e2-dbb6-4308-a5c5-77d03af63c7c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f24f082e-d50e-4f5a-a231-e0818036d4aa\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f24f082e-d50e-4f5a-a231-e0818036d4aa')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f24f082e-d50e-4f5a-a231-e0818036d4aa button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"US_federal_target_rate","summary":"{\n  \"name\": \"US_federal_target_rate\",\n  \"rows\": 129,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2010-01-28 00:00:00\",\n        \"max\": \"2024-08-16 00:00:00\",\n        \"num_unique_values\": 119,\n        \"samples\": [\n          \"2017-11-01 00:00:00\",\n          \"2013-09-18 00:00:00\",\n          \"2024-03-20 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Time\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"00:30:00\",\n          \"23:00:00\",\n          \"23:30:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actual\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 18,\n        \"samples\": [\n          \"-\",\n          0.055,\n          0.025\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Forecast\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 18,\n        \"samples\": [\n          0.055,\n          0.0525,\n          0.015\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Previous\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.019518236943975312,\n        \"min\": 0.0025,\n        \"max\": 0.055,\n        \"num_unique_values\": 17,\n        \"samples\": [\n          0.055,\n          0.0525,\n          0.04\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":137}]},{"cell_type":"code","source":["US_federal_target_rate.drop(columns=['Time','Forecast','Previous'],inplace=True)\n","US_federal_target_rate=US_federal_target_rate.rename(columns={'Date':'Date','Actual':'US_federal_target_rate_Actual'})\n","US_federal_target_rate.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"dRAgVOs_IHU6","executionInfo":{"status":"ok","timestamp":1725383489466,"user_tz":-330,"elapsed":438,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"6bf8eac2-97ca-42e9-bd0f-7dad1130715a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        Date US_federal_target_rate_Actual\n","0 2024-08-16                             -\n","1 2024-07-31                             -\n","2 2024-06-12                         0.055\n","3 2024-05-01                         0.055\n","4 2024-03-20                         0.055"],"text/html":["\n","  <div id=\"df-86a5356c-6ef0-4ce7-b502-a6e65f76ebaf\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>US_federal_target_rate_Actual</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2024-08-16</td>\n","      <td>-</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2024-07-31</td>\n","      <td>-</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2024-06-12</td>\n","      <td>0.055</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2024-05-01</td>\n","      <td>0.055</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2024-03-20</td>\n","      <td>0.055</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-86a5356c-6ef0-4ce7-b502-a6e65f76ebaf')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-86a5356c-6ef0-4ce7-b502-a6e65f76ebaf button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-86a5356c-6ef0-4ce7-b502-a6e65f76ebaf');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4a72805b-6c08-452a-a912-5f8b04456a6f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4a72805b-6c08-452a-a912-5f8b04456a6f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4a72805b-6c08-452a-a912-5f8b04456a6f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"US_federal_target_rate","summary":"{\n  \"name\": \"US_federal_target_rate\",\n  \"rows\": 129,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2010-01-28 00:00:00\",\n        \"max\": \"2024-08-16 00:00:00\",\n        \"num_unique_values\": 119,\n        \"samples\": [\n          \"2017-11-01 00:00:00\",\n          \"2013-09-18 00:00:00\",\n          \"2024-03-20 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"US_federal_target_rate_Actual\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 18,\n        \"samples\": [\n          \"-\",\n          0.055,\n          0.025\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":138}]},{"cell_type":"code","source":["US_federal_target_rate.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0-_PQDCCIWOA","executionInfo":{"status":"ok","timestamp":1725383494071,"user_tz":-330,"elapsed":415,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"827f7fa8-3532-464c-c9f5-96c039fa5892"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 129 entries, 0 to 128\n","Data columns (total 2 columns):\n"," #   Column                         Non-Null Count  Dtype         \n","---  ------                         --------------  -----         \n"," 0   Date                           129 non-null    datetime64[ns]\n"," 1   US_federal_target_rate_Actual  129 non-null    object        \n","dtypes: datetime64[ns](1), object(1)\n","memory usage: 2.1+ KB\n"]}]},{"cell_type":"code","source":["US_federal_target_rate['US_federal_target_rate_Actual'] = pd.to_numeric(US_federal_target_rate['US_federal_target_rate_Actual'], errors='coerce')\n"],"metadata":{"id":"qoWgOTjGIbfK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["US_federal_target_rate['US_federal_target_rate_Actual'] = US_federal_target_rate['US_federal_target_rate_Actual'].interpolate(method='linear')\n","US_federal_target_rate.info()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"S-_NkLKGIx4R","executionInfo":{"status":"ok","timestamp":1725383506425,"user_tz":-330,"elapsed":389,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"aa4af195-325f-411c-860a-7929158a059e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 129 entries, 0 to 128\n","Data columns (total 2 columns):\n"," #   Column                         Non-Null Count  Dtype         \n","---  ------                         --------------  -----         \n"," 0   Date                           129 non-null    datetime64[ns]\n"," 1   US_federal_target_rate_Actual  127 non-null    float64       \n","dtypes: datetime64[ns](1), float64(1)\n","memory usage: 2.1 KB\n"]}]},{"cell_type":"code","source":["US_federal_target_rate.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":147},"id":"34rQ4YsyI4xn","executionInfo":{"status":"ok","timestamp":1725383511760,"user_tz":-330,"elapsed":429,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"b0a4e668-b083-4556-b736-2bcb65829bfe"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Date                             0\n","US_federal_target_rate_Actual    2\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Date</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>US_federal_target_rate_Actual</th>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":142}]},{"cell_type":"code","source":["US_federal_target_rate.loc[US_federal_target_rate['US_federal_target_rate_Actual'].isnull()]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"0cRGvIuHI8ET","executionInfo":{"status":"ok","timestamp":1725383516717,"user_tz":-330,"elapsed":410,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"83e2e00a-2eef-4988-b9f0-da144b9d052e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        Date  US_federal_target_rate_Actual\n","0 2024-08-16                            NaN\n","1 2024-07-31                            NaN"],"text/html":["\n","  <div id=\"df-0a0115a3-ec34-430c-adda-1be2b606253e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>US_federal_target_rate_Actual</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2024-08-16</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2024-07-31</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0a0115a3-ec34-430c-adda-1be2b606253e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0a0115a3-ec34-430c-adda-1be2b606253e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0a0115a3-ec34-430c-adda-1be2b606253e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cd3c69ff-818b-4701-b7c4-aab2032176bb\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cd3c69ff-818b-4701-b7c4-aab2032176bb')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cd3c69ff-818b-4701-b7c4-aab2032176bb button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"US_federal_target_rate\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2024-07-31 00:00:00\",\n        \"max\": \"2024-08-16 00:00:00\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"2024-07-31 00:00:00\",\n          \"2024-08-16 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"US_federal_target_rate_Actual\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":143}]},{"cell_type":"code","source":["US_federal_target_rate['US_federal_target_rate_Actual'] = US_federal_target_rate['US_federal_target_rate_Actual'].fillna(method='bfill')\n","US_federal_target_rate.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":181},"id":"c3ksO6EQI8cZ","executionInfo":{"status":"ok","timestamp":1725383521906,"user_tz":-330,"elapsed":439,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"33dd5523-c96f-463f-efae-b39b9eb6ee5e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-144-a4ea78b10681>:1: FutureWarning: Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.\n","  US_federal_target_rate['US_federal_target_rate_Actual'] = US_federal_target_rate['US_federal_target_rate_Actual'].fillna(method='bfill')\n"]},{"output_type":"execute_result","data":{"text/plain":["Date                             0\n","US_federal_target_rate_Actual    0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Date</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>US_federal_target_rate_Actual</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":144}]},{"cell_type":"markdown","source":["# **USD_INR**\n","- **Currency Impact:** Gold is priced in USD. A stronger USD relative to INR makes gold more expensive in India, potentially lowering demand and prices. Conversely, a weaker USD can make gold cheaper in INR, increasing demand and prices.\n","\n","- **Economic Conditions:** Changes in the USD/INR exchange rate can reflect economic conditions and monetary policy shifts in both the US and India, which can influence gold prices.\n","\n","- **Inflation and Interest Rates:** Fluctuations in the USD/INR rate can be linked to inflation and interest rate changes, which impact gold as a hedge against inflation."],"metadata":{"id":"bAf8IR-fG1Jz"}},{"cell_type":"code","source":["USD_INR.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"IPSo84BDaBlI","executionInfo":{"status":"ok","timestamp":1725383529161,"user_tz":-330,"elapsed":386,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"ec345186-6122-4ca9-abe1-59f65f687f58"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Date   Price    Open    High     Low  Vol. Change %\n","0  03-09-2024  83.952  83.928  83.976  83.909   NaN    0.09%\n","1  02-09-2024  83.880  83.875  83.946  83.850   NaN    0.02%\n","2  30-08-2024  83.867  83.884  83.905  83.811   NaN   -0.02%\n","3  29-08-2024  83.880  83.944  83.956  83.839   NaN   -0.02%\n","4  28-08-2024  83.900  83.963  83.988  83.910   NaN   -0.01%"],"text/html":["\n","  <div id=\"df-0e69567c-5fab-4c3f-9ab6-f3fddee02cda\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Price</th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Vol.</th>\n","      <th>Change %</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>03-09-2024</td>\n","      <td>83.952</td>\n","      <td>83.928</td>\n","      <td>83.976</td>\n","      <td>83.909</td>\n","      <td>NaN</td>\n","      <td>0.09%</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>02-09-2024</td>\n","      <td>83.880</td>\n","      <td>83.875</td>\n","      <td>83.946</td>\n","      <td>83.850</td>\n","      <td>NaN</td>\n","      <td>0.02%</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>30-08-2024</td>\n","      <td>83.867</td>\n","      <td>83.884</td>\n","      <td>83.905</td>\n","      <td>83.811</td>\n","      <td>NaN</td>\n","      <td>-0.02%</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>29-08-2024</td>\n","      <td>83.880</td>\n","      <td>83.944</td>\n","      <td>83.956</td>\n","      <td>83.839</td>\n","      <td>NaN</td>\n","      <td>-0.02%</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>28-08-2024</td>\n","      <td>83.900</td>\n","      <td>83.963</td>\n","      <td>83.988</td>\n","      <td>83.910</td>\n","      <td>NaN</td>\n","      <td>-0.01%</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0e69567c-5fab-4c3f-9ab6-f3fddee02cda')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0e69567c-5fab-4c3f-9ab6-f3fddee02cda button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0e69567c-5fab-4c3f-9ab6-f3fddee02cda');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-14aaeaa8-9487-450d-922e-639383a5484c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-14aaeaa8-9487-450d-922e-639383a5484c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-14aaeaa8-9487-450d-922e-639383a5484c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"USD_INR","summary":"{\n  \"name\": \"USD_INR\",\n  \"rows\": 3828,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3828,\n        \"samples\": [\n          \"24-06-2013\",\n          \"09-06-2010\",\n          \"22-02-2017\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.316745350353209,\n        \"min\": 43.925,\n        \"max\": 84.018,\n        \"num_unique_values\": 3127,\n        \"samples\": [\n          69.375,\n          71.969,\n          61.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Open\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.325909686325414,\n        \"min\": 43.89,\n        \"max\": 84.015,\n        \"num_unique_values\": 3235,\n        \"samples\": [\n          70.869,\n          67.669,\n          44.945\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"High\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.303106356904369,\n        \"min\": 43.975,\n        \"max\": 84.182,\n        \"num_unique_values\": 3205,\n        \"samples\": [\n          74.747,\n          45.505,\n          56.855\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Low\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.340830267838273,\n        \"min\": 43.83,\n        \"max\": 83.936,\n        \"num_unique_values\": 3202,\n        \"samples\": [\n          60.445,\n          82.185,\n          73.661\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Vol.\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Change %\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 271,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":145}]},{"cell_type":"code","source":["USD_INR.drop(columns=['Open','High','Low','Vol.','Change %'],inplace=True)"],"metadata":{"id":"aLfzou4zHg0e"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["USD_INR = USD_INR.rename(columns={\n","    'Date': 'Date',\n","    'Price': 'USD_INR_Price'\n","})\n","\n","print(USD_INR.columns)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tOtUI_aPSoAs","executionInfo":{"status":"ok","timestamp":1725383540565,"user_tz":-330,"elapsed":395,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"a14377d0-b1bd-4089-d894-18c5522f9728"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Index(['Date', 'USD_INR_Price'], dtype='object')\n"]}]},{"cell_type":"code","source":["USD_INR.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"p8D5deijHmeC","executionInfo":{"status":"ok","timestamp":1725383545770,"user_tz":-330,"elapsed":403,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"5b294815-7d03-4201-bba4-b38835f9a175"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3828 entries, 0 to 3827\n","Data columns (total 2 columns):\n"," #   Column         Non-Null Count  Dtype  \n","---  ------         --------------  -----  \n"," 0   Date           3828 non-null   object \n"," 1   USD_INR_Price  3828 non-null   float64\n","dtypes: float64(1), object(1)\n","memory usage: 59.9+ KB\n"]}]},{"cell_type":"code","source":["USD_INR.Date=pd.to_datetime(USD_INR.Date,dayfirst=True)\n","USD_INR.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CV5neVkDHqQY","executionInfo":{"status":"ok","timestamp":1725383567834,"user_tz":-330,"elapsed":396,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"09502246-ec68-4efb-ec58-2711f19c4011"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3828 entries, 0 to 3827\n","Data columns (total 2 columns):\n"," #   Column         Non-Null Count  Dtype         \n","---  ------         --------------  -----         \n"," 0   Date           3828 non-null   datetime64[ns]\n"," 1   USD_INR_Price  3828 non-null   float64       \n","dtypes: datetime64[ns](1), float64(1)\n","memory usage: 59.9 KB\n"]}]},{"cell_type":"code","source":["USD_INR.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":147},"id":"WUZNbuXKHvqv","executionInfo":{"status":"ok","timestamp":1725383570082,"user_tz":-330,"elapsed":407,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"df0c22b5-2472-44ef-e12b-300c7944526c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Date             0\n","USD_INR_Price    0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Date</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>USD_INR_Price</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":151}]},{"cell_type":"markdown","source":["# **WPI**\n","- **Inflation Indicator:** Rising WPI signals higher inflation, increasing demand for gold as a hedge.\n","- **Economic Activity:** Higher WPI can reflect economic growth, affecting gold demand.\n","- **Currency Impact:** Changes in WPI can influence monetary policy and currency strength, impacting gold prices."],"metadata":{"id":"cEs4SA6BHtfZ"}},{"cell_type":"code","source":["WPI.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"ZbBXUiuoaBic","executionInfo":{"status":"ok","timestamp":1725383572160,"user_tz":-330,"elapsed":432,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"40454aa0-dd18-481a-bcf5-9ecdf8fae36d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Release Date  Actual  Previous\n","0  Aug 14, 2024 (Jul)  0.0204    0.0336\n","1  Jul 15, 2024 (Jun)  0.0336    0.0261\n","2  Jun 14, 2024 (May)  0.0261    0.0126\n","3  May 14, 2024 (Apr)  0.0126    0.0053\n","4  Apr 15, 2024 (Mar)  0.0053    0.0020"],"text/html":["\n","  <div id=\"df-2487aab2-32cb-465a-983a-a72b63e69f01\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Release Date</th>\n","      <th>Actual</th>\n","      <th>Previous</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Aug 14, 2024 (Jul)</td>\n","      <td>0.0204</td>\n","      <td>0.0336</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Jul 15, 2024 (Jun)</td>\n","      <td>0.0336</td>\n","      <td>0.0261</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Jun 14, 2024 (May)</td>\n","      <td>0.0261</td>\n","      <td>0.0126</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>May 14, 2024 (Apr)</td>\n","      <td>0.0126</td>\n","      <td>0.0053</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Apr 15, 2024 (Mar)</td>\n","      <td>0.0053</td>\n","      <td>0.0020</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2487aab2-32cb-465a-983a-a72b63e69f01')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2487aab2-32cb-465a-983a-a72b63e69f01 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2487aab2-32cb-465a-983a-a72b63e69f01');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c41fd48f-7e91-4db0-9d87-0037fd3cbb17\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c41fd48f-7e91-4db0-9d87-0037fd3cbb17')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c41fd48f-7e91-4db0-9d87-0037fd3cbb17 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"WPI","summary":"{\n  \"name\": \"WPI\",\n  \"rows\": 176,\n  \"fields\": [\n    {\n      \"column\": \"Release Date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 176,\n        \"samples\": [\n          \"Jan 16, 2023 (Dec)\",\n          \"Nov 16, 2020\",\n          \"Jan 14, 2013\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actual\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.04591511467392279,\n        \"min\": -0.0495,\n        \"max\": 0.1588,\n        \"num_unique_values\": 163,\n        \"samples\": [\n          0.0725,\n          0.0468,\n          0.0745\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Previous\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.04583750242510414,\n        \"min\": -0.0495,\n        \"max\": 0.1588,\n        \"num_unique_values\": 164,\n        \"samples\": [\n          0.0755,\n          0.0601,\n          0.0718\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":152}]},{"cell_type":"code","source":["WPI.drop(columns=['Previous'],inplace=True)\n","# Apply the function to the DataFrame\n","WPI['Release Date'] = WPI['Release Date'].apply(preprocess_date)"],"metadata":{"id":"vfWRYIqGLCb5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["WPI=WPI.rename(columns={'Release Date':'Date','Actual':'WPI_Actual'})\n","WPI.Date=pd.to_datetime(WPI.Date)\n","WPI.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5gOWuBZcLnfz","executionInfo":{"status":"ok","timestamp":1725383576463,"user_tz":-330,"elapsed":391,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"4d49e693-0cfe-40fd-ccd9-ee0bb5062e42"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 176 entries, 0 to 175\n","Data columns (total 2 columns):\n"," #   Column      Non-Null Count  Dtype         \n","---  ------      --------------  -----         \n"," 0   Date        176 non-null    datetime64[ns]\n"," 1   WPI_Actual  176 non-null    float64       \n","dtypes: datetime64[ns](1), float64(1)\n","memory usage: 2.9 KB\n"]}]},{"cell_type":"code","source":["WPI.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":147},"id":"q-G-UDJFLz4W","executionInfo":{"status":"ok","timestamp":1725383578887,"user_tz":-330,"elapsed":415,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"67d02d94-c5e2-4598-94ac-6445cadb5329"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Date          0\n","WPI_Actual    0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Date</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>WPI_Actual</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":155}]},{"cell_type":"markdown","source":["# **Crude Oil Data**\n","- **Inflation Link:** Rising oil prices can signal inflation, which often boosts gold prices as a hedge against inflation.\n","- **Production Costs:** Higher oil prices can increase gold mining costs, potentially raising gold prices.\n","- **Economic Indicator:** Oil prices reflect global economic health, which can impact gold demand.\n","- **Currency Effects:** Changes in oil prices can influence exchange rates and the cost of gold imports.\n","- **Investment Trends:** Oil and gold are key assets in investment portfolios; fluctuations in oil can affect gold investments."],"metadata":{"id":"h4-qb6apL2bm"}},{"cell_type":"code","source":["crude_oil.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"8Fl9ggFGZ-vM","executionInfo":{"status":"ok","timestamp":1725383593744,"user_tz":-330,"elapsed":439,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"d9f258b7-ed9d-4362-8908-397313e67449"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        Date  crude_Price\n","0 2024-07-29        76.83\n","1 2024-07-28        77.27\n","2 2024-07-26        77.16\n","3 2024-07-25        78.28\n","4 2024-07-24        77.59"],"text/html":["\n","  <div id=\"df-5f89a83c-096a-4f0d-93be-fea958bd4539\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>crude_Price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2024-07-29</td>\n","      <td>76.83</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2024-07-28</td>\n","      <td>77.27</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2024-07-26</td>\n","      <td>77.16</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2024-07-25</td>\n","      <td>78.28</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2024-07-24</td>\n","      <td>77.59</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5f89a83c-096a-4f0d-93be-fea958bd4539')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5f89a83c-096a-4f0d-93be-fea958bd4539 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5f89a83c-096a-4f0d-93be-fea958bd4539');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4213faaf-c42d-484a-b538-fb7912efd7e0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4213faaf-c42d-484a-b538-fb7912efd7e0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4213faaf-c42d-484a-b538-fb7912efd7e0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"crude_oil","summary":"{\n  \"name\": \"crude_oil\",\n  \"rows\": 3800,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2010-01-04 00:00:00\",\n        \"max\": \"2024-07-29 00:00:00\",\n        \"num_unique_values\": 3800,\n        \"samples\": [\n          \"2020-10-09 00:00:00\",\n          \"2022-05-03 00:00:00\",\n          \"2022-10-31 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"crude_Price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21.628436746627813,\n        \"min\": -37.63,\n        \"max\": 123.7,\n        \"num_unique_values\": 3019,\n        \"samples\": [\n          66.22,\n          49.91,\n          91.71\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":156}]},{"cell_type":"code","source":["crude_oil.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P_3bbNWI4jfq","executionInfo":{"status":"ok","timestamp":1725383727034,"user_tz":-330,"elapsed":418,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"0300f001-9f8f-4753-dcdb-fa2de31a9c4b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3800 entries, 0 to 3799\n","Data columns (total 2 columns):\n"," #   Column       Non-Null Count  Dtype         \n","---  ------       --------------  -----         \n"," 0   Date         3800 non-null   datetime64[ns]\n"," 1   crude_Price  3800 non-null   float64       \n","dtypes: datetime64[ns](1), float64(1)\n","memory usage: 59.5 KB\n"]}]},{"cell_type":"markdown","source":["# **Reverse Repo Rate**"],"metadata":{"id":"PC4Y3BrZMIPU"}},{"cell_type":"markdown","source":["- **Liquidity Impact:** A higher reverse repo rate can reduce the amount of money in circulation, potentially leading to lower inflation and decreased gold demand. Conversely, a lower rate can increase liquidity, potentially boosting gold demand.\n","\n","- **Interest Rate Signals:**Changes in the reverse repo rate can signal the central bank's stance on monetary policy and economic conditions. This influences interest rates, which can affect gold prices as a non-yielding asset.\n","\n","- **Economic Conditions:** Adjustments in the reverse repo rate can reflect broader economic conditions and influence investor behavior towards gold."],"metadata":{"id":"gcK1jIQAM-HM"}},{"cell_type":"code","source":["reverse_repo=pd.read_excel(\"/content/drive/MyDrive/MSc. Major Project/Final datasets/Reverse repo rate.xlsx\")\n","reverse_repo.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"RV2wLLONZujh","executionInfo":{"status":"ok","timestamp":1725383767280,"user_tz":-330,"elapsed":829,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"246bccf1-5672-4671-d638-165db2c77ecb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          Release Date      Time  Actual  Forecast  Previous\n","0  2024-09-02 00:00:00  00:30:00  0.0335       NaN    0.0335\n","1  2024-08-08 00:00:00  00:30:00  0.0335       NaN    0.0335\n","2  2024-06-07 00:00:00  00:30:00  0.0335       NaN    0.0335\n","3  2024-04-05 00:00:00  00:30:00  0.0335       NaN    0.0335\n","4  2024-02-08 00:00:00  00:30:00  0.0335       NaN    0.0335"],"text/html":["\n","  <div id=\"df-9680f3e6-5e02-41d2-bfcc-44ed9d8ed8a5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Release Date</th>\n","      <th>Time</th>\n","      <th>Actual</th>\n","      <th>Forecast</th>\n","      <th>Previous</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2024-09-02 00:00:00</td>\n","      <td>00:30:00</td>\n","      <td>0.0335</td>\n","      <td>NaN</td>\n","      <td>0.0335</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2024-08-08 00:00:00</td>\n","      <td>00:30:00</td>\n","      <td>0.0335</td>\n","      <td>NaN</td>\n","      <td>0.0335</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2024-06-07 00:00:00</td>\n","      <td>00:30:00</td>\n","      <td>0.0335</td>\n","      <td>NaN</td>\n","      <td>0.0335</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2024-04-05 00:00:00</td>\n","      <td>00:30:00</td>\n","      <td>0.0335</td>\n","      <td>NaN</td>\n","      <td>0.0335</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2024-02-08 00:00:00</td>\n","      <td>00:30:00</td>\n","      <td>0.0335</td>\n","      <td>NaN</td>\n","      <td>0.0335</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9680f3e6-5e02-41d2-bfcc-44ed9d8ed8a5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9680f3e6-5e02-41d2-bfcc-44ed9d8ed8a5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9680f3e6-5e02-41d2-bfcc-44ed9d8ed8a5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9c645be5-25a7-4650-9ba5-e0dc01abc0c9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9c645be5-25a7-4650-9ba5-e0dc01abc0c9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9c645be5-25a7-4650-9ba5-e0dc01abc0c9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"reverse_repo","summary":"{\n  \"name\": \"reverse_repo\",\n  \"rows\": 121,\n  \"fields\": [\n    {\n      \"column\": \"Release Date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 121,\n        \"samples\": [\n          \"2017-10-04 00:00:00\",\n          \"2017-04-06 00:00:00\",\n          \"2024-02-08 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Time\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"00:30:00\",\n          \"01:30:00\",\n          \"00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actual\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.014803123832712187,\n        \"min\": 0.0325,\n        \"max\": 0.075,\n        \"num_unique_values\": 34,\n        \"samples\": [\n          0.0627,\n          0.075,\n          0.0525\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Forecast\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.012706775470478058,\n        \"min\": 0.031,\n        \"max\": 0.07,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          0.0625,\n          0.06,\n          0.0335\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Previous\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.014804671848438413,\n        \"min\": 0.0325,\n        \"max\": 0.075,\n        \"num_unique_values\": 34,\n        \"samples\": [\n          0.0665,\n          0.0731,\n          0.05\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":160}]},{"cell_type":"code","source":["reverse_repo.drop(columns=['Previous','Forecast','Time'],inplace=True)"],"metadata":{"id":"KbUXQ-5YOMxJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["reverse_repo.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dAIwgBAhNLW3","executionInfo":{"status":"ok","timestamp":1725383774841,"user_tz":-330,"elapsed":4,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"e4dd2e6f-c300-45d6-e5c8-da6b7fb2504b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 121 entries, 0 to 120\n","Data columns (total 2 columns):\n"," #   Column        Non-Null Count  Dtype  \n","---  ------        --------------  -----  \n"," 0   Release Date  121 non-null    object \n"," 1   Actual        121 non-null    float64\n","dtypes: float64(1), object(1)\n","memory usage: 2.0+ KB\n"]}]},{"cell_type":"code","source":["print(reverse_repo['Release Date'].head(10))  # Display the first few entries"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WoeyMLjrPIHh","executionInfo":{"status":"ok","timestamp":1725383777342,"user_tz":-330,"elapsed":3,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"6ca41ea1-ac0a-4c78-fb98-da0590deb31c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0    2024-09-02 00:00:00\n","1    2024-08-08 00:00:00\n","2    2024-06-07 00:00:00\n","3    2024-04-05 00:00:00\n","4    2024-02-08 00:00:00\n","5    2023-12-08 00:00:00\n","6    2023-10-06 00:00:00\n","7    2023-08-10 00:00:00\n","8    2023-06-08 00:00:00\n","9    2023-04-06 00:00:00\n","Name: Release Date, dtype: object\n"]}]},{"cell_type":"code","source":["reverse_repo['Release Date']=reverse_repo['Release Date'].apply(preprocess_date)"],"metadata":{"id":"zuG_FF--OOd2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["reverse_repo.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hwSzjszCRrkY","executionInfo":{"status":"ok","timestamp":1725383782075,"user_tz":-330,"elapsed":396,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"1f2a5a7b-40b3-4c07-aa50-b44d92986332"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 121 entries, 0 to 120\n","Data columns (total 2 columns):\n"," #   Column        Non-Null Count  Dtype  \n","---  ------        --------------  -----  \n"," 0   Release Date  121 non-null    object \n"," 1   Actual        121 non-null    float64\n","dtypes: float64(1), object(1)\n","memory usage: 2.0+ KB\n"]}]},{"cell_type":"code","source":["reverse_repo=reverse_repo.rename(columns={'Release Date':'Date'})\n","reverse_repo.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"P54jkbtzR23i","executionInfo":{"status":"ok","timestamp":1725383785017,"user_tz":-330,"elapsed":440,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"874a59bb-3a64-4a34-9848-bc8218fb9aa8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Date  Actual\n","0  2024-09-02  0.0335\n","1  2024-08-08  0.0335\n","2  2024-06-07  0.0335\n","3  2024-04-05  0.0335\n","4  2024-02-08  0.0335"],"text/html":["\n","  <div id=\"df-56884e9f-8584-4a69-ad54-23839f282589\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Actual</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2024-09-02</td>\n","      <td>0.0335</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2024-08-08</td>\n","      <td>0.0335</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2024-06-07</td>\n","      <td>0.0335</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2024-04-05</td>\n","      <td>0.0335</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2024-02-08</td>\n","      <td>0.0335</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-56884e9f-8584-4a69-ad54-23839f282589')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-56884e9f-8584-4a69-ad54-23839f282589 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-56884e9f-8584-4a69-ad54-23839f282589');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9345d1b5-065c-49a6-8a24-41c47b1b3168\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9345d1b5-065c-49a6-8a24-41c47b1b3168')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9345d1b5-065c-49a6-8a24-41c47b1b3168 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"reverse_repo","summary":"{\n  \"name\": \"reverse_repo\",\n  \"rows\": 121,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 121,\n        \"samples\": [\n          \"2017-10-04\",\n          \"2017-04-06\",\n          \"2024-02-08\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actual\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.014803123832712187,\n        \"min\": 0.0325,\n        \"max\": 0.075,\n        \"num_unique_values\": 34,\n        \"samples\": [\n          0.0627,\n          0.075,\n          0.0525\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":166}]},{"cell_type":"code","source":["reverse_repo.Date=pd.to_datetime(reverse_repo.Date)\n","reverse_repo.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"s5tyLXgQRyYs","executionInfo":{"status":"ok","timestamp":1725383787387,"user_tz":-330,"elapsed":384,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"241a9a82-e256-4696-dae6-c0af07994a05"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 121 entries, 0 to 120\n","Data columns (total 2 columns):\n"," #   Column  Non-Null Count  Dtype         \n","---  ------  --------------  -----         \n"," 0   Date    121 non-null    datetime64[ns]\n"," 1   Actual  121 non-null    float64       \n","dtypes: datetime64[ns](1), float64(1)\n","memory usage: 2.0 KB\n"]}]},{"cell_type":"code","source":["reverse_repo.rename(columns={'Actual':'Reverse_Repo_Rate'},inplace=True)\n","reverse_repo.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"hn3V011V40x9","executionInfo":{"status":"ok","timestamp":1725383827718,"user_tz":-330,"elapsed":443,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"2cda874f-d742-4fca-fd2f-b989d57ac162"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        Date  Reverse_Repo_Rate\n","0 2024-09-02             0.0335\n","1 2024-08-08             0.0335\n","2 2024-06-07             0.0335\n","3 2024-04-05             0.0335\n","4 2024-02-08             0.0335"],"text/html":["\n","  <div id=\"df-78850c87-b7b4-4011-9a22-1aec8e47eb57\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Reverse_Repo_Rate</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2024-09-02</td>\n","      <td>0.0335</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2024-08-08</td>\n","      <td>0.0335</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2024-06-07</td>\n","      <td>0.0335</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2024-04-05</td>\n","      <td>0.0335</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2024-02-08</td>\n","      <td>0.0335</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-78850c87-b7b4-4011-9a22-1aec8e47eb57')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-78850c87-b7b4-4011-9a22-1aec8e47eb57 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-78850c87-b7b4-4011-9a22-1aec8e47eb57');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-096c8236-44c1-488d-94a8-d97f94b1e050\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-096c8236-44c1-488d-94a8-d97f94b1e050')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-096c8236-44c1-488d-94a8-d97f94b1e050 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"reverse_repo","summary":"{\n  \"name\": \"reverse_repo\",\n  \"rows\": 121,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2010-01-01 00:00:00\",\n        \"max\": \"2024-09-02 00:00:00\",\n        \"num_unique_values\": 121,\n        \"samples\": [\n          \"2017-10-04 00:00:00\",\n          \"2017-04-06 00:00:00\",\n          \"2024-02-08 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Reverse_Repo_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.014803123832712187,\n        \"min\": 0.0325,\n        \"max\": 0.075,\n        \"num_unique_values\": 34,\n        \"samples\": [\n          0.0627,\n          0.075,\n          0.0525\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":170}]},{"cell_type":"markdown","source":["# **VIX India**"],"metadata":{"id":"NZc2vNX6Rtou"}},{"cell_type":"code","source":["india_vix.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"-7TcTMFfRyee","executionInfo":{"status":"ok","timestamp":1723377096397,"user_tz":-330,"elapsed":435,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"560e17e4-b124-4038-dd99-23223aadad1a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Date    Price     Open     High      Low Vol. Change %\n","0  09-08-2024  15.3350  16.6025  16.6025  13.4325  NaN   -7.63%\n","1  08-08-2024  16.6025  16.1700  17.2300  14.3800  NaN    2.67%\n","2  07-08-2024  16.1700  18.7425  18.7425  13.7225  NaN  -13.73%\n","3  06-08-2024  18.7425  20.3675  20.3675  14.8675  NaN   -7.98%\n","4  05-08-2024  20.3675  14.3200  23.1525  13.9075  NaN   42.23%"],"text/html":["\n","  <div id=\"df-f653e0a6-c0dd-47bc-b4db-28c4395b1047\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Price</th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Vol.</th>\n","      <th>Change %</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>09-08-2024</td>\n","      <td>15.3350</td>\n","      <td>16.6025</td>\n","      <td>16.6025</td>\n","      <td>13.4325</td>\n","      <td>NaN</td>\n","      <td>-7.63%</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>08-08-2024</td>\n","      <td>16.6025</td>\n","      <td>16.1700</td>\n","      <td>17.2300</td>\n","      <td>14.3800</td>\n","      <td>NaN</td>\n","      <td>2.67%</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>07-08-2024</td>\n","      <td>16.1700</td>\n","      <td>18.7425</td>\n","      <td>18.7425</td>\n","      <td>13.7225</td>\n","      <td>NaN</td>\n","      <td>-13.73%</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>06-08-2024</td>\n","      <td>18.7425</td>\n","      <td>20.3675</td>\n","      <td>20.3675</td>\n","      <td>14.8675</td>\n","      <td>NaN</td>\n","      <td>-7.98%</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>05-08-2024</td>\n","      <td>20.3675</td>\n","      <td>14.3200</td>\n","      <td>23.1525</td>\n","      <td>13.9075</td>\n","      <td>NaN</td>\n","      <td>42.23%</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f653e0a6-c0dd-47bc-b4db-28c4395b1047')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f653e0a6-c0dd-47bc-b4db-28c4395b1047 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f653e0a6-c0dd-47bc-b4db-28c4395b1047');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-599e9156-c65e-4fb7-b35e-20670e9c9692\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-599e9156-c65e-4fb7-b35e-20670e9c9692')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-599e9156-c65e-4fb7-b35e-20670e9c9692 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"india_vix","summary":"{\n  \"name\": \"india_vix\",\n  \"rows\": 3621,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3621,\n        \"samples\": [\n          \"21-09-2017\",\n          \"19-11-2018\",\n          \"15-04-2020\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.145236928547709,\n        \"min\": 10.135,\n        \"max\": 83.6075,\n        \"num_unique_values\": 2661,\n        \"samples\": [\n          13.0175,\n          15.6175,\n          18.055\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Open\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.112732909778451,\n        \"min\": 9.7525,\n        \"max\": 83.6075,\n        \"num_unique_values\": 2636,\n        \"samples\": [\n          25.14,\n          17.8825,\n          14.61\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"High\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.49106951424106,\n        \"min\": 10.7025,\n        \"max\": 86.635,\n        \"num_unique_values\": 2654,\n        \"samples\": [\n          21.5875,\n          15.1325,\n          13.855\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Low\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.842890698100825,\n        \"min\": 8.1825,\n        \"max\": 75.9725,\n        \"num_unique_values\": 2606,\n        \"samples\": [\n          19.9625,\n          20.8925,\n          16.6075\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Vol.\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"0.00K\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Change %\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1577,\n        \"samples\": [\n          \"-4.19%\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["india_vix.drop(columns=['Open','High','Low','Vol.','Change %'],inplace=True)\n","india_vix=india_vix.rename(columns={'Date':'Date','Price':'india_vix_Price'})\n","india_vix.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"Yd5bPQAbR6DS","executionInfo":{"status":"ok","timestamp":1723377150186,"user_tz":-330,"elapsed":456,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"4110d318-d0e9-4c21-db91-724a8b3c8933"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Date  india_vix_Price\n","0  09-08-2024          15.3350\n","1  08-08-2024          16.6025\n","2  07-08-2024          16.1700\n","3  06-08-2024          18.7425\n","4  05-08-2024          20.3675"],"text/html":["\n","  <div id=\"df-decb95bc-1727-4916-9b26-035d4acb384e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>india_vix_Price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>09-08-2024</td>\n","      <td>15.3350</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>08-08-2024</td>\n","      <td>16.6025</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>07-08-2024</td>\n","      <td>16.1700</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>06-08-2024</td>\n","      <td>18.7425</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>05-08-2024</td>\n","      <td>20.3675</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-decb95bc-1727-4916-9b26-035d4acb384e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-decb95bc-1727-4916-9b26-035d4acb384e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-decb95bc-1727-4916-9b26-035d4acb384e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bdc2fd0a-0d62-4496-8b8b-8769a33e0957\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bdc2fd0a-0d62-4496-8b8b-8769a33e0957')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bdc2fd0a-0d62-4496-8b8b-8769a33e0957 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"india_vix","summary":"{\n  \"name\": \"india_vix\",\n  \"rows\": 3621,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3621,\n        \"samples\": [\n          \"21-09-2017\",\n          \"19-11-2018\",\n          \"15-04-2020\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"india_vix_Price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.145236928547709,\n        \"min\": 10.135,\n        \"max\": 83.6075,\n        \"num_unique_values\": 2661,\n        \"samples\": [\n          13.0175,\n          15.6175,\n          18.055\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["india_vix.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3Ovq2ymcSGyq","executionInfo":{"status":"ok","timestamp":1723377158062,"user_tz":-330,"elapsed":473,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"ff97897d-cbf6-4bd6-ca46-34ac981ced7c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3621 entries, 0 to 3620\n","Data columns (total 2 columns):\n"," #   Column           Non-Null Count  Dtype  \n","---  ------           --------------  -----  \n"," 0   Date             3621 non-null   object \n"," 1   india_vix_Price  3621 non-null   float64\n","dtypes: float64(1), object(1)\n","memory usage: 56.7+ KB\n"]}]},{"cell_type":"code","source":["india_vix.Date=pd.to_datetime(india_vix.Date,format='%d-%m-%Y')\n","india_vix.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nGmufmurSJFj","executionInfo":{"status":"ok","timestamp":1723377208254,"user_tz":-330,"elapsed":400,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"e6bd875c-7c30-4903-f175-fb1a2e2a7fec"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3621 entries, 0 to 3620\n","Data columns (total 2 columns):\n"," #   Column           Non-Null Count  Dtype         \n","---  ------           --------------  -----         \n"," 0   Date             3621 non-null   datetime64[ns]\n"," 1   india_vix_Price  3621 non-null   float64       \n","dtypes: datetime64[ns](1), float64(1)\n","memory usage: 56.7 KB\n"]}]},{"cell_type":"code","source":["india_vix.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":147},"id":"qnAnhbJdSNE5","executionInfo":{"status":"ok","timestamp":1723377219115,"user_tz":-330,"elapsed":406,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"3ac7a159-e1b5-43a3-ded9-04c0c990407a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Date               0\n","india_vix_Price    0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Date</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>india_vix_Price</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":10}]},{"cell_type":"markdown","source":["# Preprocessing the dataframes to have the same number of rows"],"metadata":{"id":"OcUzyMvZeDHt"}},{"cell_type":"code","source":["dfs = [cpi_data, crude_oil, ecb, gold, bond_data, nifty,\n","       repo_rate, india_inflation_rate, holiday, data_gpr_export,\n","       US_Dollar, Silver_Mini, US_federal_target_rate, USD_INR,\n","       WPI, reverse_repo, bse_data]"],"metadata":{"id":"YYG7JAnlUWqx"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def process_cpi_data(cpi_data, start_date, end_date):\n","\n","    cpi_data['Date'] = pd.to_datetime(cpi_data['Date'])\n","\n","    # Set 'Date' as index\n","    cpi_data = cpi_data.set_index('Date')\n","\n","    # Sort by date\n","    cpi_data = cpi_data.sort_index()\n","\n","    # Create a date range from start_date to end_date\n","    full_date_range = pd.date_range(start=start_date, end=end_date, freq='D')\n","\n","    # Reindex to the full date range, this will introduce NaN values for missing dates\n","    cpi_daily = cpi_data.reindex(full_date_range)\n","\n","\n","    cpi_daily = cpi_daily.interpolate(method='time')\n","\n","\n","    cpi_daily = cpi_daily.ffill().bfill()\n","\n","    return cpi_daily\n","\n","# Set the start and end dates\n","start_date = '2011-12-19'\n","end_date = '2024-09-03'\n","\n","# Process the CPI data\n","processed_cpi = process_cpi_data(cpi_data, start_date, end_date)\n","\n","# Display information about the processed data\n","print(f\"Processed CPI data shape: {processed_cpi.shape}\")\n","print(f\"Date range: {processed_cpi.index.min()} to {processed_cpi.index.max()}\")\n","print(\"\\nFirst few rows:\")\n","print(processed_cpi.head())\n","print(\"\\nMiddle few rows (to show variation):\")\n","print(processed_cpi.iloc[500:505])\n","print(\"\\nLast few rows:\")\n","print(processed_cpi.tail())\n","\n","# Check for any remaining NaN values\n","nan_count = processed_cpi.isnull().sum().sum()\n","print(f\"\\nTotal NaN values: {nan_count}\")\n","\n","# Optional: Calculate and print the number of unique values\n","unique_values = processed_cpi.nunique()\n","print(f\"\\nNumber of unique values in each column: {unique_values}\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kwJSysUIameF","executionInfo":{"status":"ok","timestamp":1725383862104,"user_tz":-330,"elapsed":437,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"db0082d6-ae8e-4417-cdf7-ec603849a640"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Processed CPI data shape: (4643, 1)\n","Date range: 2011-12-19 00:00:00 to 2024-09-03 00:00:00\n","\n","First few rows:\n","            CPI_Actual\n","2011-12-19       0.093\n","2011-12-20       0.093\n","2011-12-21       0.093\n","2011-12-22       0.093\n","2011-12-23       0.093\n","\n","Middle few rows (to show variation):\n","            CPI_Actual\n","2013-05-02       0.093\n","2013-05-03       0.093\n","2013-05-04       0.093\n","2013-05-05       0.093\n","2013-05-06       0.093\n","\n","Last few rows:\n","            CPI_Actual\n","2024-08-30      0.0354\n","2024-08-31      0.0354\n","2024-09-01      0.0354\n","2024-09-02      0.0354\n","2024-09-03      0.0354\n","\n","Total NaN values: 0\n","\n","Number of unique values in each column: CPI_Actual    3955\n","dtype: int64\n"]}]},{"cell_type":"code","source":["def process_usd_inr_data(usd_inr_data, start_date, end_date):\n","    # Ensure 'Date' is in datetime format\n","    usd_inr_data['Date'] = pd.to_datetime(usd_inr_data['Date'])\n","\n","    # Set 'Date' as index\n","    usd_inr_data = usd_inr_data.set_index('Date')\n","\n","    # Sort by date\n","    usd_inr_data = usd_inr_data.sort_index()\n","\n","    # Filter the data to the specified date range\n","    usd_inr_filtered = usd_inr_data.loc[start_date:end_date]\n","\n","    # Create a date range from start_date to end_date\n","    full_date_range = pd.date_range(start=start_date, end=end_date, freq='D')\n","\n","    # Reindex to the full date range, this will introduce NaN values for missing dates\n","    usd_inr_daily = usd_inr_filtered.reindex(full_date_range)\n","\n","    # Interpolate missing values for the 'USD_INR_Price' column\n","    usd_inr_daily['USD_INR_Price'] = usd_inr_daily['USD_INR_Price'].interpolate(method='time')\n","\n","\n","    # If there are NaN values at the beginning or end, forward and backward fill\n","    usd_inr_daily = usd_inr_daily.ffill().bfill()\n","\n","    return usd_inr_daily\n","\n","# Set the start and end dates\n","start_date = '2011-12-19'\n","end_date = '2024-09-03'\n","\n","# Process the USD_INR data\n","processed_usd_inr = process_usd_inr_data(USD_INR, start_date, end_date)\n","\n","# Display information about the processed data\n","print(f\"Processed USD_INR data shape: {processed_usd_inr.shape}\")\n","print(f\"Date range: {processed_usd_inr.index.min()} to {processed_usd_inr.index.max()}\")\n","print(\"\\nFirst few rows:\")\n","print(processed_usd_inr.head())\n","print(\"\\nMiddle few rows (to show variation):\")\n","print(processed_usd_inr.iloc[500:505])\n","print(\"\\nLast few rows:\")\n","print(processed_usd_inr.tail())\n","\n","# Check for any remaining NaN values\n","nan_count = processed_usd_inr.isnull().sum().sum()\n","print(f\"\\nTotal NaN values: {nan_count}\")\n","\n","# Calculate and print the number of unique values\n","unique_values = processed_usd_inr.nunique()\n","print(f\"\\nNumber of unique values in each column:\")\n","print(unique_values)\n","\n","# Calculate the percentage of interpolated values\n","original_dates = set(USD_INR['Date'])\n","full_dates = set(processed_usd_inr.index)\n","interpolated_dates = full_dates - original_dates\n","interpolation_percentage = (len(interpolated_dates) / len(full_dates)) * 100\n","print(f\"\\nPercentage of interpolated values: {interpolation_percentage:.2f}%\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"V8cHhObmbrrc","executionInfo":{"status":"ok","timestamp":1725383888002,"user_tz":-330,"elapsed":528,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"e664c4b1-5962-4c14-992e-72aa97d2b1ab"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Processed USD_INR data shape: (4643, 1)\n","Date range: 2011-12-19 00:00:00 to 2024-09-03 00:00:00\n","\n","First few rows:\n","            USD_INR_Price\n","2011-12-19         52.700\n","2011-12-20         52.770\n","2011-12-21         52.400\n","2011-12-22         52.565\n","2011-12-23         52.790\n","\n","Middle few rows (to show variation):\n","            USD_INR_Price\n","2013-05-02      53.835000\n","2013-05-03      53.810000\n","2013-05-04      53.918333\n","2013-05-05      54.026667\n","2013-05-06      54.135000\n","\n","Last few rows:\n","            USD_INR_Price\n","2024-08-30      83.867000\n","2024-08-31      83.871333\n","2024-09-01      83.875667\n","2024-09-02      83.880000\n","2024-09-03      83.952000\n","\n","Total NaN values: 0\n","\n","Number of unique values in each column:\n","USD_INR_Price    3962\n","dtype: int64\n","\n","Percentage of interpolated values: 28.56%\n"]}]},{"cell_type":"code","source":["def process_crude_oil_data(crude_oil_data, start_date, end_date):\n","    crude_oil_data['Date'] = pd.to_datetime(crude_oil_data['Date'])\n","    crude_oil_data = crude_oil_data.set_index('Date')\n","    crude_oil_data = crude_oil_data.sort_index()\n","    crude_oil_filtered = crude_oil_data.loc[start_date:end_date]\n","    full_date_range = pd.date_range(start=start_date, end=end_date, freq='D')\n","    crude_oil_daily = crude_oil_filtered.reindex(full_date_range)\n","    crude_oil_daily['crude_Price'] = crude_oil_daily['crude_Price'].interpolate(method='time')\n","    crude_oil_daily = crude_oil_daily.ffill().bfill()\n","\n","    return crude_oil_daily\n","\n","\n","start_date = '2011-12-19'\n","end_date = '2024-09-03'\n","\n","processed_crude_oil = process_crude_oil_data(crude_oil, start_date, end_date)\n","\n","\n","print(f\"Processed crude oil data shape: {processed_crude_oil.shape}\")\n","print(f\"Date range: {processed_crude_oil.index.min()} to {processed_crude_oil.index.max()}\")\n","print(\"\\nFirst few rows:\")\n","print(processed_crude_oil.head())\n","print(\"\\nMiddle few rows (to show variation):\")\n","print(processed_crude_oil.iloc[500:505])\n","print(\"\\nLast few rows:\")\n","print(processed_crude_oil.tail())\n","\n","# Check for any remaining NaN values\n","nan_count = processed_crude_oil.isnull().sum().sum()\n","print(f\"\\nTotal NaN values: {nan_count}\")\n","\n","# Calculate and print the number of unique values\n","unique_values = processed_crude_oil.nunique()\n","print(f\"\\nNumber of unique values in each column:\")\n","print(unique_values)\n","\n","# Calculate the percentage of interpolated values\n","original_dates = set(crude_oil['Date'])\n","full_dates = set(processed_crude_oil.index)\n","interpolated_dates = full_dates - original_dates\n","interpolation_percentage = (len(interpolated_dates) / len(full_dates)) * 100\n","print(f\"\\nPercentage of interpolated values: {interpolation_percentage:.2f}%\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uQDq4FipdpE1","executionInfo":{"status":"ok","timestamp":1725383905943,"user_tz":-330,"elapsed":411,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"84986e60-f4a2-4dd6-fea0-803338adb291"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Processed crude oil data shape: (4643, 1)\n","Date range: 2011-12-19 00:00:00 to 2024-09-03 00:00:00\n","\n","First few rows:\n","            crude_Price\n","2011-12-19        93.88\n","2011-12-20        97.22\n","2011-12-21        98.67\n","2011-12-22        99.53\n","2011-12-23        99.68\n","\n","Middle few rows (to show variation):\n","            crude_Price\n","2013-05-02    93.990000\n","2013-05-03    95.610000\n","2013-05-04    95.793333\n","2013-05-05    95.976667\n","2013-05-06    96.160000\n","\n","Last few rows:\n","            crude_Price\n","2024-08-30        76.83\n","2024-08-31        76.83\n","2024-09-01        76.83\n","2024-09-02        76.83\n","2024-09-03        76.83\n","\n","Total NaN values: 0\n","\n","Number of unique values in each column:\n","crude_Price    3853\n","dtype: int64\n","\n","Percentage of interpolated values: 28.82%\n"]}]},{"cell_type":"code","source":["ecb.rename(columns={'Date':'Date','Actual':'ECB_rate'},inplace=True)\n","ecb.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"GZcEhlLo5aWi","executionInfo":{"status":"ok","timestamp":1725383969352,"user_tz":-330,"elapsed":392,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"d9af2278-3144-4141-9819-31e1ea04682d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        Date  ECB_rate\n","0 2024-09-18    0.0425\n","1 2024-08-18    0.0425\n","2 2024-07-18    0.0425\n","3 2024-06-06    0.0425\n","4 2024-04-11    0.0450"],"text/html":["\n","  <div id=\"df-d5c092f1-a26a-458a-b9f3-57365d042765\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>ECB_rate</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2024-09-18</td>\n","      <td>0.0425</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2024-08-18</td>\n","      <td>0.0425</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2024-07-18</td>\n","      <td>0.0425</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2024-06-06</td>\n","      <td>0.0425</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2024-04-11</td>\n","      <td>0.0450</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d5c092f1-a26a-458a-b9f3-57365d042765')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d5c092f1-a26a-458a-b9f3-57365d042765 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d5c092f1-a26a-458a-b9f3-57365d042765');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-46577ec1-4dba-474f-aa6c-1bc25cba7128\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-46577ec1-4dba-474f-aa6c-1bc25cba7128')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-46577ec1-4dba-474f-aa6c-1bc25cba7128 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"ecb","summary":"{\n  \"name\": \"ecb\",\n  \"rows\": 139,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2010-01-14 00:00:00\",\n        \"max\": \"2024-09-18 00:00:00\",\n        \"num_unique_values\": 139,\n        \"samples\": [\n          \"2010-04-08 00:00:00\",\n          \"2016-07-21 00:00:00\",\n          \"2020-12-10 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ECB_rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.012762904113307612,\n        \"min\": 0.0,\n        \"max\": 0.045,\n        \"num_unique_values\": 17,\n        \"samples\": [\n          0.0425,\n          0.045,\n          0.03\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":178}]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","\n","def process_ecb_data(ecb_data, start_date, end_date):\n","    # Ensure 'Date' is in datetime format\n","    ecb_data['Date'] = pd.to_datetime(ecb_data['Date'])\n","\n","    # Set 'Date' as index\n","    ecb_data = ecb_data.set_index('Date')\n","\n","    # Sort by date\n","    ecb_data = ecb_data.sort_index()\n","\n","    # Create a date range from start_date to end_date\n","    full_date_range = pd.date_range(start=start_date, end=end_date, freq='D')\n","\n","    # Reindex to the full date range, this will introduce NaN values for missing dates\n","    ecb_daily = ecb_data.reindex(full_date_range)\n","\n","    # Forward fill the rates\n","    # This ensures that the last known rate is used for each day until a new rate is set\n","    ecb_daily['ECB_rate'] = ecb_daily['ECB_rate'].ffill()\n","\n","    # If there are NaN values at the beginning, backward fill\n","    ecb_daily = ecb_daily.bfill()\n","\n","    return ecb_daily\n","\n","# Set the start and end dates\n","start_date = '2011-12-19'\n","end_date = '2024-09-03'\n","\n","# Process the ECB data\n","processed_ecb = process_ecb_data(ecb, start_date, end_date)\n","\n","# Display information about the processed data\n","print(f\"Processed ECB data shape: {processed_ecb.shape}\")\n","print(f\"Date range: {processed_ecb.index.min()} to {processed_ecb.index.max()}\")\n","print(\"\\nFirst few rows:\")\n","print(processed_ecb.head())\n","print(\"\\nMiddle few rows (to show a rate change):\")\n","print(processed_ecb.loc['2024-04-10':'2024-04-12'])\n","print(\"\\nLast few rows:\")\n","print(processed_ecb.tail())\n","\n","# Check for any remaining NaN values\n","nan_count = processed_ecb.isnull().sum().sum()\n","print(f\"\\nTotal NaN values: {nan_count}\")\n","\n","# Calculate and print the number of unique values\n","unique_values = processed_ecb['ECB_rate'].nunique()\n","print(f\"\\nNumber of unique interest rates: {unique_values}\")\n","\n","# Calculate the percentage of interpolated (filled) values\n","original_dates = set(ecb['Date'])\n","full_dates = set(processed_ecb.index)\n","filled_dates = full_dates - original_dates\n","fill_percentage = (len(filled_dates) / len(full_dates)) * 100\n","print(f\"\\nPercentage of filled values: {fill_percentage:.2f}%\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hykudx0meYa5","executionInfo":{"status":"ok","timestamp":1725384011763,"user_tz":-330,"elapsed":383,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"19e9fb2f-2a1f-4e0c-c21d-f213974d4520"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Processed ECB data shape: (4643, 1)\n","Date range: 2011-12-19 00:00:00 to 2024-09-03 00:00:00\n","\n","First few rows:\n","            ECB_rate\n","2011-12-19      0.01\n","2011-12-20      0.01\n","2011-12-21      0.01\n","2011-12-22      0.01\n","2011-12-23      0.01\n","\n","Middle few rows (to show a rate change):\n","            ECB_rate\n","2024-04-10     0.045\n","2024-04-11     0.045\n","2024-04-12     0.045\n","\n","Last few rows:\n","            ECB_rate\n","2024-08-30    0.0425\n","2024-08-31    0.0425\n","2024-09-01    0.0425\n","2024-09-02    0.0425\n","2024-09-03    0.0425\n","\n","Total NaN values: 0\n","\n","Number of unique interest rates: 16\n","\n","Percentage of filled values: 97.54%\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","\n","def process_gold_data(gold_data, start_date, end_date):\n","    # Ensure 'Date' is in datetime format\n","    gold_data['Date'] = pd.to_datetime(gold_data['Date'])\n","\n","    # Set 'Date' as index\n","    gold_data = gold_data.set_index('Date')\n","\n","    # Sort by date\n","    gold_data = gold_data.sort_index()\n","\n","    # Create a date range from start_date to end_date\n","    full_date_range = pd.date_range(start=start_date, end=end_date, freq='D')\n","\n","    # Reindex to the full date range, this will introduce NaN values for any missing dates\n","    gold_daily = gold_data.reindex(full_date_range)\n","\n","    # Interpolate missing values for numeric columns\n","    numeric_columns = ['gold_Price', 'gold_Vol.','gold_Open','gold_High','gold_Low']\n","    gold_daily[numeric_columns] = gold_daily[numeric_columns].interpolate(method='time')\n","\n","    # For 'gold_Change %', we'll fill NaN values with 0\n","    gold_daily['gold_Change %'] = gold_daily['gold_Change %'].fillna(0)\n","\n","    # If there are any remaining NaN values at the edges, forward and backward fill\n","    gold_daily = gold_daily.ffill().bfill()\n","\n","    return gold_daily\n","\n","# Set the start and end dates\n","start_date = '2011-12-19'\n","end_date = '2024-09-03'\n","\n","# Process the gold data\n","processed_gold = process_gold_data(gold, start_date, end_date)\n","\n","# Display information about the processed data\n","print(f\"Processed gold data shape: {processed_gold.shape}\")\n","print(f\"Date range: {processed_gold.index.min()} to {processed_gold.index.max()}\")\n","print(\"\\nFirst few rows:\")\n","print(processed_gold.head())\n","print(\"\\nMiddle few rows:\")\n","print(processed_gold.iloc[500:505])\n","print(\"\\nLast few rows:\")\n","print(processed_gold.tail())\n","\n","# Check for any remaining NaN values\n","nan_count = processed_gold.isnull().sum().sum()\n","print(f\"\\nTotal NaN values: {nan_count}\")\n","\n","# Calculate and print the number of unique values for each column\n","unique_values = processed_gold.nunique()\n","print(f\"\\nNumber of unique values in each column:\")\n","print(unique_values)\n","\n","# Calculate the percentage of interpolated values\n","original_dates = set(gold['Date'])\n","full_dates = set(processed_gold.index)\n","interpolated_dates = full_dates - original_dates\n","interpolation_percentage = (len(interpolated_dates) / len(full_dates)) * 100\n","print(f\"\\nPercentage of interpolated values: {interpolation_percentage:.2f}%\")\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IZGiCX8Oev6g","executionInfo":{"status":"ok","timestamp":1725384046309,"user_tz":-330,"elapsed":3,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"ff88ba67-49bf-43c2-ff3d-5db60ac210d4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Processed gold data shape: (4643, 6)\n","Date range: 2011-12-19 00:00:00 to 2024-09-03 00:00:00\n","\n","First few rows:\n","            gold_Price  gold_Open  gold_High  gold_Low  gold_Vol.  \\\n","2011-12-19     27559.0    27486.0    27660.0   27373.0      67.03   \n","2011-12-20     27734.0    27540.0    27770.0   27522.0      49.63   \n","2011-12-21     27661.0    27774.0    27960.0   27601.0      73.38   \n","2011-12-22     27552.0    27600.0    27658.0   27459.0      58.81   \n","2011-12-23     27632.0    27580.0    27674.0   27577.0      29.90   \n","\n","            gold_Change %  \n","2011-12-19           2.61  \n","2011-12-20           0.64  \n","2011-12-21          -0.26  \n","2011-12-22          -0.39  \n","2011-12-23           0.29  \n","\n","Middle few rows:\n","            gold_Price  gold_Open  gold_High  gold_Low  gold_Vol.  \\\n","2013-05-02     27130.0    26800.0    27167.0   26670.0       1.72   \n","2013-05-03     27125.0    27163.0    27440.0   26979.0       1.02   \n","2013-05-04     27150.0    27234.0    27234.0   27080.0       0.21   \n","2013-05-05     27125.0    27107.0    27235.5   27030.0      25.81   \n","2013-05-06     27100.0    26980.0    27237.0   26980.0      51.41   \n","\n","            gold_Change %  \n","2013-05-02           1.58  \n","2013-05-03          -0.02  \n","2013-05-04           0.09  \n","2013-05-05           0.00  \n","2013-05-06          -0.18  \n","\n","Last few rows:\n","              gold_Price     gold_Open  gold_High      gold_Low  gold_Vol.  \\\n","2024-08-30  71195.000000  71463.000000    71697.0  71129.000000       7.60   \n","2024-08-31  71207.666667  71350.666667    71591.0  71094.666667       5.43   \n","2024-09-01  71220.333333  71238.333333    71485.0  71060.333333       3.26   \n","2024-09-02  71233.000000  71126.000000    71379.0  71026.000000       1.09   \n","2024-09-03  71060.000000  71194.000000    71365.0  70889.000000       0.37   \n","\n","            gold_Change %  \n","2024-08-30          -0.66  \n","2024-08-31           0.00  \n","2024-09-01           0.00  \n","2024-09-02           0.05  \n","2024-09-03          -0.24  \n","\n","Total NaN values: 0\n","\n","Number of unique values in each column:\n","gold_Price       4217\n","gold_Open        3980\n","gold_High        4121\n","gold_Low         4048\n","gold_Vol.        3134\n","gold_Change %     457\n","dtype: int64\n","\n","Percentage of interpolated values: 27.33%\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","\n","def process_bond_data(bond_data, start_date, end_date):\n","    # Ensure 'Date' is in datetime format\n","    bond_data['Date'] = pd.to_datetime(bond_data['Date'])\n","\n","    # Set 'Date' as index\n","    bond_data = bond_data.set_index('Date')\n","\n","    # Sort by date\n","    bond_data = bond_data.sort_index()\n","\n","    # Filter the data to the specified date range\n","    bond_filtered = bond_data.loc[start_date:end_date]\n","\n","    # Create a date range from start_date to end_date\n","    full_date_range = pd.date_range(start=start_date, end=end_date, freq='D')\n","\n","    # Reindex to the full date range, this will introduce NaN values for any missing dates\n","    bond_daily = bond_filtered.reindex(full_date_range)\n","\n","    # Interpolate missing values for 'bond_Price'\n","    bond_daily['bond_Price'] = bond_daily['bond_Price'].interpolate(method='time')\n","\n","    # If there are any remaining NaN values at the edges, forward and backward fill\n","    bond_daily = bond_daily.ffill().bfill()\n","\n","    return bond_daily\n","\n","# Set the start and end dates\n","start_date = '2011-12-19'\n","end_date = '2024-09-03'\n","\n","# Process the bond data\n","processed_bond = process_bond_data(bond_data, start_date, end_date)\n","\n","# Display information about the processed data\n","print(f\"Processed bond data shape: {processed_bond.shape}\")\n","print(f\"Date range: {processed_bond.index.min()} to {processed_bond.index.max()}\")\n","print(\"\\nFirst few rows:\")\n","print(processed_bond.head())\n","print(\"\\nMiddle few rows:\")\n","print(processed_bond.iloc[500:505])\n","print(\"\\nLast few rows:\")\n","print(processed_bond.tail())\n","\n","# Check for any remaining NaN values\n","nan_count = processed_bond.isnull().sum().sum()\n","print(f\"\\nTotal NaN values: {nan_count}\")\n","\n","# Calculate and print the number of unique values for each column\n","unique_values = processed_bond.nunique()\n","print(f\"\\nNumber of unique values in each column:\")\n","print(unique_values)\n","\n","# Calculate the percentage of interpolated values\n","original_dates = set(bond_data.loc[start_date:end_date].index)\n","full_dates = set(processed_bond.index)\n","interpolated_dates = full_dates - original_dates\n","interpolation_percentage = (len(interpolated_dates) / len(full_dates)) * 100\n","print(f\"\\nPercentage of interpolated values: {interpolation_percentage:.2f}%\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rCJFY8-9f2Tg","executionInfo":{"status":"ok","timestamp":1725384062821,"user_tz":-330,"elapsed":423,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"47cef930-e131-411f-8ed2-9d2c84385c9b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Processed bond data shape: (4643, 1)\n","Date range: 2011-12-19 00:00:00 to 2024-09-03 00:00:00\n","\n","First few rows:\n","            bond_Price\n","2011-12-19       8.329\n","2011-12-20       8.276\n","2011-12-21       8.340\n","2011-12-22       8.333\n","2011-12-23       8.365\n","\n","Middle few rows:\n","            bond_Price\n","2013-05-02    7.723000\n","2013-05-03    7.735000\n","2013-05-04    7.739667\n","2013-05-05    7.744333\n","2013-05-06    7.749000\n","\n","Last few rows:\n","            bond_Price\n","2024-08-30    6.863000\n","2024-08-31    6.867333\n","2024-09-01    6.871667\n","2024-09-02    6.876000\n","2024-09-03    6.984000\n","\n","Total NaN values: 0\n","\n","Number of unique values in each column:\n","bond_Price    2949\n","dtype: int64\n","\n","Percentage of interpolated values: 100.00%\n"]}]},{"cell_type":"code","source":["\n","if 'Date' in nifty.columns:\n","    nifty.set_index('Date', inplace=True)\n","nifty.index = pd.to_datetime(nifty.index)\n","\n","# Sort the index to ensure chronological order\n","nifty.sort_index(inplace=True)\n","\n","# Define the date range for interpolation\n","start_date = '2011-12-19'\n","end_date = '2024-09-03'\n","\n","# Filter the data to the specified date range\n","nifty_filtered = nifty.loc[start_date:end_date]\n","\n","# Create a complete date range\n","full_date_range = pd.date_range(start=start_date, end=end_date, freq='D')\n","\n","# Reindex the dataframe with the complete date range and interpolate\n","nifty_interpolated = nifty_filtered.reindex(full_date_range).interpolate(method='time')\n","\n","# Fill NaN values in the 'Change' column with 0 (assuming you have a 'Change' column)\n","if 'Change' in nifty_interpolated.columns:\n","    nifty_interpolated['Change'] = nifty_interpolated['Change'].fillna(0)\n","\n","# Display the first few rows of the interpolated data\n","print(nifty_interpolated.head())\n","print(nifty_interpolated.tail())\n","\n","\n","# Display the number of interpolated values\n","original_count = nifty_filtered.shape[0]\n","interpolated_count = nifty_interpolated.shape[0]\n","print(f\"\\nOriginal number of rows: {original_count}\")\n","print(f\"Number of rows after interpolation: {interpolated_count}\")\n","print(f\"Number of interpolated values: {interpolated_count - original_count}\")\n","print(nifty_interpolated.isnull().sum())\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BNq5fRcDg5aK","executionInfo":{"status":"ok","timestamp":1725384573106,"user_tz":-330,"elapsed":417,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"704911e4-8529-4095-bfbe-05645de57569"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["            nifty_Price\n","2011-12-19      4613.10\n","2011-12-20      4544.20\n","2011-12-21      4693.15\n","2011-12-22      4733.85\n","2011-12-23      4714.00\n","             nifty_Price\n","2024-08-30  25235.900000\n","2024-08-31  25250.166667\n","2024-09-01  25264.433333\n","2024-09-02  25278.700000\n","2024-09-03  25279.850000\n","\n","Original number of rows: 3150\n","Number of rows after interpolation: 4643\n","Number of interpolated values: 1493\n","nifty_Price    0\n","dtype: int64\n"]}]},{"cell_type":"code","source":["repo_rate.rename(columns={'Date':'Date','Actual':'Repo_Rate'},inplace=True)\n","repo_rate.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"PjO4zvzk6Ids","executionInfo":{"status":"ok","timestamp":1725384148778,"user_tz":-330,"elapsed":489,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"cc65f169-c967-4699-c560-82a1c93be118"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        Date  Repo_Rate\n","0 2024-08-08      0.065\n","1 2024-06-07      0.065\n","2 2024-04-05      0.065\n","3 2024-02-08      0.065\n","4 2023-12-08      0.065"],"text/html":["\n","  <div id=\"df-93b01e7a-43c0-4c35-98f5-e0bd2b8546b5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Repo_Rate</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2024-08-08</td>\n","      <td>0.065</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2024-06-07</td>\n","      <td>0.065</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2024-04-05</td>\n","      <td>0.065</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2024-02-08</td>\n","      <td>0.065</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2023-12-08</td>\n","      <td>0.065</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-93b01e7a-43c0-4c35-98f5-e0bd2b8546b5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-93b01e7a-43c0-4c35-98f5-e0bd2b8546b5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-93b01e7a-43c0-4c35-98f5-e0bd2b8546b5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c9e7bbe5-70d9-4621-a696-84d633cf13a1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c9e7bbe5-70d9-4621-a696-84d633cf13a1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c9e7bbe5-70d9-4621-a696-84d633cf13a1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"repo_rate","summary":"{\n  \"name\": \"repo_rate\",\n  \"rows\": 108,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2010-01-01 00:00:00\",\n        \"max\": \"2024-08-08 00:00:00\",\n        \"num_unique_values\": 108,\n        \"samples\": [\n          \"2012-09-17 00:00:00\",\n          \"2022-12-07 00:00:00\",\n          \"2023-12-08 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Repo_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.01308738212117836,\n        \"min\": 0.04,\n        \"max\": 0.085,\n        \"num_unique_values\": 29,\n        \"samples\": [\n          0.0485,\n          0.0831,\n          0.075\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":186}]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","\n","def process_repo_rate_data(repo_rate_data, start_date, end_date):\n","    # Ensure 'Date' is in datetime format\n","    repo_rate_data['Date'] = pd.to_datetime(repo_rate_data['Date'])\n","\n","    # Set 'Date' as index\n","    repo_rate_data = repo_rate_data.set_index('Date')\n","\n","    # Sort by date\n","    repo_rate_data = repo_rate_data.sort_index()\n","\n","    # Create a date range from start_date to end_date\n","    full_date_range = pd.date_range(start=start_date, end=end_date, freq='D')\n","\n","    # Reindex to the full date range, this will introduce NaN values for missing dates\n","    repo_rate_daily = repo_rate_data.reindex(full_date_range)\n","\n","    # Forward fill the rates\n","    # This ensures that the last known rate is used for each day until a new rate is set\n","    repo_rate_daily['Repo_Rate'] = repo_rate_daily['Repo_Rate'].ffill()\n","\n","    # If there are NaN values at the beginning, backward fill\n","    repo_rate_daily = repo_rate_daily.bfill()\n","\n","    return repo_rate_daily\n","\n","# Set the start and end dates\n","start_date = '2011-12-19'\n","end_date = '2024-09-03'\n","\n","# Process the repo rate data\n","processed_repo_rate = process_repo_rate_data(repo_rate, start_date, end_date)\n","\n","# Display information about the processed data\n","print(f\"Processed repo rate data shape: {processed_repo_rate.shape}\")\n","print(f\"Date range: {processed_repo_rate.index.min()} to {processed_repo_rate.index.max()}\")\n","print(\"\\nFirst few rows:\")\n","print(processed_repo_rate.head(30))\n","print(\"\\nMiddle few rows (to show a rate change):\")\n","print(processed_repo_rate.loc['2012-04-15':'2012-04-20'])\n","print(\"\\nLast few rows:\")\n","print(processed_repo_rate.tail())\n","\n","# Check for any remaining NaN values\n","nan_count = processed_repo_rate.isnull().sum().sum()\n","print(f\"\\nTotal NaN values: {nan_count}\")\n","\n","# Calculate and print the number of unique values\n","unique_values = processed_repo_rate['Repo_Rate'].nunique()\n","print(f\"\\nNumber of unique repo rates: {unique_values}\")\n","\n","# Calculate the percentage of interpolated (filled) values\n","original_dates = set(repo_rate['Date'])\n","full_dates = set(processed_repo_rate.index)\n","filled_dates = full_dates - original_dates\n","fill_percentage = (len(filled_dates) / len(full_dates)) * 100\n","print(f\"\\nPercentage of filled values: {fill_percentage:.2f}%\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kdqda6wViMdI","executionInfo":{"status":"ok","timestamp":1725384156495,"user_tz":-330,"elapsed":419,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"def76d70-d00d-4abb-8cf5-13e40cff737c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Processed repo rate data shape: (4643, 1)\n","Date range: 2011-12-19 00:00:00 to 2024-09-03 00:00:00\n","\n","First few rows:\n","            Repo_Rate\n","2011-12-19      0.085\n","2011-12-20      0.085\n","2011-12-21      0.085\n","2011-12-22      0.085\n","2011-12-23      0.085\n","2011-12-24      0.085\n","2011-12-25      0.085\n","2011-12-26      0.085\n","2011-12-27      0.085\n","2011-12-28      0.085\n","2011-12-29      0.085\n","2011-12-30      0.085\n","2011-12-31      0.085\n","2012-01-01      0.085\n","2012-01-02      0.085\n","2012-01-03      0.085\n","2012-01-04      0.085\n","2012-01-05      0.085\n","2012-01-06      0.085\n","2012-01-07      0.085\n","2012-01-08      0.085\n","2012-01-09      0.085\n","2012-01-10      0.085\n","2012-01-11      0.085\n","2012-01-12      0.085\n","2012-01-13      0.085\n","2012-01-14      0.085\n","2012-01-15      0.085\n","2012-01-16      0.085\n","2012-01-17      0.085\n","\n","Middle few rows (to show a rate change):\n","            Repo_Rate\n","2012-04-15      0.085\n","2012-04-16      0.085\n","2012-04-17      0.080\n","2012-04-18      0.080\n","2012-04-19      0.080\n","2012-04-20      0.080\n","\n","Last few rows:\n","            Repo_Rate\n","2024-08-30      0.065\n","2024-08-31      0.065\n","2024-09-01      0.065\n","2024-09-02      0.065\n","2024-09-03      0.065\n","\n","Total NaN values: 0\n","\n","Number of unique repo rates: 16\n","\n","Percentage of filled values: 98.19%\n"]}]},{"cell_type":"code","source":["repo_rate"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"3xZLbhUajJnQ","executionInfo":{"status":"ok","timestamp":1723297763428,"user_tz":-330,"elapsed":644,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"a51006ec-4d93-4d4a-acee-0da2522301f5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          Date  Repo_Rate\n","0   2010-01-01     0.0475\n","1   2010-02-01     0.0475\n","2   2010-03-01     0.0475\n","3   2010-04-01     0.0485\n","4   2010-05-01     0.0510\n","..         ...        ...\n","102 2023-10-06     0.0650\n","103 2023-12-08     0.0650\n","104 2024-02-08     0.0650\n","105 2024-04-05     0.0650\n","106 2024-06-07     0.0650\n","\n","[107 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-2ef64775-0c16-4cda-9938-fa27cb018c19\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Repo_Rate</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2010-01-01</td>\n","      <td>0.0475</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2010-02-01</td>\n","      <td>0.0475</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2010-03-01</td>\n","      <td>0.0475</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2010-04-01</td>\n","      <td>0.0485</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2010-05-01</td>\n","      <td>0.0510</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>102</th>\n","      <td>2023-10-06</td>\n","      <td>0.0650</td>\n","    </tr>\n","    <tr>\n","      <th>103</th>\n","      <td>2023-12-08</td>\n","      <td>0.0650</td>\n","    </tr>\n","    <tr>\n","      <th>104</th>\n","      <td>2024-02-08</td>\n","      <td>0.0650</td>\n","    </tr>\n","    <tr>\n","      <th>105</th>\n","      <td>2024-04-05</td>\n","      <td>0.0650</td>\n","    </tr>\n","    <tr>\n","      <th>106</th>\n","      <td>2024-06-07</td>\n","      <td>0.0650</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>107 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2ef64775-0c16-4cda-9938-fa27cb018c19')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2ef64775-0c16-4cda-9938-fa27cb018c19 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2ef64775-0c16-4cda-9938-fa27cb018c19');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-26330041-57d7-4fed-aadf-9a5406967966\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-26330041-57d7-4fed-aadf-9a5406967966')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-26330041-57d7-4fed-aadf-9a5406967966 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_68bbd9b3-bc69-4bec-9677-7cc0dc785a63\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('repo_rate')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_68bbd9b3-bc69-4bec-9677-7cc0dc785a63 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('repo_rate');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"repo_rate","summary":"{\n  \"name\": \"repo_rate\",\n  \"rows\": 107,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2010-01-01 00:00:00\",\n        \"max\": \"2024-06-07 00:00:00\",\n        \"num_unique_values\": 107,\n        \"samples\": [\n          \"2019-08-07 00:00:00\",\n          \"2010-11-01 00:00:00\",\n          \"2010-05-01 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Repo_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.013148365155406922,\n        \"min\": 0.04,\n        \"max\": 0.085,\n        \"num_unique_values\": 29,\n        \"samples\": [\n          0.049,\n          0.08,\n          0.0675\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":236}]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","\n","# Ensure 'Date' is in datetime format\n","india_inflation_rate['Date'] = pd.to_datetime(india_inflation_rate['Date'])\n","\n","# Set 'Date' as index\n","india_inflation_rate = india_inflation_rate.set_index('Date')\n","\n","# Sort by date\n","india_inflation_rate = india_inflation_rate.sort_index()\n","\n","# Set the start and end dates\n","start_date = '2011-12-19'\n","end_date = '2024-09-03'\n","\n","# Create a date range from start_date to end_date\n","full_date_range = pd.date_range(start=start_date, end=end_date, freq='D')\n","\n","# Reindex to the full date range, this will introduce NaN values for missing dates\n","inflation_rate_daily = india_inflation_rate.reindex(full_date_range)\n","\n","# Forward fill the rates\n","# This ensures that the last known rate is used for each day until a new rate is set\n","inflation_rate_daily['Inflation Rate (%)'] = inflation_rate_daily['Inflation Rate (%)'].ffill()\n","\n","# If there are NaN values at the beginning, backward fill\n","inflation_rate_daily = inflation_rate_daily.bfill()\n","\n","# Display information about the processed data\n","print(f\"Processed inflation rate data shape: {inflation_rate_daily.shape}\")\n","print(f\"Date range: {inflation_rate_daily.index.min()} to {inflation_rate_daily.index.max()}\")\n","print(\"\\nFirst few rows:\")\n","print(inflation_rate_daily.head())\n","print(\"\\nMiddle few rows (to show a rate change):\")\n","print(inflation_rate_daily.loc['2015-12-30':'2016-01-02'])\n","print(\"\\nLast few rows:\")\n","print(inflation_rate_daily.tail())\n","\n","# Check for any remaining NaN values\n","nan_count = inflation_rate_daily.isnull().sum().sum()\n","print(f\"\\nTotal NaN values: {nan_count}\")\n","\n","# Calculate and print the number of unique values\n","unique_values = inflation_rate_daily['Inflation Rate (%)'].nunique()\n","print(f\"\\nNumber of unique inflation rates: {unique_values}\")\n","\n","# Calculate the percentage of interpolated (filled) values\n","original_dates = set(india_inflation_rate.index)\n","full_dates = set(inflation_rate_daily.index)\n","filled_dates = full_dates - original_dates\n","fill_percentage = (len(filled_dates) / len(full_dates)) * 100\n","print(f\"\\nPercentage of filled values: {fill_percentage:.2f}%\")\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wQRbscEVjxER","executionInfo":{"status":"ok","timestamp":1725384167274,"user_tz":-330,"elapsed":388,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"50cfac9a-f1e3-4a3c-ce62-4bdde8b86688"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Processed inflation rate data shape: (4643, 1)\n","Date range: 2011-12-19 00:00:00 to 2024-09-03 00:00:00\n","\n","First few rows:\n","            Inflation Rate (%)\n","2011-12-19               0.093\n","2011-12-20               0.093\n","2011-12-21               0.093\n","2011-12-22               0.093\n","2011-12-23               0.093\n","\n","Middle few rows (to show a rate change):\n","            Inflation Rate (%)\n","2015-12-30              0.0541\n","2015-12-31              0.0541\n","2016-01-01              0.0541\n","2016-01-02              0.0541\n","\n","Last few rows:\n","            Inflation Rate (%)\n","2024-08-30              0.0354\n","2024-08-31              0.0354\n","2024-09-01              0.0354\n","2024-09-02              0.0354\n","2024-09-03              0.0354\n","\n","Total NaN values: 0\n","\n","Number of unique inflation rates: 124\n","\n","Percentage of filled values: 97.11%\n"]}]},{"cell_type":"code","source":["holiday.reset_index(inplace=True)"],"metadata":{"id":"CkbHBmYg8_3E"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["holiday.drop(columns=['index'],inplace=True)"],"metadata":{"id":"FtlMGsNh9Lyy"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["holiday"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"Nooodbk99RON","executionInfo":{"status":"ok","timestamp":1725385128328,"user_tz":-330,"elapsed":393,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"976998df-36d7-4dd1-ca0d-9e7386695ffe"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               Holiday Name\n","Date                       \n","2010-01-14  Makar Sankranti\n","2010-03-11        Dhanteras\n","2010-05-11           Diwali\n","2010-05-16  Akshaya Tritiya\n","2010-08-10         Navratri\n","...                     ...\n","2024-10-05  Akshaya Tritiya\n","2024-10-21     Karva Chauth\n","2024-10-30        Dhanteras\n","2024-12-10         Dussehra\n","2024-12-25        Christmas\n","\n","[236 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-04b89497-7c7e-4886-a696-0000a7fa0512\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Holiday Name</th>\n","    </tr>\n","    <tr>\n","      <th>Date</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2010-01-14</th>\n","      <td>Makar Sankranti</td>\n","    </tr>\n","    <tr>\n","      <th>2010-03-11</th>\n","      <td>Dhanteras</td>\n","    </tr>\n","    <tr>\n","      <th>2010-05-11</th>\n","      <td>Diwali</td>\n","    </tr>\n","    <tr>\n","      <th>2010-05-16</th>\n","      <td>Akshaya Tritiya</td>\n","    </tr>\n","    <tr>\n","      <th>2010-08-10</th>\n","      <td>Navratri</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2024-10-05</th>\n","      <td>Akshaya Tritiya</td>\n","    </tr>\n","    <tr>\n","      <th>2024-10-21</th>\n","      <td>Karva Chauth</td>\n","    </tr>\n","    <tr>\n","      <th>2024-10-30</th>\n","      <td>Dhanteras</td>\n","    </tr>\n","    <tr>\n","      <th>2024-12-10</th>\n","      <td>Dussehra</td>\n","    </tr>\n","    <tr>\n","      <th>2024-12-25</th>\n","      <td>Christmas</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>236 rows × 1 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-04b89497-7c7e-4886-a696-0000a7fa0512')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-04b89497-7c7e-4886-a696-0000a7fa0512 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-04b89497-7c7e-4886-a696-0000a7fa0512');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-88740904-5f5e-4d0b-8e27-ed99c6a162f9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-88740904-5f5e-4d0b-8e27-ed99c6a162f9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-88740904-5f5e-4d0b-8e27-ed99c6a162f9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_76bb7498-7fb3-4a6a-b770-669dd1a1bf4e\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('holiday')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_76bb7498-7fb3-4a6a-b770-669dd1a1bf4e button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('holiday');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"holiday","summary":"{\n  \"name\": \"holiday\",\n  \"rows\": 236,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2010-01-14 00:00:00\",\n        \"max\": \"2024-12-25 00:00:00\",\n        \"num_unique_values\": 230,\n        \"samples\": [\n          \"2024-03-10 00:00:00\",\n          \"2014-05-10 00:00:00\",\n          \"2010-11-17 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Holiday Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 16,\n        \"samples\": [\n          \"Makar Sankranti\",\n          \"Dhanteras\",\n          \"Rakhi\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":247}]},{"cell_type":"code","source":["holiday.set_index('Date',inplace=True)"],"metadata":{"id":"-emNZl1W9Ylv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","\n","# Assuming 'holiday' is your existing DataFrame\n","# Convert the index to datetime format\n","holiday.index = pd.to_datetime(holiday.index)\n","\n","# Sort by date to ensure chronological order\n","holiday = holiday.sort_index()\n","\n","# Group by date and concatenate holiday names if multiple holidays exist on the same date\n","holiday_grouped = holiday.groupby(holiday.index)['Holiday Name'].agg(lambda x: ', '.join(x)).to_frame()\n","\n","# Define the start and end dates\n","start_date = '2011-12-19'\n","end_date = '2024-09-03'\n","\n","# Create a complete date range from start_date to end_date\n","full_date_range = pd.date_range(start=start_date, end=end_date, freq='D')\n","\n","# Create a new DataFrame with the full date range as the index\n","holiday_daily = pd.DataFrame(index=full_date_range, columns=['Holiday Name'])\n","\n","# Ensure that 'holiday_grouped' index and 'holiday_daily' index are both datetime and aligned\n","holiday_daily.index = pd.to_datetime(holiday_daily.index)\n","holiday_grouped.index = pd.to_datetime(holiday_grouped.index)\n","\n","# Fill in the holiday names where they exist\n","holiday_daily.update(holiday_grouped)\n","\n","# Fill NaN values with \"No\" for non-holiday days\n","holiday_daily['Holiday Name'].fillna(\"No\", inplace=True)\n","\n","# Display information about the processed data\n","print(f\"Processed holiday data shape: {holiday_daily.shape}\")\n","print(f\"Date range: {holiday_daily.index.min()} to {holiday_daily.index.max()}\")\n","print(\"\\nFirst few rows:\")\n","print(holiday_daily.head())\n","print(\"\\nMiddle few rows (to show some holidays):\")\n","print(holiday_daily.loc['2015-08-15':'2015-08-20'])\n","print(\"\\nLast few rows:\")\n","print(holiday_daily.tail())\n","\n","# Count the number of holidays and non-holidays\n","holiday_count = (holiday_daily['Holiday Name'] != \"No\").sum()\n","non_holiday_count = (holiday_daily['Holiday Name'] == \"No\").sum()\n","print(f\"\\nNumber of days with holidays: {holiday_count}\")\n","print(f\"Number of days without holidays: {non_holiday_count}\")\n","\n","# Calculate the percentage of holidays\n","holiday_percentage = (holiday_count / len(holiday_daily)) * 100\n","print(f\"\\nPercentage of days that have holidays: {holiday_percentage:.2f}%\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RZY2WIYhk1xB","executionInfo":{"status":"ok","timestamp":1725385119972,"user_tz":-330,"elapsed":392,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"f2f5c936-804d-4339-8610-b000b6a84096"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Processed holiday data shape: (4643, 1)\n","Date range: 2011-12-19 00:00:00 to 2024-09-03 00:00:00\n","\n","First few rows:\n","           Holiday Name\n","2011-12-19           No\n","2011-12-20           No\n","2011-12-21           No\n","2011-12-22           No\n","2011-12-23           No\n","\n","Middle few rows (to show some holidays):\n","           Holiday Name\n","2015-08-15           No\n","2015-08-16           No\n","2015-08-17           No\n","2015-08-18           No\n","2015-08-19           No\n","2015-08-20           No\n","\n","Last few rows:\n","           Holiday Name\n","2024-08-30           No\n","2024-08-31           No\n","2024-09-01           No\n","2024-09-02           No\n","2024-09-03           No\n","\n","Number of days with holidays: 196\n","Number of days without holidays: 4447\n","\n","Percentage of days that have holidays: 4.22%\n"]}]},{"cell_type":"code","source":["holiday_daily.loc[holiday_daily['Holiday Name']!='No']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"rvICkWM8-AF6","executionInfo":{"status":"ok","timestamp":1725385183478,"user_tz":-330,"elapsed":489,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"454d5f45-f3f9-4a6d-db6a-bdd574cc56be"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               Holiday Name\n","2011-12-25        Christmas\n","2012-01-14  Makar Sankranti\n","2012-01-15           Pongal\n","2012-02-08            Rakhi\n","2012-02-11     Karva Chauth\n","...                     ...\n","2024-04-13         Vaisakhi\n","2024-06-17           Bakrid\n","2024-07-21     Guru Purnima\n","2024-08-11      Chhath Puja\n","2024-08-19            Rakhi\n","\n","[196 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-f3c47b37-59cc-476e-a030-28686d27da8b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Holiday Name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2011-12-25</th>\n","      <td>Christmas</td>\n","    </tr>\n","    <tr>\n","      <th>2012-01-14</th>\n","      <td>Makar Sankranti</td>\n","    </tr>\n","    <tr>\n","      <th>2012-01-15</th>\n","      <td>Pongal</td>\n","    </tr>\n","    <tr>\n","      <th>2012-02-08</th>\n","      <td>Rakhi</td>\n","    </tr>\n","    <tr>\n","      <th>2012-02-11</th>\n","      <td>Karva Chauth</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2024-04-13</th>\n","      <td>Vaisakhi</td>\n","    </tr>\n","    <tr>\n","      <th>2024-06-17</th>\n","      <td>Bakrid</td>\n","    </tr>\n","    <tr>\n","      <th>2024-07-21</th>\n","      <td>Guru Purnima</td>\n","    </tr>\n","    <tr>\n","      <th>2024-08-11</th>\n","      <td>Chhath Puja</td>\n","    </tr>\n","    <tr>\n","      <th>2024-08-19</th>\n","      <td>Rakhi</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>196 rows × 1 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f3c47b37-59cc-476e-a030-28686d27da8b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f3c47b37-59cc-476e-a030-28686d27da8b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f3c47b37-59cc-476e-a030-28686d27da8b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bc942391-2c2a-4e3b-bfa4-71de7eb61aee\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bc942391-2c2a-4e3b-bfa4-71de7eb61aee')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bc942391-2c2a-4e3b-bfa4-71de7eb61aee button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"holiday_daily\",\n  \"rows\": 196,\n  \"fields\": [\n    {\n      \"column\": \"Holiday Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 19,\n        \"samples\": [\n          \"Christmas\",\n          \"Guru Purnima\",\n          \"Dussehra\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":248}]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","\n","# Ensure the index is in datetime format\n","data_gpr_export.index = pd.to_datetime(data_gpr_export['Date'])\n","\n","# Remove the 'Date' column as it's now the index\n","data_gpr_export = data_gpr_export.drop('Date', axis=1)\n","\n","# Sort by date\n","data_gpr_export = data_gpr_export.sort_index()\n","\n","# Set the start and end dates\n","start_date = '2011-12-19'\n","end_date = '2024-09-03'\n","\n","# Create a date range from start_date to end_date\n","full_date_range = pd.date_range(start=start_date, end=end_date, freq='D')\n","\n","# Reindex to the full date range, this will introduce NaN values for missing dates\n","gpr_daily = data_gpr_export.reindex(full_date_range)\n","\n","# Interpolate missing values\n","gpr_daily = gpr_daily.interpolate(method='time')\n","\n","# If there are NaN values at the beginning or end, forward and backward fill\n","gpr_daily = gpr_daily.ffill().bfill()\n","\n","# Display information about the processed data\n","print(f\"Processed GPR data shape: {gpr_daily.shape}\")\n","print(f\"Date range: {gpr_daily.index.min()} to {gpr_daily.index.max()}\")\n","print(\"\\nFirst few rows:\")\n","print(gpr_daily.head())\n","print(\"\\nMiddle few rows:\")\n","print(gpr_daily.loc['2015-07-01':'2015-07-05'])\n","print(\"\\nLast few rows:\")\n","print(gpr_daily.tail())\n","\n","# Check for any remaining NaN values\n","nan_count = gpr_daily.isnull().sum().sum()\n","print(f\"\\nTotal NaN values: {nan_count}\")\n","\n","# Calculate and print the number of unique values for each column\n","unique_values = gpr_daily.nunique()\n","print(f\"\\nNumber of unique values in each column:\")\n","print(unique_values)\n","\n","# Calculate the percentage of interpolated values\n","original_dates = set(data_gpr_export.index)\n","full_dates = set(gpr_daily.index)\n","interpolated_dates = full_dates - original_dates\n","interpolation_percentage = (len(interpolated_dates) / len(full_dates)) * 100\n","print(f\"\\nPercentage of interpolated values: {interpolation_percentage:.2f}%\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"x1QNqK7Eo_yb","executionInfo":{"status":"ok","timestamp":1725384211291,"user_tz":-330,"elapsed":442,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"5c7b9da8-9dba-4c22-aa09-de3e3e1a29ca"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Processed GPR data shape: (4643, 2)\n","Date range: 2011-12-19 00:00:00 to 2024-09-03 00:00:00\n","\n","First few rows:\n","                  GPR  GPRC_IND\n","2011-12-19  79.634972  0.174591\n","2011-12-20  79.634972  0.174591\n","2011-12-21  79.634972  0.174591\n","2011-12-22  79.634972  0.174591\n","2011-12-23  79.634972  0.174591\n","\n","Middle few rows:\n","                   GPR  GPRC_IND\n","2015-07-01  106.808662  0.186155\n","2015-07-02  106.023819  0.183342\n","2015-07-03  105.238977  0.180529\n","2015-07-04  104.454134  0.177716\n","2015-07-05  103.669291  0.174903\n","\n","Last few rows:\n","              GPR  GPRC_IND\n","2024-08-30  90.49     91.92\n","2024-08-31  90.49     91.92\n","2024-09-01  90.49     91.92\n","2024-09-02  90.49     91.92\n","2024-09-03  90.49     91.92\n","\n","Total NaN values: 0\n","\n","Number of unique values in each column:\n","GPR         4566\n","GPRC_IND    4566\n","dtype: int64\n","\n","Percentage of interpolated values: 96.75%\n"]}]},{"cell_type":"code","source":["US_Dollar.reset_index(inplace=True)"],"metadata":{"id":"QbzAe4Nc6hFE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","\n","# Ensure the index is in datetime format\n","US_Dollar.index = pd.to_datetime(US_Dollar['Date'])\n","\n","# Remove the 'Date' column as it's now the index\n","US_Dollar = US_Dollar.drop('Date', axis=1)\n","\n","# Sort by date\n","US_Dollar = US_Dollar.sort_index()\n","\n","# Set the start and end dates\n","start_date = '2011-12-19'\n","end_date = '2024-09-03'\n","\n","# Create a date range from start_date to end_date\n","full_date_range = pd.date_range(start=start_date, end=end_date, freq='D')\n","\n","# Reindex to the full date range, this will introduce NaN values for missing dates\n","us_dollar_daily = US_Dollar.reindex(full_date_range)\n","\n","# Interpolate missing values for 'US_Price'\n","us_dollar_daily['US_Price'] = us_dollar_daily['US_Price'].interpolate(method='time')\n","\n","\n","\n","# If there are any remaining NaN values at the edges, forward and backward fill\n","us_dollar_daily = us_dollar_daily.ffill().bfill()\n","\n","# Display information about the processed data\n","print(f\"Processed US Dollar data shape: {us_dollar_daily.shape}\")\n","print(f\"Date range: {us_dollar_daily.index.min()} to {us_dollar_daily.index.max()}\")\n","print(\"\\nFirst few rows:\")\n","print(us_dollar_daily.head())\n","print(\"\\nMiddle few rows:\")\n","print(us_dollar_daily.loc['2015-07-01':'2015-07-05'])\n","print(\"\\nLast few rows:\")\n","print(us_dollar_daily.tail())\n","\n","# Check for any remaining NaN values\n","nan_count = us_dollar_daily.isnull().sum().sum()\n","print(f\"\\nTotal NaN values: {nan_count}\")\n","\n","# Calculate and print the number of unique values for each column\n","unique_values = us_dollar_daily.nunique()\n","print(f\"\\nNumber of unique values in each column:\")\n","print(unique_values)\n","\n","# Calculate the percentage of interpolated values\n","original_dates = set(US_Dollar.index)\n","full_dates = set(us_dollar_daily.index)\n","interpolated_dates = full_dates - original_dates\n","interpolation_percentage = (len(interpolated_dates) / len(full_dates)) * 100\n","print(f\"\\nPercentage of interpolated values: {interpolation_percentage:.2f}%\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sFV72N6apI6k","executionInfo":{"status":"ok","timestamp":1725384269021,"user_tz":-330,"elapsed":409,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"419f4575-2300-4054-9bb4-a97de24fcdaf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Processed US Dollar data shape: (4643, 1)\n","Date range: 2011-12-19 00:00:00 to 2024-09-03 00:00:00\n","\n","First few rows:\n","            US_Price\n","2011-12-19     80.25\n","2011-12-20     79.88\n","2011-12-21     80.02\n","2011-12-22     79.96\n","2011-12-23     79.93\n","\n","Middle few rows:\n","             US_Price\n","2015-07-01  96.310000\n","2015-07-02  96.110000\n","2015-07-03  96.110000\n","2015-07-04  96.173333\n","2015-07-05  96.236667\n","\n","Last few rows:\n","            US_Price\n","2024-08-30   101.730\n","2024-08-31   101.745\n","2024-09-01   101.760\n","2024-09-02   101.670\n","2024-09-03   101.710\n","\n","Total NaN values: 0\n","\n","Number of unique values in each column:\n","US_Price    2608\n","dtype: int64\n","\n","Percentage of interpolated values: 28.47%\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","\n","# Ensure the index is in datetime format\n","bse_data['Date'] = pd.to_datetime(bse_data['Date'])\n","\n","# Set 'Date' as index\n","bse_data = bse_data.set_index('Date')\n","\n","# Sort by date\n","bse_data = bse_data.sort_index()\n","\n","# Set the start and end dates\n","start_date = '2011-12-19'\n","end_date = '2024-09-03'\n","\n","# Create a date range from start_date to end_date\n","full_date_range = pd.date_range(start=start_date, end=end_date, freq='D')\n","\n","# Reindex to the full date range, this will introduce NaN values for missing dates\n","bse_daily = bse_data.reindex(full_date_range)\n","\n","# Interpolate missing values for 'BSE_Price'\n","bse_daily['BSE_Price'] = bse_daily['BSE_Price'].interpolate(method='time')\n","\n","# If there are any remaining NaN values at the edges, forward and backward fill\n","bse_daily = bse_daily.ffill().bfill()\n","\n","# Display information about the processed data\n","print(f\"Processed BSE data shape: {bse_daily.shape}\")\n","print(f\"Date range: {bse_daily.index.min()} to {bse_daily.index.max()}\")\n","print(\"\\nFirst few rows:\")\n","print(bse_daily.head())\n","print(\"\\nMiddle few rows:\")\n","print(bse_daily.loc['2015-07-01':'2015-07-05'])\n","print(\"\\nLast few rows:\")\n","print(bse_daily.tail())\n","\n","# Check for any remaining NaN values\n","nan_count = bse_daily.isnull().sum().sum()\n","print(f\"\\nTotal NaN values: {nan_count}\")\n","\n","# Calculate and print the number of unique values for each column\n","unique_values = bse_daily.nunique()\n","print(f\"\\nNumber of unique values in each column:\")\n","print(unique_values)\n","\n","# Calculate the percentage of interpolated values\n","original_dates = set(bse_data.index)\n","full_dates = set(bse_daily.index)\n","interpolated_dates = full_dates - original_dates\n","interpolation_percentage = (len(interpolated_dates) / len(full_dates)) * 100\n","print(f\"\\nPercentage of interpolated values: {interpolation_percentage:.2f}%\")\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TGM1E92QpKl0","executionInfo":{"status":"ok","timestamp":1725384284469,"user_tz":-330,"elapsed":416,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"455c225c-905e-40a1-8ca0-719f8c6f0c2b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Processed BSE data shape: (4643, 1)\n","Date range: 2011-12-19 00:00:00 to 2024-09-03 00:00:00\n","\n","First few rows:\n","            BSE_Price\n","2011-12-19   15379.34\n","2011-12-20   15175.08\n","2011-12-21   15685.21\n","2011-12-22   15813.36\n","2011-12-23   15738.70\n","\n","Middle few rows:\n","               BSE_Price\n","2015-07-01  28020.870000\n","2015-07-02  27945.800000\n","2015-07-03  28092.790000\n","2015-07-04  28131.446667\n","2015-07-05  28170.103333\n","\n","Last few rows:\n","            BSE_Price\n","2024-08-30   82365.77\n","2024-08-31   82430.46\n","2024-09-01   82495.15\n","2024-09-02   82559.84\n","2024-09-03   82555.44\n","\n","Total NaN values: 0\n","\n","Number of unique values in each column:\n","BSE_Price    4643\n","dtype: int64\n","\n","Percentage of interpolated values: 32.18%\n"]}]},{"cell_type":"code","source":["reverse_repo.reset_index(inplace=True)"],"metadata":{"id":"eUlOcjVJ6yNG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","\n","# Ensure the index is in datetime format\n","reverse_repo['Date'] = pd.to_datetime(reverse_repo['Date'])\n","\n","# Set 'Date' as index\n","reverse_repo = reverse_repo.set_index('Date')\n","\n","# Sort by date\n","reverse_repo = reverse_repo.sort_index()\n","\n","# Set the start and end dates\n","start_date = '2011-12-19'\n","end_date = '2024-09-03'\n","\n","# Create a date range from start_date to end_date\n","full_date_range = pd.date_range(start=start_date, end=end_date, freq='D')\n","\n","# Reindex to the full date range, this will introduce NaN values for missing dates\n","reverse_repo_daily = reverse_repo.reindex(full_date_range)\n","\n","# Forward fill the rates\n","# This ensures that the last known rate is used for each day until a new rate is set\n","reverse_repo_daily['Reverse_Repo_Rate'] = reverse_repo_daily['Reverse_Repo_Rate'].ffill()\n","\n","# If there are NaN values at the beginning, backward fill\n","reverse_repo_daily = reverse_repo_daily.bfill()\n","\n","# Display information about the processed data\n","print(f\"Processed Reverse Repo Rate data shape: {reverse_repo_daily.shape}\")\n","print(f\"Date range: {reverse_repo_daily.index.min()} to {reverse_repo_daily.index.max()}\")\n","print(\"\\nFirst few rows:\")\n","print(reverse_repo_daily.head())\n","print(\"\\nMiddle few rows (to show a rate change):\")\n","print(reverse_repo_daily.loc['2015-06-01':'2015-06-10'])\n","print(\"\\nLast few rows:\")\n","print(reverse_repo_daily.tail())\n","\n","# Check for any remaining NaN values\n","nan_count = reverse_repo_daily.isnull().sum().sum()\n","print(f\"\\nTotal NaN values: {nan_count}\")\n","\n","# Calculate and print the number of unique values\n","unique_values = reverse_repo_daily['Reverse_Repo_Rate'].nunique()\n","print(f\"\\nNumber of unique Reverse Repo rates: {unique_values}\")\n","\n","# Calculate the percentage of interpolated (filled) values\n","original_dates = set(reverse_repo.index)\n","full_dates = set(reverse_repo_daily.index)\n","filled_dates = full_dates - original_dates\n","fill_percentage = (len(filled_dates) / len(full_dates)) * 100\n","print(f\"\\nPercentage of filled values: {fill_percentage:.2f}%\")\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xLgV5GTjuGdj","executionInfo":{"status":"ok","timestamp":1725384369817,"user_tz":-330,"elapsed":403,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"9f2c16be-8a71-4751-f78f-76684e39da3e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Processed Reverse Repo Rate data shape: (4643, 1)\n","Date range: 2011-12-19 00:00:00 to 2024-09-03 00:00:00\n","\n","First few rows:\n","            Reverse_Repo_Rate\n","2011-12-19              0.075\n","2011-12-20              0.075\n","2011-12-21              0.075\n","2011-12-22              0.075\n","2011-12-23              0.075\n","\n","Middle few rows (to show a rate change):\n","            Reverse_Repo_Rate\n","2015-06-01             0.0650\n","2015-06-02             0.0625\n","2015-06-03             0.0625\n","2015-06-04             0.0625\n","2015-06-05             0.0625\n","2015-06-06             0.0625\n","2015-06-07             0.0625\n","2015-06-08             0.0625\n","2015-06-09             0.0625\n","2015-06-10             0.0625\n","\n","Last few rows:\n","            Reverse_Repo_Rate\n","2024-08-30             0.0335\n","2024-08-31             0.0335\n","2024-09-01             0.0335\n","2024-09-02             0.0335\n","2024-09-03             0.0335\n","\n","Total NaN values: 0\n","\n","Number of unique Reverse Repo rates: 20\n","\n","Percentage of filled values: 97.91%\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","\n","# Ensure the index is in datetime format\n","WPI['Date'] = pd.to_datetime(WPI['Date'])\n","\n","# Set 'Date' as index\n","WPI = WPI.set_index('Date')\n","\n","# Sort by date\n","WPI = WPI.sort_index()\n","\n","# Set the start and end dates\n","start_date = '2011-12-19'\n","end_date = '2024-09-03'\n","\n","# Create a date range from start_date to end_date\n","full_date_range = pd.date_range(start=start_date, end=end_date, freq='D')\n","\n","# Reindex to the full date range, this will introduce NaN values for missing dates\n","wpi_daily = WPI.reindex(full_date_range)\n","\n","# Forward fill the rates to ensure we have a value for each day\n","wpi_daily['WPI_Actual'] = wpi_daily['WPI_Actual'].ffill()\n","\n","# Now interpolate to create a smoother daily series\n","wpi_daily['WPI_Actual'] = wpi_daily['WPI_Actual'].interpolate(method='time')\n","\n","# If there are NaN values at the beginning, backward fill\n","wpi_daily = wpi_daily.bfill()\n","\n","# Display information about the processed data\n","print(f\"Processed WPI data shape: {wpi_daily.shape}\")\n","print(f\"Date range: {wpi_daily.index.min()} to {wpi_daily.index.max()}\")\n","print(\"\\nFirst few rows:\")\n","print(wpi_daily.head())\n","print(\"\\nMiddle few rows (to show transition between months):\")\n","print(wpi_daily.loc['2015-06-28':'2015-07-03'])\n","print(\"\\nLast few rows:\")\n","print(wpi_daily.tail())\n","\n","# Check for any remaining NaN values\n","nan_count = wpi_daily.isnull().sum().sum()\n","print(f\"\\nTotal NaN values: {nan_count}\")\n","\n","# Calculate and print the number of unique values\n","unique_values = wpi_daily['WPI_Actual'].nunique()\n","print(f\"\\nNumber of unique WPI values: {unique_values}\")\n","\n","# Calculate the percentage of interpolated values\n","original_dates = set(WPI.index)\n","full_dates = set(wpi_daily.index)\n","interpolated_dates = full_dates - original_dates\n","interpolation_percentage = (len(interpolated_dates) / len(full_dates)) * 100\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_jdZsBS3thk0","executionInfo":{"status":"ok","timestamp":1725384383496,"user_tz":-330,"elapsed":465,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"47d6f5cf-1d3a-4597-c411-4d3cf403d39d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Processed WPI data shape: (4643, 1)\n","Date range: 2011-12-19 00:00:00 to 2024-09-03 00:00:00\n","\n","First few rows:\n","            WPI_Actual\n","2011-12-19       0.075\n","2011-12-20       0.075\n","2011-12-21       0.075\n","2011-12-22       0.075\n","2011-12-23       0.075\n","\n","Middle few rows (to show transition between months):\n","            WPI_Actual\n","2015-06-28     -0.0236\n","2015-06-29     -0.0236\n","2015-06-30     -0.0236\n","2015-07-01     -0.0236\n","2015-07-02     -0.0236\n","2015-07-03     -0.0236\n","\n","Last few rows:\n","            WPI_Actual\n","2024-08-30      0.0204\n","2024-08-31      0.0204\n","2024-09-01      0.0204\n","2024-09-02      0.0204\n","2024-09-03      0.0204\n","\n","Total NaN values: 0\n","\n","Number of unique WPI values: 141\n"]}]},{"cell_type":"code","source":["US_federal_target_rate.reset_index(inplace=True)"],"metadata":{"id":"mj3djG4zsRx_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","\n","# Ensure the index is in datetime format\n","US_federal_target_rate['Date'] = pd.to_datetime(US_federal_target_rate['Date'])\n","\n","# Group by date and take the last value for each date\n","US_federal_target_rate = US_federal_target_rate.groupby('Date').last().reset_index()\n","\n","# Set 'Date' as index\n","US_federal_target_rate = US_federal_target_rate.set_index('Date')\n","\n","# Sort by date\n","US_federal_target_rate = US_federal_target_rate.sort_index()\n","\n","# Set the start and end dates\n","start_date = '2011-12-19'\n","end_date = '2024-09-03'\n","\n","# Create a date range from start_date to end_date\n","full_date_range = pd.date_range(start=start_date, end=end_date, freq='D')\n","\n","# Reindex to the full date range, this will introduce NaN values for missing dates\n","federal_rate_daily = US_federal_target_rate.reindex(full_date_range)\n","\n","# Forward fill the rates\n","# This ensures that the last known rate is used for each day until a new rate is set\n","federal_rate_daily['US_federal_target_rate_Actual'] = federal_rate_daily['US_federal_target_rate_Actual'].ffill()\n","\n","# If there are NaN values at the beginning, backward fill\n","federal_rate_daily = federal_rate_daily.bfill()\n","\n","# Display information about the processed data\n","print(f\"Processed US Federal Target Rate data shape: {federal_rate_daily.shape}\")\n","print(f\"Date range: {federal_rate_daily.index.min()} to {federal_rate_daily.index.max()}\")\n","print(\"\\nFirst few rows:\")\n","print(federal_rate_daily.head())\n","print(\"\\nMiddle few rows (to show a rate change):\")\n","print(federal_rate_daily.loc['2015-12-15':'2015-12-20'])\n","print(\"\\nLast few rows:\")\n","print(federal_rate_daily.tail())\n","\n","# Check for any remaining NaN values\n","nan_count = federal_rate_daily.isnull().sum().sum()\n","print(f\"\\nTotal NaN values: {nan_count}\")\n","\n","# Calculate and print the number of unique values\n","unique_values = federal_rate_daily['US_federal_target_rate_Actual'].nunique()\n","print(f\"\\nNumber of unique federal target rates: {unique_values}\")\n","\n","# Calculate the percentage of interpolated (filled) values\n","original_dates = set(US_federal_target_rate.index)\n","full_dates = set(federal_rate_daily.index)\n","filled_dates = full_dates - original_dates\n","fill_percentage = (len(filled_dates) / len(full_dates)) * 100\n","print(f\"\\nPercentage of filled values: {fill_percentage:.2f}%\")\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bgALqarurlzA","executionInfo":{"status":"ok","timestamp":1725384394142,"user_tz":-330,"elapsed":411,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"2ba0a513-f22f-4153-8451-e698b952da19"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Processed US Federal Target Rate data shape: (4643, 1)\n","Date range: 2011-12-19 00:00:00 to 2024-09-03 00:00:00\n","\n","First few rows:\n","            US_federal_target_rate_Actual\n","2011-12-19                         0.0025\n","2011-12-20                         0.0025\n","2011-12-21                         0.0025\n","2011-12-22                         0.0025\n","2011-12-23                         0.0025\n","\n","Middle few rows (to show a rate change):\n","            US_federal_target_rate_Actual\n","2015-12-15                         0.0025\n","2015-12-16                         0.0025\n","2015-12-17                         0.0050\n","2015-12-18                         0.0050\n","2015-12-19                         0.0050\n","2015-12-20                         0.0050\n","\n","Last few rows:\n","            US_federal_target_rate_Actual\n","2024-08-30                          0.055\n","2024-08-31                          0.055\n","2024-09-01                          0.055\n","2024-09-02                          0.055\n","2024-09-03                          0.055\n","\n","Total NaN values: 0\n","\n","Number of unique federal target rates: 18\n","\n","Percentage of filled values: 97.78%\n"]}]},{"cell_type":"code","source":["USD_INR.reset_index(inplace=True)"],"metadata":{"id":"cv-2DbU37NgI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","\n","# Ensure the index is in datetime format\n","USD_INR['Date'] = pd.to_datetime(USD_INR['Date'])\n","\n","# Set 'Date' as index\n","USD_INR = USD_INR.set_index('Date')\n","\n","# Sort by date\n","USD_INR = USD_INR.sort_index()\n","\n","# Set the start and end dates\n","start_date = '2011-12-19'\n","end_date = '2024-09-03'\n","\n","# Create a date range from start_date to end_date\n","full_date_range = pd.date_range(start=start_date, end=end_date, freq='D')\n","\n","# Reindex to the full date range, this will introduce NaN values for missing dates\n","usd_inr_daily = USD_INR.reindex(full_date_range)\n","\n","# Interpolate missing values for 'USD_INR_Price'\n","usd_inr_daily['USD_INR_Price'] = usd_inr_daily['USD_INR_Price'].interpolate(method='time')\n","\n","\n","# If there are any remaining NaN values at the edges, forward and backward fill\n","usd_inr_daily = usd_inr_daily.ffill().bfill()\n","\n","# Display information about the processed data\n","print(f\"Processed USD/INR data shape: {usd_inr_daily.shape}\")\n","print(f\"Date range: {usd_inr_daily.index.min()} to {usd_inr_daily.index.max()}\")\n","print(\"\\nFirst few rows:\")\n","print(usd_inr_daily.head())\n","print(\"\\nMiddle few rows:\")\n","print(usd_inr_daily.loc['2015-07-01':'2015-07-05'])\n","print(\"\\nLast few rows:\")\n","print(usd_inr_daily.tail())\n","\n","# Check for any remaining NaN values\n","nan_count = usd_inr_daily.isnull().sum().sum()\n","print(f\"\\nTotal NaN values: {nan_count}\")\n","\n","# Calculate and print the number of unique values for each column\n","unique_values = usd_inr_daily.nunique()\n","print(f\"\\nNumber of unique values in each column:\")\n","print(unique_values)\n","\n","# Calculate the percentage of interpolated values\n","original_dates = set(USD_INR.index)\n","full_dates = set(usd_inr_daily.index)\n","interpolated_dates = full_dates - original_dates\n","interpolation_percentage = (len(interpolated_dates) / len(full_dates)) * 100\n","print(f\"\\nPercentage of interpolated values: {interpolation_percentage:.2f}%\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_uBvUghms0_W","executionInfo":{"status":"ok","timestamp":1725384605533,"user_tz":-330,"elapsed":578,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"bdba19f3-27b9-46b7-d939-9f7bf584b0af"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Processed USD/INR data shape: (4643, 1)\n","Date range: 2011-12-19 00:00:00 to 2024-09-03 00:00:00\n","\n","First few rows:\n","            USD_INR_Price\n","2011-12-19         52.700\n","2011-12-20         52.770\n","2011-12-21         52.400\n","2011-12-22         52.565\n","2011-12-23         52.790\n","\n","Middle few rows:\n","            USD_INR_Price\n","2015-07-01         63.550\n","2015-07-02         63.299\n","2015-07-03         63.411\n","2015-07-04         63.362\n","2015-07-05         63.313\n","\n","Last few rows:\n","            USD_INR_Price\n","2024-08-30      83.867000\n","2024-08-31      83.871333\n","2024-09-01      83.875667\n","2024-09-02      83.880000\n","2024-09-03      83.952000\n","\n","Total NaN values: 0\n","\n","Number of unique values in each column:\n","USD_INR_Price    3962\n","dtype: int64\n","\n","Percentage of interpolated values: 28.56%\n"]}]},{"cell_type":"code","source":["Silver_Mini.reset_index(inplace=True)"],"metadata":{"id":"RiCDYbji7_gs"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Silver_Mini.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"h_z9Xihu8NPk","executionInfo":{"status":"ok","timestamp":1725384690991,"user_tz":-330,"elapsed":401,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"ceffeb47-4760-4ae3-d612-d8ded920139b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 21 entries, 0 to 20\n","Data columns (total 2 columns):\n"," #   Column        Non-Null Count  Dtype         \n","---  ------        --------------  -----         \n"," 0   Date          21 non-null     datetime64[ns]\n"," 1   Silver_Price  21 non-null     float64       \n","dtypes: datetime64[ns](1), float64(1)\n","memory usage: 464.0 bytes\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","\n","# Ensure the index is in datetime format\n","Silver_Mini.index = pd.to_datetime(Silver_Mini['Date'])\n","\n","# Remove the 'Date' column as it's now the index\n","Silver_Mini = Silver_Mini.drop('Date', axis=1)\n","\n","# Sort by date\n","Silver_Mini = Silver_Mini.sort_index()\n","\n","# Set the start and end dates\n","start_date = '2011-12-19'\n","end_date = '2024-09-03'\n","\n","# Create a date range from start_date to end_date\n","full_date_range = pd.date_range(start=start_date, end=end_date, freq='D')\n","\n","# Reindex to the full date range, this will introduce NaN values for missing dates\n","silver_mini_daily = Silver_Mini.reindex(full_date_range)\n","\n","# Interpolate missing values for 'Silver_Price'\n","silver_mini_daily['Silver_Price'] = silver_mini_daily['Silver_Price'].interpolate(method='time')\n","\n","# For 'Silver_Change %', we'll fill NaN values with 0\n","# If there are any remaining NaN values at the edges, forward and backward fill\n","silver_mini_daily = silver_mini_daily.ffill().bfill()\n","\n","# Display information about the processed data\n","print(f\"Processed Silver Mini data shape: {silver_mini_daily.shape}\")\n","print(f\"Date range: {silver_mini_daily.index.min()} to {silver_mini_daily.index.max()}\")\n","print(\"\\nFirst few rows:\")\n","print(silver_mini_daily.head())\n","print(\"\\nMiddle few rows:\")\n","print(silver_mini_daily.loc['2015-07-01':'2015-07-05'])\n","print(\"\\nLast few rows:\")\n","print(silver_mini_daily.tail())\n","\n","# Check for any remaining NaN values\n","nan_count = silver_mini_daily.isnull().sum().sum()\n","print(f\"\\nTotal NaN values: {nan_count}\")\n","\n","# Calculate and print the number of unique values for each column\n","unique_values = silver_mini_daily.nunique()\n","print(f\"\\nNumber of unique values in each column:\")\n","print(unique_values)\n","\n","# Calculate the percentage of interpolated values\n","original_dates = set(Silver_Mini.index)\n","full_dates = set(silver_mini_daily.index)\n","interpolated_dates = full_dates - original_dates\n","interpolation_percentage = (len(interpolated_dates) / len(full_dates)) * 100\n","print(f\"\\nPercentage of interpolated values: {interpolation_percentage:.2f}%\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"r6CtNWfCrOy9","executionInfo":{"status":"ok","timestamp":1725384702566,"user_tz":-330,"elapsed":407,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"3e10671a-7482-4f2c-952f-c9badaeaf00b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Processed Silver Mini data shape: (4643, 1)\n","Date range: 2011-12-19 00:00:00 to 2024-09-03 00:00:00\n","\n","First few rows:\n","            Silver_Price\n","2011-12-19       79709.0\n","2011-12-20       79709.0\n","2011-12-21       79709.0\n","2011-12-22       79709.0\n","2011-12-23       79709.0\n","\n","Middle few rows:\n","            Silver_Price\n","2015-07-01       79709.0\n","2015-07-02       79709.0\n","2015-07-03       79709.0\n","2015-07-04       79709.0\n","2015-07-05       79709.0\n","\n","Last few rows:\n","            Silver_Price\n","2024-08-30  84519.000000\n","2024-08-31  84553.666667\n","2024-09-01  84588.333333\n","2024-09-02  84623.000000\n","2024-09-03  83040.000000\n","\n","Total NaN values: 0\n","\n","Number of unique values in each column:\n","Silver_Price    30\n","dtype: int64\n","\n","Percentage of interpolated values: 99.55%\n"]}]},{"cell_type":"code","source":["def process_vix_data(india_vix, start_date, end_date):\n","\n","    india_vix['Date'] = pd.to_datetime(india_vix['Date'])\n","\n","    # Set 'Date' as index\n","    india_vix = india_vix.set_index('Date')\n","\n","    # Sort by date\n","    india_vix= india_vix.sort_index()\n","\n","    # Create a date range from start_date to end_date\n","    full_date_range = pd.date_range(start=start_date, end=end_date, freq='D')\n","\n","    # Reindex to the full date range, this will introduce NaN values for missing dates\n","    india_vix= india_vix.reindex(full_date_range)\n","    india_vix = india_vix.interpolate(method='time')\n","    india_vix = india_vix.ffill().bfill()\n","\n","    return india_vix\n","\n","# Set the start and end dates\n","start_date = '2011-12-19'\n","end_date = '2024-09-03'\n","\n","# Process the CPI data\n","processed_vix = process_vix_data(india_vix, start_date, end_date)\n","\n","# Display information about the processed data\n","print(f\"Processed CPI data shape: {processed_vix.shape}\")\n","print(f\"Date range: {processed_vix.index.min()} to {processed_vix.index.max()}\")\n","print(\"\\nFirst few rows:\")\n","print(processed_vix.head())\n","print(\"\\nMiddle few rows (to show variation):\")\n","print(processed_vix.iloc[500:505])\n","print(\"\\nLast few rows:\")\n","print(processed_vix.tail())\n","\n","# Check for any remaining NaN values\n","nan_count = processed_vix.isnull().sum().sum()\n","print(f\"\\nTotal NaN values: {nan_count}\")\n","\n","# Optional: Calculate and print the number of unique values\n","unique_values = processed_vix.nunique()\n","print(f\"\\nNumber of unique values in each column: {unique_values}\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8FRglH4dSc49","executionInfo":{"status":"ok","timestamp":1723377385120,"user_tz":-330,"elapsed":413,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"b5a85fd6-7e79-4fab-cbab-3f530a23911f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Processed CPI data shape: (4607, 1)\n","Date range: 2011-12-19 00:00:00 to 2024-07-29 00:00:00\n","\n","First few rows:\n","            india_vix_Price\n","2011-12-19            30.58\n","2011-12-20            30.53\n","2011-12-21            27.53\n","2011-12-22            26.84\n","2011-12-23            27.39\n","\n","Middle few rows (to show variation):\n","            india_vix_Price\n","2013-05-02        16.280000\n","2013-05-03        15.550000\n","2013-05-04        15.646667\n","2013-05-05        15.743333\n","2013-05-06        15.840000\n","\n","Last few rows:\n","            india_vix_Price\n","2024-07-25          12.6175\n","2024-07-26          12.2475\n","2024-07-27          12.4800\n","2024-07-28          12.7125\n","2024-07-29          12.9450\n","\n","Total NaN values: 0\n","\n","Number of unique values in each column: india_vix_Price    3659\n","dtype: int64\n"]}]},{"cell_type":"code","source":["# List of all your processed dataframes\n","dataframes = [\n","processed_cpi,\n","processed_usd_inr,\n","processed_crude_oil,\n","processed_ecb,\n","processed_gold,\n","processed_bond,\n","nifty_interpolated,\n","processed_repo_rate,\n","inflation_rate_daily,\n","holiday_daily,\n","gpr_daily,\n","us_dollar_daily,\n","bse_daily,\n","federal_rate_daily,\n","reverse_repo_daily,\n","wpi_daily,\n","silver_mini_daily\n","]\n","\n","# Merge all dataframes on the Date index\n","merged_data = pd.concat(dataframes, axis=1)\n"],"metadata":{"id":"UvZcuLdPu72c"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["merged_data.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qJCKThdexUB7","executionInfo":{"status":"ok","timestamp":1725385219462,"user_tz":-330,"elapsed":422,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"56d0b886-c28a-40fd-baa6-927bab39669a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(4643, 23)"]},"metadata":{},"execution_count":250}]},{"cell_type":"code","source":["merged_data.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":805},"id":"RrbHc52dxWRY","executionInfo":{"status":"ok","timestamp":1725385221345,"user_tz":-330,"elapsed":377,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"8aa329e0-59ec-48b2-eba4-de5d4d59564c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["CPI_Actual                       0\n","USD_INR_Price                    0\n","crude_Price                      0\n","ECB_rate                         0\n","gold_Price                       0\n","gold_Open                        0\n","gold_High                        0\n","gold_Low                         0\n","gold_Vol.                        0\n","gold_Change %                    0\n","bond_Price                       0\n","nifty_Price                      0\n","Repo_Rate                        0\n","Inflation Rate (%)               0\n","Holiday Name                     0\n","GPR                              0\n","GPRC_IND                         0\n","US_Price                         0\n","BSE_Price                        0\n","US_federal_target_rate_Actual    0\n","Reverse_Repo_Rate                0\n","WPI_Actual                       0\n","Silver_Price                     0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>CPI_Actual</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>USD_INR_Price</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>crude_Price</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>ECB_rate</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>gold_Price</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>gold_Open</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>gold_High</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>gold_Low</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>gold_Vol.</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>gold_Change %</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>bond_Price</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>nifty_Price</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Repo_Rate</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Inflation Rate (%)</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Holiday Name</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>GPR</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>GPRC_IND</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>US_Price</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>BSE_Price</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>US_federal_target_rate_Actual</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Reverse_Repo_Rate</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>WPI_Actual</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Silver_Price</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":251}]},{"cell_type":"code","source":["merged_data.loc[merged_data['Holiday Name']!='No']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":634},"id":"cbOmTWT_-TLg","executionInfo":{"status":"ok","timestamp":1725385244825,"user_tz":-330,"elapsed":426,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"cdae4d7b-60a9-4cd7-d72d-29b60109f9db"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            CPI_Actual  USD_INR_Price  crude_Price  ECB_rate    gold_Price  \\\n","2011-12-25    0.093000      52.743333   100.510000    0.0100  27633.000000   \n","2012-01-14    0.093000      51.415000    99.202500    0.0100  27526.000000   \n","2012-01-15    0.093000      51.390000    99.705000    0.0100  27516.000000   \n","2012-02-08    0.093000      49.075000    98.710000    0.0100  27998.000000   \n","2012-02-11    0.093000      49.290000    99.416667    0.0100  28069.000000   \n","...                ...            ...          ...       ...           ...   \n","2024-04-13    0.048494      83.521333    85.576667    0.0450  72014.333333   \n","2024-06-17    0.048050      83.500000    80.330000    0.0425  71285.000000   \n","2024-07-21    0.046329      83.675333    79.896667    0.0425  72718.000000   \n","2024-08-11    0.035897      83.935000    76.830000    0.0425  70104.000000   \n","2024-08-19    0.035400      83.850000    76.830000    0.0425  71138.000000   \n","\n","               gold_Open  gold_High      gold_Low  gold_Vol.  gold_Change %  \\\n","2011-12-25  27639.500000    27651.5  27613.500000   4.580000           0.00   \n","2012-01-14  27500.000000    27564.0  27489.000000   5.280000           0.27   \n","2012-01-15  27519.500000    27584.5  27484.500000  21.170000           0.00   \n","2012-02-08  28207.000000    28239.0  27954.000000  67.150000          -0.65   \n","2012-02-11  28097.000000    28097.0  28035.000000   3.550000          -0.05   \n","...                  ...        ...           ...        ...            ...   \n","2024-04-13  71837.000000    73424.0  71581.666667  35.753333           0.00   \n","2024-06-17  71463.000000    71586.0  71170.000000   7.550000          -0.57   \n","2024-07-21  73232.666667    73366.0  72583.666667  13.283333           0.00   \n","2024-08-11  69547.000000    70158.0  69361.333333  14.303333           0.00   \n","2024-08-19  71037.000000    71272.0  70803.000000  15.290000           0.28   \n","\n","            ...  Inflation Rate (%)     Holiday Name         GPR   GPRC_IND  \\\n","2011-12-25  ...              0.0930        Christmas   79.634972   0.174591   \n","2012-01-14  ...              0.0930  Makar Sankranti   85.007264   0.224363   \n","2012-01-15  ...              0.0930           Pongal   85.420518   0.228192   \n","2012-02-08  ...              0.0930            Rakhi   91.556137   0.264939   \n","2012-02-11  ...              0.0930     Karva Chauth   91.174843   0.252794   \n","...         ...                 ...              ...         ...        ...   \n","2024-04-13  ...              0.0485         Vaisakhi  149.573535   0.202244   \n","2024-06-17  ...              0.0475           Bakrid   99.643387  49.109803   \n","2024-07-21  ...              0.0508     Guru Purnima   90.490000  91.920000   \n","2024-08-11  ...              0.0508      Chhath Puja   90.490000  91.920000   \n","2024-08-19  ...              0.0354            Rakhi   90.490000  91.920000   \n","\n","              US_Price     BSE_Price  US_federal_target_rate_Actual  \\\n","2011-12-25   79.930000  15893.400000                        0.00250   \n","2012-01-14   81.520000  16166.200000                        0.00250   \n","2012-01-15   81.520000  16177.780000                        0.00250   \n","2012-02-08   78.640000  17707.320000                        0.00250   \n","2012-02-11   79.056667  17756.740000                        0.00250   \n","...                ...           ...                            ...   \n","2024-04-13  106.096667  73963.193333                        0.05500   \n","2024-06-17  105.320000  77224.047500                        0.05500   \n","2024-07-21  104.340000  80536.270000                        0.05500   \n","2024-08-11  103.230000  79667.916667                        0.05375   \n","2024-08-19  101.870000  80424.680000                        0.05500   \n","\n","            Reverse_Repo_Rate  WPI_Actual  Silver_Price  \n","2011-12-25             0.0750      0.0750       79709.0  \n","2012-01-14             0.0750      0.0750       79709.0  \n","2012-01-15             0.0750      0.0750       79709.0  \n","2012-02-08             0.0750      0.0750       79709.0  \n","2012-02-11             0.0750      0.0750       79709.0  \n","...                       ...         ...           ...  \n","2024-04-13             0.0335      0.0020       79709.0  \n","2024-06-17             0.0335      0.0261       79709.0  \n","2024-07-21             0.0335      0.0336       79709.0  \n","2024-08-11             0.0335      0.0336       81297.0  \n","2024-08-19             0.0335      0.0204       84143.0  \n","\n","[196 rows x 23 columns]"],"text/html":["\n","  <div id=\"df-575829f6-5726-4351-86d8-8ff38d67c1a4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CPI_Actual</th>\n","      <th>USD_INR_Price</th>\n","      <th>crude_Price</th>\n","      <th>ECB_rate</th>\n","      <th>gold_Price</th>\n","      <th>gold_Open</th>\n","      <th>gold_High</th>\n","      <th>gold_Low</th>\n","      <th>gold_Vol.</th>\n","      <th>gold_Change %</th>\n","      <th>...</th>\n","      <th>Inflation Rate (%)</th>\n","      <th>Holiday Name</th>\n","      <th>GPR</th>\n","      <th>GPRC_IND</th>\n","      <th>US_Price</th>\n","      <th>BSE_Price</th>\n","      <th>US_federal_target_rate_Actual</th>\n","      <th>Reverse_Repo_Rate</th>\n","      <th>WPI_Actual</th>\n","      <th>Silver_Price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2011-12-25</th>\n","      <td>0.093000</td>\n","      <td>52.743333</td>\n","      <td>100.510000</td>\n","      <td>0.0100</td>\n","      <td>27633.000000</td>\n","      <td>27639.500000</td>\n","      <td>27651.5</td>\n","      <td>27613.500000</td>\n","      <td>4.580000</td>\n","      <td>0.00</td>\n","      <td>...</td>\n","      <td>0.0930</td>\n","      <td>Christmas</td>\n","      <td>79.634972</td>\n","      <td>0.174591</td>\n","      <td>79.930000</td>\n","      <td>15893.400000</td>\n","      <td>0.00250</td>\n","      <td>0.0750</td>\n","      <td>0.0750</td>\n","      <td>79709.0</td>\n","    </tr>\n","    <tr>\n","      <th>2012-01-14</th>\n","      <td>0.093000</td>\n","      <td>51.415000</td>\n","      <td>99.202500</td>\n","      <td>0.0100</td>\n","      <td>27526.000000</td>\n","      <td>27500.000000</td>\n","      <td>27564.0</td>\n","      <td>27489.000000</td>\n","      <td>5.280000</td>\n","      <td>0.27</td>\n","      <td>...</td>\n","      <td>0.0930</td>\n","      <td>Makar Sankranti</td>\n","      <td>85.007264</td>\n","      <td>0.224363</td>\n","      <td>81.520000</td>\n","      <td>16166.200000</td>\n","      <td>0.00250</td>\n","      <td>0.0750</td>\n","      <td>0.0750</td>\n","      <td>79709.0</td>\n","    </tr>\n","    <tr>\n","      <th>2012-01-15</th>\n","      <td>0.093000</td>\n","      <td>51.390000</td>\n","      <td>99.705000</td>\n","      <td>0.0100</td>\n","      <td>27516.000000</td>\n","      <td>27519.500000</td>\n","      <td>27584.5</td>\n","      <td>27484.500000</td>\n","      <td>21.170000</td>\n","      <td>0.00</td>\n","      <td>...</td>\n","      <td>0.0930</td>\n","      <td>Pongal</td>\n","      <td>85.420518</td>\n","      <td>0.228192</td>\n","      <td>81.520000</td>\n","      <td>16177.780000</td>\n","      <td>0.00250</td>\n","      <td>0.0750</td>\n","      <td>0.0750</td>\n","      <td>79709.0</td>\n","    </tr>\n","    <tr>\n","      <th>2012-02-08</th>\n","      <td>0.093000</td>\n","      <td>49.075000</td>\n","      <td>98.710000</td>\n","      <td>0.0100</td>\n","      <td>27998.000000</td>\n","      <td>28207.000000</td>\n","      <td>28239.0</td>\n","      <td>27954.000000</td>\n","      <td>67.150000</td>\n","      <td>-0.65</td>\n","      <td>...</td>\n","      <td>0.0930</td>\n","      <td>Rakhi</td>\n","      <td>91.556137</td>\n","      <td>0.264939</td>\n","      <td>78.640000</td>\n","      <td>17707.320000</td>\n","      <td>0.00250</td>\n","      <td>0.0750</td>\n","      <td>0.0750</td>\n","      <td>79709.0</td>\n","    </tr>\n","    <tr>\n","      <th>2012-02-11</th>\n","      <td>0.093000</td>\n","      <td>49.290000</td>\n","      <td>99.416667</td>\n","      <td>0.0100</td>\n","      <td>28069.000000</td>\n","      <td>28097.000000</td>\n","      <td>28097.0</td>\n","      <td>28035.000000</td>\n","      <td>3.550000</td>\n","      <td>-0.05</td>\n","      <td>...</td>\n","      <td>0.0930</td>\n","      <td>Karva Chauth</td>\n","      <td>91.174843</td>\n","      <td>0.252794</td>\n","      <td>79.056667</td>\n","      <td>17756.740000</td>\n","      <td>0.00250</td>\n","      <td>0.0750</td>\n","      <td>0.0750</td>\n","      <td>79709.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2024-04-13</th>\n","      <td>0.048494</td>\n","      <td>83.521333</td>\n","      <td>85.576667</td>\n","      <td>0.0450</td>\n","      <td>72014.333333</td>\n","      <td>71837.000000</td>\n","      <td>73424.0</td>\n","      <td>71581.666667</td>\n","      <td>35.753333</td>\n","      <td>0.00</td>\n","      <td>...</td>\n","      <td>0.0485</td>\n","      <td>Vaisakhi</td>\n","      <td>149.573535</td>\n","      <td>0.202244</td>\n","      <td>106.096667</td>\n","      <td>73963.193333</td>\n","      <td>0.05500</td>\n","      <td>0.0335</td>\n","      <td>0.0020</td>\n","      <td>79709.0</td>\n","    </tr>\n","    <tr>\n","      <th>2024-06-17</th>\n","      <td>0.048050</td>\n","      <td>83.500000</td>\n","      <td>80.330000</td>\n","      <td>0.0425</td>\n","      <td>71285.000000</td>\n","      <td>71463.000000</td>\n","      <td>71586.0</td>\n","      <td>71170.000000</td>\n","      <td>7.550000</td>\n","      <td>-0.57</td>\n","      <td>...</td>\n","      <td>0.0475</td>\n","      <td>Bakrid</td>\n","      <td>99.643387</td>\n","      <td>49.109803</td>\n","      <td>105.320000</td>\n","      <td>77224.047500</td>\n","      <td>0.05500</td>\n","      <td>0.0335</td>\n","      <td>0.0261</td>\n","      <td>79709.0</td>\n","    </tr>\n","    <tr>\n","      <th>2024-07-21</th>\n","      <td>0.046329</td>\n","      <td>83.675333</td>\n","      <td>79.896667</td>\n","      <td>0.0425</td>\n","      <td>72718.000000</td>\n","      <td>73232.666667</td>\n","      <td>73366.0</td>\n","      <td>72583.666667</td>\n","      <td>13.283333</td>\n","      <td>0.00</td>\n","      <td>...</td>\n","      <td>0.0508</td>\n","      <td>Guru Purnima</td>\n","      <td>90.490000</td>\n","      <td>91.920000</td>\n","      <td>104.340000</td>\n","      <td>80536.270000</td>\n","      <td>0.05500</td>\n","      <td>0.0335</td>\n","      <td>0.0336</td>\n","      <td>79709.0</td>\n","    </tr>\n","    <tr>\n","      <th>2024-08-11</th>\n","      <td>0.035897</td>\n","      <td>83.935000</td>\n","      <td>76.830000</td>\n","      <td>0.0425</td>\n","      <td>70104.000000</td>\n","      <td>69547.000000</td>\n","      <td>70158.0</td>\n","      <td>69361.333333</td>\n","      <td>14.303333</td>\n","      <td>0.00</td>\n","      <td>...</td>\n","      <td>0.0508</td>\n","      <td>Chhath Puja</td>\n","      <td>90.490000</td>\n","      <td>91.920000</td>\n","      <td>103.230000</td>\n","      <td>79667.916667</td>\n","      <td>0.05375</td>\n","      <td>0.0335</td>\n","      <td>0.0336</td>\n","      <td>81297.0</td>\n","    </tr>\n","    <tr>\n","      <th>2024-08-19</th>\n","      <td>0.035400</td>\n","      <td>83.850000</td>\n","      <td>76.830000</td>\n","      <td>0.0425</td>\n","      <td>71138.000000</td>\n","      <td>71037.000000</td>\n","      <td>71272.0</td>\n","      <td>70803.000000</td>\n","      <td>15.290000</td>\n","      <td>0.28</td>\n","      <td>...</td>\n","      <td>0.0354</td>\n","      <td>Rakhi</td>\n","      <td>90.490000</td>\n","      <td>91.920000</td>\n","      <td>101.870000</td>\n","      <td>80424.680000</td>\n","      <td>0.05500</td>\n","      <td>0.0335</td>\n","      <td>0.0204</td>\n","      <td>84143.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>196 rows × 23 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-575829f6-5726-4351-86d8-8ff38d67c1a4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-575829f6-5726-4351-86d8-8ff38d67c1a4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-575829f6-5726-4351-86d8-8ff38d67c1a4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ec93ca5e-ffef-4b4a-abab-73cbd2b412d4\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ec93ca5e-ffef-4b4a-abab-73cbd2b412d4')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ec93ca5e-ffef-4b4a-abab-73cbd2b412d4 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":252}]},{"cell_type":"code","source":["merged_data.to_excel('final_dataset.xlsx', index=True)"],"metadata":{"id":"c9KrATBexoga"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["processed_vix.reset_index(inplace=True)"],"metadata":{"id":"PpwTCijATvaP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["processed_vix= processed_vix.rename(columns={'index': 'Date', 'Previous': 'vix'})"],"metadata":{"id":"SZZsu_a-T009"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df2 = pd.merge(df, processed_vix, on='Date')  # 'Date' is the common column"],"metadata":{"id":"8t0Do2iSTNSE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df2.to_excel('dataset.xlsx',index=False)"],"metadata":{"id":"C3KGYysiTtsB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"M4h5p7svTcvE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["merged_data.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GQuiywCC1I-Z","executionInfo":{"status":"ok","timestamp":1723302458050,"user_tz":-330,"elapsed":406,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"55a6eff7-7fdc-480e-b860-d89f48298a29"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['CPI_Actual', 'USD_INR_Price', 'USD_INR_Change %', 'crude_Price',\n","       'crude_Change %', 'Actual', 'gold_Price', 'gold_Vol.', 'gold_Change %',\n","       'bond_Price', 'bond_Change %', 'nifty_Price', 'nifty_Vol.',\n","       'nifty_Change %', 'Repo_Rate', 'Inflation Rate (%)', 'Holiday Name',\n","       'GPR', 'GPRC_IND', 'US_Price', 'US_Change %', 'BSE_Price', 'BSE_Vol.',\n","       'BSE_Change %', 'US_federal_target_rate_Actual', 'Previous',\n","       'MCX_Price', 'MCX_Change %', 'WPI_Actual', 'Silver_Price',\n","       'Silver_Change %'],\n","      dtype='object')"]},"metadata":{},"execution_count":275}]},{"cell_type":"code","source":["\n","pd.set_option('display.max_columns', None)\n","\n","merged_data.head()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":417},"id":"SYOxIjmY1RKr","executionInfo":{"status":"ok","timestamp":1723302544994,"user_tz":-330,"elapsed":435,"user":{"displayName":"Kauser tp","userId":"02646945327935860968"}},"outputId":"560d51a3-99ca-4cbb-9f67-8818c5a5bab0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            CPI_Actual  USD_INR_Price  USD_INR_Change %  crude_Price  \\\n","2011-12-19       0.093         52.700            0.0038        93.88   \n","2011-12-20       0.093         52.770            0.0013        97.22   \n","2011-12-21       0.093         52.400           -0.0070        98.67   \n","2011-12-22       0.093         52.565            0.0031        99.53   \n","2011-12-23       0.093         52.790            0.0043        99.68   \n","\n","            crude_Change %  Actual  gold_Price  gold_Vol.  gold_Change %  \\\n","2011-12-19            0.37    0.01     27559.0      67.03           2.61   \n","2011-12-20            3.56    0.01     27734.0      49.63           0.64   \n","2011-12-21            1.49    0.01     27661.0      73.38          -0.26   \n","2011-12-22            0.87    0.01     27552.0      58.81          -0.39   \n","2011-12-23            0.15    0.01     27632.0      29.90           0.29   \n","\n","            bond_Price  bond_Change %  nifty_Price  nifty_Vol.  \\\n","2011-12-19       8.329          -0.60      4613.10      176.45   \n","2011-12-20       8.276          -0.64      4544.20      195.30   \n","2011-12-21       8.340           0.77      4693.15      211.31   \n","2011-12-22       8.333          -0.08      4733.85      170.79   \n","2011-12-23       8.365           0.38      4714.00      141.98   \n","\n","            nifty_Change %  Repo_Rate  Inflation Rate (%) Holiday Name  \\\n","2011-12-19         -0.0083      0.085              8.9118           No   \n","2011-12-20         -0.0149      0.085              8.9118           No   \n","2011-12-21          0.0328      0.085              8.9118           No   \n","2011-12-22          0.0087      0.085              8.9118           No   \n","2011-12-23         -0.0042      0.085              8.9118           No   \n","\n","                  GPR  GPRC_IND  US_Price  US_Change %  BSE_Price  BSE_Vol.  \\\n","2011-12-19  79.634972  0.174591     80.25      -0.0001   15379.34     17.92   \n","2011-12-20  79.634972  0.174591     79.88      -0.0046   15175.08     20.85   \n","2011-12-21  79.634972  0.174591     80.02       0.0018   15685.21     22.05   \n","2011-12-22  79.634972  0.174591     79.96      -0.0007   15813.36     18.89   \n","2011-12-23  79.634972  0.174591     79.93      -0.0004   15738.70     17.04   \n","\n","            BSE_Change %  US_federal_target_rate_Actual  Previous  MCX_Price  \\\n","2011-12-19         -0.72                         0.0025     0.075     913.82   \n","2011-12-20         -1.33                         0.0025     0.075     913.82   \n","2011-12-21          3.36                         0.0025     0.075     913.82   \n","2011-12-22          0.82                         0.0025     0.075     913.82   \n","2011-12-23         -0.47                         0.0025     0.075     913.82   \n","\n","            MCX_Change %  WPI_Actual  Silver_Price  Silver_Change %  \n","2011-12-19           0.0       0.075       52999.0            40.51  \n","2011-12-20           0.0       0.075       53514.0             0.97  \n","2011-12-21           0.0       0.075       53174.0            -0.64  \n","2011-12-22           0.0       0.075       52924.0            -0.47  \n","2011-12-23           0.0       0.075       53098.0             0.33  "],"text/html":["\n","  <div id=\"df-86744741-c67b-4506-a271-39bed3d940f2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CPI_Actual</th>\n","      <th>USD_INR_Price</th>\n","      <th>USD_INR_Change %</th>\n","      <th>crude_Price</th>\n","      <th>crude_Change %</th>\n","      <th>Actual</th>\n","      <th>gold_Price</th>\n","      <th>gold_Vol.</th>\n","      <th>gold_Change %</th>\n","      <th>bond_Price</th>\n","      <th>bond_Change %</th>\n","      <th>nifty_Price</th>\n","      <th>nifty_Vol.</th>\n","      <th>nifty_Change %</th>\n","      <th>Repo_Rate</th>\n","      <th>Inflation Rate (%)</th>\n","      <th>Holiday Name</th>\n","      <th>GPR</th>\n","      <th>GPRC_IND</th>\n","      <th>US_Price</th>\n","      <th>US_Change %</th>\n","      <th>BSE_Price</th>\n","      <th>BSE_Vol.</th>\n","      <th>BSE_Change %</th>\n","      <th>US_federal_target_rate_Actual</th>\n","      <th>Previous</th>\n","      <th>MCX_Price</th>\n","      <th>MCX_Change %</th>\n","      <th>WPI_Actual</th>\n","      <th>Silver_Price</th>\n","      <th>Silver_Change %</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2011-12-19</th>\n","      <td>0.093</td>\n","      <td>52.700</td>\n","      <td>0.0038</td>\n","      <td>93.88</td>\n","      <td>0.37</td>\n","      <td>0.01</td>\n","      <td>27559.0</td>\n","      <td>67.03</td>\n","      <td>2.61</td>\n","      <td>8.329</td>\n","      <td>-0.60</td>\n","      <td>4613.10</td>\n","      <td>176.45</td>\n","      <td>-0.0083</td>\n","      <td>0.085</td>\n","      <td>8.9118</td>\n","      <td>No</td>\n","      <td>79.634972</td>\n","      <td>0.174591</td>\n","      <td>80.25</td>\n","      <td>-0.0001</td>\n","      <td>15379.34</td>\n","      <td>17.92</td>\n","      <td>-0.72</td>\n","      <td>0.0025</td>\n","      <td>0.075</td>\n","      <td>913.82</td>\n","      <td>0.0</td>\n","      <td>0.075</td>\n","      <td>52999.0</td>\n","      <td>40.51</td>\n","    </tr>\n","    <tr>\n","      <th>2011-12-20</th>\n","      <td>0.093</td>\n","      <td>52.770</td>\n","      <td>0.0013</td>\n","      <td>97.22</td>\n","      <td>3.56</td>\n","      <td>0.01</td>\n","      <td>27734.0</td>\n","      <td>49.63</td>\n","      <td>0.64</td>\n","      <td>8.276</td>\n","      <td>-0.64</td>\n","      <td>4544.20</td>\n","      <td>195.30</td>\n","      <td>-0.0149</td>\n","      <td>0.085</td>\n","      <td>8.9118</td>\n","      <td>No</td>\n","      <td>79.634972</td>\n","      <td>0.174591</td>\n","      <td>79.88</td>\n","      <td>-0.0046</td>\n","      <td>15175.08</td>\n","      <td>20.85</td>\n","      <td>-1.33</td>\n","      <td>0.0025</td>\n","      <td>0.075</td>\n","      <td>913.82</td>\n","      <td>0.0</td>\n","      <td>0.075</td>\n","      <td>53514.0</td>\n","      <td>0.97</td>\n","    </tr>\n","    <tr>\n","      <th>2011-12-21</th>\n","      <td>0.093</td>\n","      <td>52.400</td>\n","      <td>-0.0070</td>\n","      <td>98.67</td>\n","      <td>1.49</td>\n","      <td>0.01</td>\n","      <td>27661.0</td>\n","      <td>73.38</td>\n","      <td>-0.26</td>\n","      <td>8.340</td>\n","      <td>0.77</td>\n","      <td>4693.15</td>\n","      <td>211.31</td>\n","      <td>0.0328</td>\n","      <td>0.085</td>\n","      <td>8.9118</td>\n","      <td>No</td>\n","      <td>79.634972</td>\n","      <td>0.174591</td>\n","      <td>80.02</td>\n","      <td>0.0018</td>\n","      <td>15685.21</td>\n","      <td>22.05</td>\n","      <td>3.36</td>\n","      <td>0.0025</td>\n","      <td>0.075</td>\n","      <td>913.82</td>\n","      <td>0.0</td>\n","      <td>0.075</td>\n","      <td>53174.0</td>\n","      <td>-0.64</td>\n","    </tr>\n","    <tr>\n","      <th>2011-12-22</th>\n","      <td>0.093</td>\n","      <td>52.565</td>\n","      <td>0.0031</td>\n","      <td>99.53</td>\n","      <td>0.87</td>\n","      <td>0.01</td>\n","      <td>27552.0</td>\n","      <td>58.81</td>\n","      <td>-0.39</td>\n","      <td>8.333</td>\n","      <td>-0.08</td>\n","      <td>4733.85</td>\n","      <td>170.79</td>\n","      <td>0.0087</td>\n","      <td>0.085</td>\n","      <td>8.9118</td>\n","      <td>No</td>\n","      <td>79.634972</td>\n","      <td>0.174591</td>\n","      <td>79.96</td>\n","      <td>-0.0007</td>\n","      <td>15813.36</td>\n","      <td>18.89</td>\n","      <td>0.82</td>\n","      <td>0.0025</td>\n","      <td>0.075</td>\n","      <td>913.82</td>\n","      <td>0.0</td>\n","      <td>0.075</td>\n","      <td>52924.0</td>\n","      <td>-0.47</td>\n","    </tr>\n","    <tr>\n","      <th>2011-12-23</th>\n","      <td>0.093</td>\n","      <td>52.790</td>\n","      <td>0.0043</td>\n","      <td>99.68</td>\n","      <td>0.15</td>\n","      <td>0.01</td>\n","      <td>27632.0</td>\n","      <td>29.90</td>\n","      <td>0.29</td>\n","      <td>8.365</td>\n","      <td>0.38</td>\n","      <td>4714.00</td>\n","      <td>141.98</td>\n","      <td>-0.0042</td>\n","      <td>0.085</td>\n","      <td>8.9118</td>\n","      <td>No</td>\n","      <td>79.634972</td>\n","      <td>0.174591</td>\n","      <td>79.93</td>\n","      <td>-0.0004</td>\n","      <td>15738.70</td>\n","      <td>17.04</td>\n","      <td>-0.47</td>\n","      <td>0.0025</td>\n","      <td>0.075</td>\n","      <td>913.82</td>\n","      <td>0.0</td>\n","      <td>0.075</td>\n","      <td>53098.0</td>\n","      <td>0.33</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-86744741-c67b-4506-a271-39bed3d940f2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-86744741-c67b-4506-a271-39bed3d940f2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-86744741-c67b-4506-a271-39bed3d940f2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1e9ceb94-be37-4693-8cab-70f9e1c5bb78\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1e9ceb94-be37-4693-8cab-70f9e1c5bb78')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1e9ceb94-be37-4693-8cab-70f9e1c5bb78 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"merged_data"}},"metadata":{},"execution_count":278}]},{"cell_type":"code","source":["import pandas as pd\n","\n","# Before merging, all datasets were preprocessed. This included:\n","# - Renaming columns where necessary (e.g., processed_vix.rename(columns={'index': 'Date', 'Previous': 'vix'}))\n","# - Interpolating missing values and forward/backward filling where required\n","# - Reindexing datasets to ensure consistent date ranges (e.g., holiday_daily, gpr_daily)\n","# - Dropping unnecessary columns like 'Date' after setting it as the index\n","# - Handling missing data through appropriate methods (e.g., interpolation, filling)\n","\n","# List of all your processed dataframes\n","dataframes = [\n","    processed_cpi,\n","    processed_usd_inr,\n","    processed_crude_oil,\n","    processed_ecb,\n","    processed_gold,\n","    processed_bond,\n","    nifty_interpolated,\n","    processed_repo_rate,\n","    inflation_rate_daily,\n","    holiday_daily,\n","    gpr_daily,\n","    us_dollar_daily,\n","    bse_daily,\n","    federal_rate_daily,\n","    reverse_repo_daily,\n","    wpi_daily,\n","    silver_mini_daily\n","]\n","\n","# Merge all dataframes on the Date index\n","merged_data = pd.concat(dataframes, axis=1)\n","\n","# Check for missing values after merging\n","print(\"Shape of the merged data:\", merged_data.shape)\n","print(\"Number of missing values per column:\\n\", merged_data.isnull().sum())\n","\n","# Save the merged dataset to an Excel file\n","merged_data.to_excel('final_dataset.xlsx', index=True)"],"metadata":{"id":"Y202AJ5ru3q2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","\n","# Preprocessed datasets are combined based on the Date index\n","dataframes = [ processed_cpi, processed_usd_inr, processed_crude_oil, processed_ecb,\n","    processed_gold, processed_bond, nifty_interpolated, processed_repo_rate,\n","    inflation_rate_daily, holiday_daily, gpr_daily, us_dollar_daily,\n","    bse_daily, federal_rate_daily, reverse_repo_daily, wpi_daily, silver_mini_daily]\n","\n","# Merge all dataframes\n","merged_data = pd.concat(dataframes, axis=1)\n","\n","# Check for missing values\n","print(\"Shape:\", merged_data.shape)\n","print(\"Missing values:\\n\", merged_data.isnull().sum())\n","\n","# Save the merged dataset\n","merged_data.to_excel('final_dataset.xlsx', index=True)\n"],"metadata":{"id":"KnFGDchmIaC_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Load CSV\n","df = pd.read_csv('your_data.csv', parse_dates=['Date'])\n","df['time_idx'] = df.index\n","df['group_id'] = 0  # Single group assumption\n","\n","# Remove weekends and add time-related features\n","df = df[~df['Date'].dt.day_name().isin(['Saturday', 'Sunday'])]\n","df['day_of_week'] = df['Date'].dt.day_name()\n","df['month'] = df['Date'].dt.month_name()\n","\n","# Prepare dataset for prediction\n","data = TimeSeriesDataSet(\n","    df,\n","    time_idx=\"time_idx\",\n","    target=\"Gold Price\",\n","    group_ids=[\"group_id\"],\n","    max_encoder_length=30,\n","    max_prediction_length=7,\n","    time_varying_known_reals=['USD/INR', 'Crude Price', 'Bond Price', 'Nifty Price', 'Repo Rate',\n","                              'Inflation Rate (%)', 'GPR', 'GPRC IND', 'BSE Price', 'US federal', 'WPI', 'Silver Price'],\n","    time_varying_unknown_reals=[\"Gold Price\", \"Gold Vol\", \"Gold Change %\"],\n","    add_relative_time_idx=True,\n","    add_target_scales=True,\n","    add_encoder_length=True,\n","    allow_missing_timesteps=True\n",")\n","\n","# Prediction DataLoader\n","dataloader = data.to_dataloader(train=False, batch_size=64)\n","\n","# Load pre-trained model\n","tft = TemporalFusionTransformer.load_from_checkpoint('tft_model_checkpoint.ckpt')\n","\n","# Make predictions\n","predictions = tft.predict(dataloader)\n","\n","# Save predictions to CSV\n","pd.DataFrame(predictions.numpy(), columns=[\"Predicted Gold Price\"]).to_csv('predictions.csv', index=False)\n"],"metadata":{"id":"lhqmC9ydKq9g"},"execution_count":null,"outputs":[]}]}